<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BuildMasterCore</name>
    </assembly>
    <members>
        <member name="T:Inedo.BuildMaster.Agents.AgentDateTime">
            <summary>
            A cross-platform serializable wrapper for System.DateTime.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentDateTime.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Agents.AgentDateTime"/> struct.
            </summary>
            <param name="dateTime">The System.DateTime.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentDateTime.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Agents.AgentDateTime"/> struct.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentDateTime.op_Implicit(Inedo.BuildMaster.Agents.AgentDateTime)~System.DateTime">
            <summary>
            Performs an implicit conversion from <see cref="T:Inedo.BuildMaster.Agents.AgentDateTime"/> to <see cref="T:System.DateTime"/>.
            </summary>
            <param name="inst">The value to convert.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentDateTime.op_Implicit(System.DateTime)~Inedo.BuildMaster.Agents.AgentDateTime">
            <summary>
            Performs an implicit conversion from <see cref="T:System.DateTime"/> to <see cref="T:Inedo.BuildMaster.Agents.AgentDateTime"/>.
            </summary>
            <param name="inst">The value to convert.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentDateTime.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentDateTime.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
            <exception cref="T:System.Security.SecurityException">
            The caller does not have the required permission.
            </exception>
        </member>
        <member name="T:Inedo.BuildMaster.Agents.AgentInfo2">
            <summary>
            Represents the status of an <see cref="T:Inedo.BuildMaster.Agents.IAgent"/>.
            </summary>
            <remarks>
            This contains more information than <see cref="T:Inedo.BuildMaster.Agents.AgentInfo"/>.
            </remarks>
        </member>
        <member name="T:Inedo.BuildMaster.Agents.AgentInfo">
            <summary>
            Represents the status of an <see cref="T:Inedo.BuildMaster.Agents.IAgent"/>.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentInfo.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Inedo.BuildMaster.Agents.AgentInfo"/> class from being created.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentInfo.#ctor(System.String[],System.String[],Inedo.BuildMaster.Agents.AgentStatuses,Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteExecutionStatus,Inedo.BuildMaster.Files.FileEntryInfo[])">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Agents.AgentInfo"/> class.
            </summary>
            <param name="extensionAssemblies">The extension assemblies.</param>
            <param name="coreAssemblies">The core assemblies.</param>
            <param name="status">The status.</param>
            <param name="remoteExecutionStatus">The remote execution status.</param>
            <param name="extensionFiles">The extension files.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentInfo.System#Xml#Serialization#IXmlSerializable#GetSchema">
            <summary>
            This method is reserved and should not be used. When implementing the IXmlSerializable interface, you should return null (Nothing in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute"/> to the class.
            </summary>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema"/> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"/> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"/> method.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentInfo.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentInfo.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> stream to which the object is serialized.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentInfo.GetXmlSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Referenced by the XmlSchemaProvider attribute, and used as a work-around
            for failed auto-WSDL generation.
            </summary>
            <param name="schemas">The schema set.</param>
            <returns>The schema type.</returns>
        </member>
        <member name="P:Inedo.BuildMaster.Agents.AgentInfo.ExtensionAssemblies">
            <summary>
            Gets a string array of assembly names (using <see cref="P:System.Reflection.Assembly.FullName"/>)
            from the extensions root.
            </summary>   
        </member>
        <member name="P:Inedo.BuildMaster.Agents.AgentInfo.ExtensionFiles">
            <summary>
            Gets an array of files in the extensions root path.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Agents.AgentInfo.CoreAssemblies">
            <summary>
            Gets a string array of assembly names (using <see cref="P:System.Reflection.Assembly.FullName"/>)
            from the private path (/bin).
            </summary>   
        </member>
        <member name="P:Inedo.BuildMaster.Agents.AgentInfo.Status">
            <summary>
            Gets the status of the agent.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Agents.AgentInfo.RemoteExecutionStatus">
            <summary>
            Gets the <see cref="P:Inedo.BuildMaster.Agents.AgentInfo.RemoteExecutionStatus"/> for when a <see cref="T:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase"/> is
            executing, or null if no action is executing.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentInfo2.#ctor(System.String[],System.String[],Inedo.BuildMaster.Agents.AgentStatuses,Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteExecutionStatus,Inedo.BuildMaster.Files.FileEntryInfo[],System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Agents.AgentInfo2"/> class.
            </summary>
            <param name="extensionAssemblies">The extension assemblies.</param>
            <param name="coreAssemblies">The core assemblies.</param>
            <param name="status">The status.</param>
            <param name="remoteExecutionStatus">The remote execution status.</param>
            <param name="extensionFiles">The extension files.</param>
            <param name="platform">The platform.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentInfo2.#ctor(Inedo.BuildMaster.Agents.AgentInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Agents.AgentInfo2"/> class.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Agents.AgentInfo2.Platform">
            <summary>
            Gets the platform the agent is running on.
            </summary>
            <remarks>
            This should be one of the values in <see cref="T:Inedo.BuildMaster.Agents.AgentPlatforms"/> or Unknown.
            </remarks>
        </member>
        <member name="T:Inedo.BuildMaster.Agents.AgentPlatforms">
            <summary>
            Contains names of supported BuildMaster Agent platforms.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Agents.AgentPlatforms.WindowsIIS">
            <summary>
            The Agent is running on Windows under IIS.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Agents.AgentPlatforms.WindowsWCF">
            <summary>
            The Agent is running on Windows as a WCF service.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Agents.AgentPlatforms.WindowsTCP">
            <summary>
            The Agent is running on WIndows as a TCP service.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Agents.AgentPlatforms.LinuxMono">
            <summary>
            The Agent is running on Linux using Mono.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StandardDataFactory">
            <summary>
            Represents the standard (SQL-Server based) <see cref="!:DataFactory"/>
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StandardDataFactory.SetGetUserNameDelegate(Inedo.Func{System.String})">
            <summary>
            Sets the delegate used to obtain the current user name.
            </summary>
            <param name="getUserName">Delegate used to obtain the current user name.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Diagnostics.IMessenger">
            <summary>
            Represents something which can deliver messages
            </summary>
            <remarks>
            Note to consumers: do not shoot the <see cref="T:Inedo.BuildMaster.Diagnostics.IMessenger"/>
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Diagnostics.IMessenger.Message(Inedo.BuildMaster.Diagnostics.MessageLevels,System.String,System.Object[])">
            <summary>
            Messages the specified message level.
            </summary>
            <param name="messageLevel">The message level.</param>
            <param name="messageOrFormat">The message or format.</param>
            <param name="args">The args.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Diagnostics.Logger">
            <summary>
            The Logger
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Diagnostics.Logger.AddDatabaseErrorMessenger">
            <summary>
            Adds the database error messenger.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Diagnostics.Logger.AddConsoleMessenger">
            <summary>
            Adds the console messenger.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Diagnostics.Logger.Debug(System.String)">
            <summary>
            Writes the specified message with <see cref="F:Inedo.BuildMaster.Diagnostics.MessageLevels.Debug"/>
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Diagnostics.Logger.Debug(System.String,System.Object[])">
            <summary>
            Writes the specified message with <see cref="F:Inedo.BuildMaster.Diagnostics.MessageLevels.Debug"/> and <see cref="M:System.String.Format(System.String,System.Object[])"/> formatting
            </summary>
            <param name="format">The format.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Diagnostics.Logger.Information(System.String)">
            <summary>
            Writes the specified message with <see cref="F:Inedo.BuildMaster.Diagnostics.MessageLevels.Information"/>
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Diagnostics.Logger.Information(System.String,System.Object[])">
            <summary>
            Writes the specified message with <see cref="F:Inedo.BuildMaster.Diagnostics.MessageLevels.Information"/> and <see cref="M:System.String.Format(System.String,System.Object[])"/> formatting
            </summary>
            <param name="format">The format.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Diagnostics.Logger.Warning(System.String)">
            <summary>
            Writes the specified message with <see cref="F:Inedo.BuildMaster.Diagnostics.MessageLevels.Warning"/>
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Diagnostics.Logger.Warning(System.String,System.Object[])">
            <summary>
            Writes the specified message with <see cref="F:Inedo.BuildMaster.Diagnostics.MessageLevels.Warning"/> and <see cref="M:System.String.Format(System.String,System.Object[])"/> formatting
            </summary>
            <param name="format">The format.</param>
            <param name="args">The args.</param>        
        </member>
        <member name="M:Inedo.BuildMaster.Diagnostics.Logger.Error(System.String)">
            <summary>
            Writes the specified message with <see cref="F:Inedo.BuildMaster.Diagnostics.MessageLevels.Error"/>
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Diagnostics.Logger.Error(System.String,System.Object[])">
            <summary>
            Writes the specified message with <see cref="F:Inedo.BuildMaster.Diagnostics.MessageLevels.Error"/> and <see cref="M:System.String.Format(System.String,System.Object[])"/> formatting
            </summary>
            <param name="format">The format.</param>
            <param name="args">The args.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Diagnostics.Tracer">
            <summary>
            A wrapper class around <see cref="T:System.Diagnostics.Trace"/> and related classes
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.BuildMasterFactoryBase`1">
            <summary>
            Used internally by the BuildMasterCore, provides instance creation functionality.
            </summary>
            <typeparam name="TFactory">Type of the factory.</typeparam>
        </member>
        <member name="M:Inedo.BuildMaster.Diagnostics.Tracer.AddListener(System.Diagnostics.TraceListener)">
            <summary>
            When a trace listener 
            </summary>
            <param name="listener"></param>
        </member>
        <member name="M:Inedo.BuildMaster.Diagnostics.Tracer.Debug(System.String)">
            <summary>
            Writes the specified message with <see cref="F:Inedo.BuildMaster.Diagnostics.MessageLevels.Debug"/>
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Diagnostics.Tracer.Debug(System.String,System.Object[])">
            <summary>
            Writes the specified message with <see cref="F:Inedo.BuildMaster.Diagnostics.MessageLevels.Debug"/> and <see cref="M:System.String.Format(System.String,System.Object[])"/> formatting
            </summary>
            <param name="format">The format.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Diagnostics.Tracer.Information(System.String)">
            <summary>
            Writes the specified message with <see cref="F:Inedo.BuildMaster.Diagnostics.MessageLevels.Information"/>
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Diagnostics.Tracer.Information(System.String,System.Object[])">
            <summary>
            Writes the specified message with <see cref="F:Inedo.BuildMaster.Diagnostics.MessageLevels.Information"/> and <see cref="M:System.String.Format(System.String,System.Object[])"/> formatting
            </summary>
            <param name="format">The format.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Diagnostics.Tracer.Warning(System.String)">
            <summary>
            Writes the specified message with <see cref="F:Inedo.BuildMaster.Diagnostics.MessageLevels.Warning"/>
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Diagnostics.Tracer.Warning(System.String,System.Object[])">
            <summary>
            Writes the specified message with <see cref="F:Inedo.BuildMaster.Diagnostics.MessageLevels.Warning"/> and <see cref="M:System.String.Format(System.String,System.Object[])"/> formatting
            </summary>
            <param name="format">The format.</param>
            <param name="args">The args.</param>        
        </member>
        <member name="M:Inedo.BuildMaster.Diagnostics.Tracer.Error(System.String)">
            <summary>
            Writes the specified message with <see cref="F:Inedo.BuildMaster.Diagnostics.MessageLevels.Error"/>
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Diagnostics.Tracer.Error(System.String,System.Object[])">
            <summary>
            Writes the specified message with <see cref="F:Inedo.BuildMaster.Diagnostics.MessageLevels.Error"/> and <see cref="M:System.String.Format(System.String,System.Object[])"/> formatting
            </summary>
            <param name="format">The format.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Diagnostics.Tracer.TraceMessage(Inedo.BuildMaster.Diagnostics.MessageLevels,System.String,System.Object[])">
            <summary>
            Traces the specified message
            </summary>
            <param name="messageLevel">Serverity of the message to trace</param>
            <param name="messageOrFormat">when args is null, this is the message; otherwise, it's the format string for the message</param>
            <param name="args">arguments to the formatstring</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.ActionBase">
            <summary>
            Represents the base class for all Actions.
            </summary>
            <remarks>
            It is normally not necessary to inherit <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionBase"/> directly. A direct subclass
            will only be able to execute on the BuildMaster server and not on an Agent without
            explicit remoting calls. In most cases, you should inherit <see cref="T:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase"/> or
            <see cref="T:Inedo.BuildMaster.Extensibility.Actions.CommandLineActionBase"/> instead.
            </remarks>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.IExtensible">
            <summary>
            A marker interface that indicates the target class is designed for
            run-time extensibility.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.Execute">
            <summary>
            This method is called to execute the Action.
            </summary>
            <remarks>
            This method is always invoked on the BuildMaster server.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.Log(Inedo.BuildMaster.Diagnostics.MessageLevels,System.String)">
            <summary>
            Writes the specified message to the Action's log.
            </summary>
            <param name="logLevel">Log level of the message.</param>
            <param name="message">Message to log.</param>
            <remarks>
            Instead of calling <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.Log(Inedo.BuildMaster.Diagnostics.MessageLevels,System.String)"/> directly, it is often more convenient
            to call the more specific <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogDebug(System.String,System.Object[])"/>,
            <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogError(System.String,System.Object[])"/>, <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogInformation(System.String,System.Object[])"/>,
            or <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogWarning(System.String,System.Object[])"/> method.
            </remarks>
            <seealso cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogDebug(System.String,System.Object[])"/>
            <seealso cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogInformation(System.String,System.Object[])"/>
            <seealso cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogWarning(System.String,System.Object[])"/>
            <seealso cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogError(System.String,System.Object[])"/>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogDebug(System.String)">
            <summary>
            Logs the specified message to the Action's log with a Debug log level.
            </summary>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogDebug(System.String,System.Object[])">
            <summary>
            Logs the specified message to the Action's log with a Debug log level.
            </summary>
            <param name="messageFmt">Message to log as a composite format string.</param>
            <param name="args">Arguments for the composite format string.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogError(System.String)">
            <summary>
            Logs the specified message to the Action's log with an Error log level.
            </summary>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogError(System.String,System.Object[])">
            <summary>
            Logs the specified message to the Action's log with an Error log level.
            </summary>
            <param name="messageFmt">Message to log as a composite format string.</param>
            <param name="args">Arguments for the composite format string.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogInformation(System.String)">
            <summary>
            Logs the specified message to the Action's log with an Information log level.
            </summary>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogInformation(System.String,System.Object[])">
            <summary>
            Logs the specified message to the Action's log with an Information log level.
            </summary>
            <param name="messageFmt">Message to log as a composite format string.</param>
            <param name="args">Arguments for the composite format string.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogWarning(System.String)">
            <summary>
            Logs the specified message to the Action's log with a Warning log level.
            </summary>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogWarning(System.String,System.Object[])">
            <summary>
            Logs the specified message to the Action's log with a Warning log level.
            </summary>
            <param name="messageFmt">Message to log as a composite format string.</param>
            <param name="args">Arguments for the composite format string.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.HasConfigurerSettings">
            <summary>
            Returns a value indicating whether the action uses one or more settings in its
            extension configurer.
            </summary>
            <returns>True if the action uses at least one configurer settings; otherwise false.</returns>
            <remarks>
            Unless overridden by an action, this method returns true if the extension has a configurer
            regardless of whether it actually uses the configurer.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.IsConfigurerSettingRequired">
            <summary>
            Returns a value indicating whether the extension's configurer currently needs to be
            configured.
            </summary>
            <returns>True if configurer requires configuration; otherwise false.</returns>
            <remarks>
            Unless overridden by an action, this method always returns false.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.GetExtensionConfigurer">
            <summary>
            Gets the <see cref="T:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerBase"/> associated with the action.
            </summary>
            <returns>The extension configurer.</returns>
            <remarks>
                <para>
                    When an <see cref="T:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerBase"/> is associated with this assembly, 
                    this will return the first item below that is available:
                </para>
                <list type="number">
                    <item>
                        <description>The configuration associated with the profile selected in the deployment plan.</description>
                    </item>
                    <item>
                        <description>The global configuration.</description>
                    </item>
                    <item>
                        <description>An instance with default values.</description>
                    </item>
                </list>
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.NewExtensionConfigurer">
            <summary>
            Returns the <see cref="T:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerBase"/> used internally by 
            the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionBase"/> when executed within the <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.Execute"/> method.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the Action.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current configuration of the Action.
            </returns>
            <remarks>
            This should return a user-friendly string describing what the Action does
            and the state of its important persistent properties.
            </remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ActionBase.Timeout">
            <summary>
            Gets the number of seconds the action should execute before failing.
            </summary>
            <remarks>
            When 0, timeout is infinite.
            </remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ActionBase.IsExecuting">
            <summary>
            Gets a value indicating whether the Action is in the primary stage
            (i.e. <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.Execute"/>) of execution.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ActionBase.Context">
            <summary>
            Gets the execution context of the action.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ActionBase.ResumeNextOnError">
            <summary>
            Gets a value indicating whether the plan should continue executing even if this Action
            throws an exception or logs an error.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogErrorsAsWarnings">
            <summary>
            Gets a value indicating whether errors will be logged as warnings.
            </summary>
        </member>
        <member name="E:Inedo.BuildMaster.Extensibility.Actions.ActionBase.BeforeExecute">
            <summary>
            Raised before the <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.Execute"/> method is invoked.
            </summary>
        </member>
        <member name="E:Inedo.BuildMaster.Extensibility.Actions.ActionBase.LogReceived">
            <summary>
            Raised when a log message has been received.
            </summary>
        </member>
        <member name="E:Inedo.BuildMaster.Extensibility.Actions.ActionBase.AfterExecute">
            <summary>
            Raised after the <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.Execute"/> method has returned.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ActionBase.ConfigurerType">
            <summary>
            Gets the type of extension configurer used by the action.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.ActionExecuterBase">
            <summary>
            Represents a helper class used to execute an action.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionExecuterBase.#ctor(Inedo.BuildMaster.Extensibility.Actions.ActionBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionExecuterBase"/> class.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionExecuterBase.Log(Inedo.BuildMaster.Diagnostics.MessageLevels,System.String)">
            <summary>
            Writes the specified message to the action's log.
            </summary>
            <param name="logLevel">Log level of the message.</param>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionExecuterBase.GetExecutionContext">
            <summary>
            When implemented in a derived class, creates the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ExecutionContext"/> used in the
            <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionExecuterBase.ExecuteAction(System.Boolean,System.Boolean)"/> method.
            </summary>
            <returns>Instance of <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ExecutionContext"/>.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionExecuterBase.GetExtensionConfigurer">
            <summary>
            Returns the <see cref="T:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerBase"/> used internally by 
            the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionBase"/> when executed within the <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionExecuterBase.ExecuteAction(System.Boolean,System.Boolean)"/> method.
            </summary>
            <returns>Instance of <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ExecutionContext"/>.</returns>        
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionExecuterBase.ExecuteAction(System.Boolean,System.Boolean)">
            <summary>
            Executes the action.
            </summary>
            <param name="resumeOnError">Value indicating whether exeuction should continue if there is an error.</param>
            <param name="logErrorsAsWarnings">Value indicating whether errors should be logged as warnings.</param>
            <returns>Value indicating whether the execution was successful.</returns>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ActionExecuterBase.Action">
            <summary>
            Gets the underlying action associated with the executer.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.ActionPropertiesAttribute">
            <summary>
            Describes what an action is and does for an end-user.
            </summary>
            <remarks>
            This attribute must be applied to an Action for it to be usable in BuildMaster.
            </remarks>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.ExtensionPropertiesAttribute">
            <summary>
            Describes what an extension is and does for an end-user.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.ExtensionPropertiesAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.ExtensionPropertiesAttribute"/> class.
            </summary>
            <param name="name">The name of the extension.</param>
            <param name="description">The description of the extension.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.ExtensionPropertiesAttribute.Name">
            <summary>
            Gets the user-friendly name of the extension.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.ExtensionPropertiesAttribute.Description">
            <summary>
            Gets the user-friendly description of the extension.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.ExtensionPropertiesAttribute.IconResource">
            <summary>
            Gets or sets the name of a resource in the extension's assembly that
            contains a PNG-format icon.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ActionPropertiesAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionPropertiesAttribute"/> class.
            </summary>
            <param name="name">The friendly name of the Action.</param>
            <param name="description">The description of the Action.</param>
            <param name="category">The category which will contain the Action in the user-interface.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ActionPropertiesAttribute.Category">
            <summary>
            Gets or sets the user-friendly category name of the action.
            </summary>
            <remarks>
            There are several standard categories, including:
            * Files
            * Source Control
            * Issue Tracking
            * Artifact
            * General
            * Testing
            
            Generally speaking, actions based on a specific technology (such 
            as SQL Server or .NET 2.0) should be placed in their own category.
            </remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ActionPropertiesAttribute.DefaultToLocalServer">
            <summary>
            Gets or sets a value indicating whether the Action
            should default to executing on the local server.
            </summary>
            <remarks>
            This only applies to Actions deriving from <see cref="T:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase"/>.
            </remarks>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.IssueTracking.IssueTrackingActionBase">
            <summary>
            Base class for an Action that is to be used with a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackingProviderBase"/>.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction`1">
            <summary>
            Represents a <see cref="T:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase"/> with a sole purpose of wrapping a 
            <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ProviderBase"/>'s functionality
            </summary>
            <remarks>
            While all actions (<see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionBase"/>) come with a set of <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ProviderBase"/>
            to use, a ProviderBasedAction is designed to work with a specific type of abstract provider
            and allow the action to override the provider set in context
            </remarks>
            <typeparam name="T">abstract ProviderType to wrap</typeparam>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase">
            <summary>
            The base class for Actions that can execute remotely
            on a BuildMaster Agent.
            </summary>
            <remarks>
            Inheriting from the class will allow an Action to be executed
            on any server in the BuildMaster UI. For a more specialized
            class which wraps command-line execution on a remote server,
            see <see cref="T:Inedo.BuildMaster.Extensibility.Actions.CommandLineActionBase"/>. For an Action that
            will only execute on the BuildMaster server, see <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionBase"/>.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.ExecuteRemoteCommand(System.String)">
            <summary>
            Executes the specified Action-defined command against the remotely running
            agent, which is then processed by the Action-defined <see cref="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.ProcessRemoteCommand(System.String,System.String[])"/>.
            </summary>
            <param name="name">Action-defined command name.</param>
            <returns>Action-defined return string.</returns>
            <remarks>
            This method is meant to be called from the <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.Execute"/> method to
            begin remote execution. Additionally, this method has been deprecated if the consuming agent
            type is anything other than the SOAP/TCP variety. The new recommended approach is to call
            Util.Agents.CreateAgentFromId(...) and cast to the appropriate interface (e.g. IFileOperationsExecuter)
            in order to perform remote actions on an agent.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.ExecuteRemoteCommand(System.String,System.String[])">
            <summary>
            Executes the specified Action-defined command with the specified Action-defined arguments
            against the remotely running
            agent, which is then processed by the Action-defined <see cref="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.ProcessRemoteCommand(System.String,System.String[])"/>.
            </summary>
            <param name="name">Action-defined command name.</param>
            <param name="args">Action-defined command arguments.</param>
            <returns>Action-defined return string</returns>
            <remarks>
            This method is meant to be called from the <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.Execute"/> method to
            begin remote execution.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.BeforeProcessRemoteCommand">
            <summary>
            Invoked before <see cref="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.ProcessRemoteCommand(System.String,System.String[])"/> is called.
            </summary>
            <remarks>
            This method may be implemented in derived classes to perform initialization
            after the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase"/> has been deserialized on a remote agent.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.AfterProcessRemoteCommand">
            <summary>
            Invoked after <see cref="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.ProcessRemoteCommand(System.String,System.String[])"/> returns.
            </summary>
            <remarks>
            This method may be implemented in derived clases to perform cleanup or other actions
            on the remote agent after executing the command.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.ProcessRemoteCommand(System.String,System.String[])">
            <summary>
            When implemented in a derived class, processes an arbitrary command
            on the appropriate server.
            </summary>
            <param name="name">Name of command to process.</param>
            <param name="args">Optional command arguments.</param>
            <returns>Result of the command.</returns>
            <remarks>
            This method is always invoked on the remote server by the system and should
            never be called directly. To begin remote execution from the <see cref="M:Inedo.BuildMaster.Extensibility.Actions.ActionBase.Execute"/>
            method, call <see cref="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.ExecuteRemoteCommand(System.String,System.String[])"/>.
            </remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.ServerId">
            <summary>
            Gets the server ID that the action will make remote calls against.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.OverriddenWorkingDirectory">
            <summary>
            Gets or sets the Working Directory override.
            </summary>
            <remarks>
            When null or string.Empty, the default Working Directory is used.
            </remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.OverriddenSourceDirectory">
            <summary>
            Gets or sets the Source Directory override.
            </summary>
            <remarks>
            When null or string.Empty, the default Source Directory is used.
            </remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.OverriddenTargetDirectory">
            <summary>
            Gets or sets the Target Directory override.
            </summary>
            <remarks>
            When null or string.Empty, the default Target Directory is used.
            </remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.IsExecutingRemotely">
            <summary>
            Gets a value indicating whether the code is executing locally or on the remote agent.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.RemoteConfiguration">
            <summary>
            Gets the configuration of the remote server (or null if the ServerId
            has not been set).
            </summary>
        </member>
        <member name="E:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.RemoteCommand">
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="E:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.InitializeRemoteConfiguration">
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction`1"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction`1.BeforeProcessRemoteCommand">
            <summary>
            Invoked before <see cref="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.ProcessRemoteCommand(System.String,System.String[])"/> is called.
            </summary>
            <remarks>
            This method may be implemented in derived classes to perform initialization
            after the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase"/> has been deserialized on a remote agent.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction`1.AfterProcessRemoteCommand">
            <summary>
            Invoked after <see cref="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.ProcessRemoteCommand(System.String,System.String[])"/> returns.
            </summary>
            <remarks>
            This method may be implemented in derived clases to perform cleanup or other actions
            on the remote agent after executing the command.
            </remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction`1.ProviderId">
            <summary>
            Gets or sets the Provider ID associated with the action.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction`1.ProviderName">
            <summary>
            When the <see cref="P:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction`1.ProviderId"/> is less than or equal to 0, gets or sets the 
            Provider Name associated with the action; 
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction`1.Provider">
            <summary>
            Gets the Provider associated with the action.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.IssueTracking.IssueTrackingActionBase.InitializeProvider">
            <summary>
            Initializes the provider.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.ExecutionContext">
            <summary>
            Provides key information about the current execution of an Action.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.ExecutionContext.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Int64,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ExecutionContext"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ExecutionContext.ExecutionID">
            <summary>
            Gets the ID of the execution in which the plan is running.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ExecutionContext.ExecutionPlanActionId">
            <summary>
            Gets the ID of the plan that the Action is executing in.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ExecutionContext.ApplicationId">
            <summary>
            Gets the ID of the application which contains the executing plan.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ExecutionContext.DeployableId">
            <summary>
            Gets the ID of the deployable (or 0 if no deployable is applicable)
            associated with the executing plan.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ExecutionContext.ReleaseNumber">
            <summary>
            Gets the release number of the application which
            contains the executing plan.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ExecutionContext.BuildNumber">
            <summary>
            Gets the build number of the application which
            contains the executing plan.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ExecutionContext.NumericReleaseNumber">
            <summary>
            Gets the numeric representation of the release number of
            the application which contains the executing plan.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.ExecutionContext.Variables">
            <summary>
            Gets a collection of variable names and values.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.IActionNameProvider">
            <summary>
            Represents an <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionBase"/> that can provide an alternate name once instantiated.
            </summary>
            <remarks>
            The <see cref="P:Inedo.BuildMaster.Extensibility.Actions.IActionNameProvider.ActionName"/> property will be displayed instead of the <see cref="P:Inedo.BuildMaster.Extensibility.ExtensionPropertiesAttribute.Name"/> property;
            this is entirely dependent on the consumer, and may not occur all the time.
            </remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.IActionNameProvider.ActionName">
            <summary>
            Gets the name of the Action that will be displayed in BuildMaster.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.LogReceivedEventArgs">
            <summary>
            Represents the arguments used in log event handling
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.LogReceivedEventArgs.#ctor(System.String,Inedo.BuildMaster.Diagnostics.MessageLevels)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.LogReceivedEventArgs"/> class.
            </summary>
            <param name="msg">The MSG.</param>
            <param name="lvl">The LVL.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.LogReceivedEventArgs.Message">
            <summary>
            The message that was logged
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.LogReceivedEventArgs.LogLevel">
            <summary>
            The message's level
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.RemoteAgentConfiguration">
            <summary>
            Represents configuration of a BuildMaster Agent.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.RemoteAgentConfiguration.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.RemoteAgentConfiguration"/> class.
            </summary>
            <param name="tempDir">The temporary directory.</param>
            <param name="sourceDir">The source directory.</param>
            <param name="targetDir">The target directory.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.RemoteAgentConfiguration.TempDirectory">
            <summary>
            Gets or sets the temporary directory used for file operations.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.RemoteAgentConfiguration.SourceDirectory">
            <summary>
            Gets the source directory used for file operations.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.RemoteAgentConfiguration.TargetDirectory">
            <summary>
            Gets or sets the target directory used for file operations.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.PackagedRemoteAction">
            <summary>
            Represents a packaged <see cref="T:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase"/> that can be easily
            serialized and trasmitted
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.PackagedRemoteAction.ActionXml">
            <summary>
            Xml that represents the action
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.PackagedRemoteAction.ExecutionContextB64">
            <summary>
            Binary-serialized execution context
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.PackagedRemoteAction.RemoteConfigB64">
            <summary>
            Binary-serialized Remote configuration
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteCommandEventArgs">
            <summary>
            Represents the event arguments when a <see cref="E:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.RemoteCommand"/> is fired
            </summary>
            <remarks>
            The <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionExecuterBase"/> used for <see cref="T:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase"/> is responsible for 
            attaching to the <see cref="E:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.RemoteCommand"/> event and using a 
            <see cref="T:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteCommandExecuterBase"/> to unpackage and then execute the remote command against
            the unpackaged action
            </remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteCommandEventArgs.RemoteActionPackage">
            <summary>
            Gets the packaged remote action
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteCommandEventArgs.CommandName">
            <summary>
            Gets the command name passed to <see cref="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.ExecuteRemoteCommand(System.String)"/>
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteCommandEventArgs.CommandArgs">
            <summary>
            Gets the command arguments passed to <see cref="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.ExecuteRemoteCommand(System.String)"/>,
            or null if no arguments were passed
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteCommandEventArgs.ReturnValue">
            <summary>
            Gets or sets the return value of the remote command
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteCommandEventArgs.ReturnData">
            <summary>
            Gets or sets the return data of the remote command
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteCommandExecuterBase">
            <summary>
            Used for the purpose of executing commands against a <see cref="T:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase"/>,
            this class provides base functionality for unpackaging and is responsible for calling
            the action's <see cref="M:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.ProcessRemoteCommand(System.String,System.String[])"/> method
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteCommandExecuterBase.UnpackageRemoteAction(System.String)">
            <summary>
            Attempts to unpackage the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase"/> by calling
            <see cref="M:Inedo.BuildMaster.Util.Persistence.DeSerializeFromPersistedObjectXml(System.String)"/> against the xml
            </summary>
            <param name="actionXml"></param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteCommandExecuterBase.UnpackageExecutionContext(System.String)">
            <summary>
            Attempts to unpackage the <see cref="P:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteCommandExecuterBase.ExecutionContext"/> by calling
            <see cref="M:Inedo.BuildMaster.Util.Persistence.DeSerializeFromBase64String(System.String)"/> against the input
            </summary>
            <param name="executionContextB64"></param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteCommandExecuterBase.UnpackageRemoteAgentConfiguration(System.String)">
            <summary>
            Attempts to unpackage the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.RemoteAgentConfiguration"/> by calling
            <see cref="M:Inedo.BuildMaster.Util.Persistence.DeSerializeFromBase64String(System.String)"/> against the input
            </summary>
            <param name="remoteConfigB64"></param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteCommandExecuterBase.UnpackageProviders(System.String[])">
            <summary>
            Attempts to unpackage the array of <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ProviderBase"/> by calling
            <see cref="M:Inedo.BuildMaster.Util.Persistence.DeSerializeArrayFromPersistedObjectXmlArray(System.Type,System.String[])"/> against the input
            </summary>
            <param name="providersXmls"></param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteCommandExecuterBase.#ctor(Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.PackagedRemoteAction)">
            <summary>
            Creates a new instance by unpackaging the specified package
            </summary>
            <param name="package"></param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteCommandExecuterBase.ExecuteCommand(System.String,System.String[])">
            <summary>
            Executes the specified command command against the unpackaged remote action
            </summary>
            <param name="commandName"></param>
            <param name="commandArgs"></param>
            <returns></returns>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteCommandExecuterBase.RemoteAction">
            <summary>
            Gets the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase"/> that was unpackaged
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteCommandExecuterBase.ExecutionContext">
            <summary>
            Gets the <see cref="P:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteCommandExecuterBase.ExecutionContext"/> that was unpackaged
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteExecutionStatus">
            <summary>
            Status of a remote execution
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteExecutionStatus.#ctor(System.Type,System.DateTime,Inedo.BuildMaster.Extensibility.Actions.ExecutionContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteExecutionStatus"/> class.
            </summary>
            <param name="executingActionType">Type of the executing action.</param>
            <param name="executionStart">The execution start.</param>
            <param name="executionContext">The execution context.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteExecutionStatus.ExecutingActionType">
            <summary>
            Gets the <see cref="T:System.Type"/> of the currently executing action
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteExecutionStatus.ExecutionStart">
            <summary>
            Gets the time when the current execution started
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.RemoteExecutionStatus.ExecutionContext">
            <summary>
            Gets the conext of the execution
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.RemoteConfigurationEventArgs">
            <summary>
            Contains the event arguments for a <see cref="E:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase.InitializeRemoteConfiguration"/> event.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.RemoteConfigurationEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.RemoteConfigurationEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.RemoteConfigurationEventArgs.RemoteConfiguration">
            <summary>
            Gets or sets the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.RemoteAgentConfiguration"/> associated with the event.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.CommandLineActionBase">
            <summary>
            Specialized <see cref="T:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase"/> that provides
            additional methods for executing command-line processes
            from a remote Action.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.CommandLineActionBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.CommandLineActionBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.CommandLineActionBase.ExecuteCommandLine(System.String,System.String,System.String)">
            <summary>
            Executes the specified command, wiring up the appropriate events 
            (ErrorDataReceived, OutputDataReceived) to the action's log and waiting
            for the process to exit before returning.
            </summary>
            <param name="fileName">The application or document to start.</param>
            <param name="arguments">The set of command line arguments to use when starting the application.</param>
            <param name="workingDirectory">The initial directory for the process to be started.</param>
            <returns>The value that the associated process specified when it terminated.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.CommandLineActionBase.ExecuteCommandLine(Inedo.BuildMaster.Extensibility.Agents.IRemoteProcessExecuter,System.String,System.String,System.String)">
            <summary>
            Executes the command line.
            </summary>
            <param name="agent">The agent.</param>
            <param name="fileName">Name of the file.</param>
            <param name="arguments">The arguments.</param>
            <param name="workingDirectory">The working directory.</param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.CommandLineActionBase.LogProcessErrorData(System.String)">
            <summary>
            Invoked when data is written to the process's Standard Error output.
            </summary>
            <param name="data">Data written to Standard Error.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.CommandLineActionBase.LogProcessOutputData(System.String)">
            <summary>
            Invoked when data is written to the process's Standard Out output.
            </summary>
            <param name="data">Data written to Standard Out.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.CommandLineActionBase.LogStandardErrorAsError">
            <summary>
            Gets a value indicating whether the executed process's Standard Error should be logged 
            with a <see cref="T:Inedo.BuildMaster.Diagnostics.MessageLevels"/> of <see cref="F:Inedo.BuildMaster.Diagnostics.MessageLevels.Error"/>
            or <see cref="F:Inedo.BuildMaster.Diagnostics.MessageLevels.Information"/>.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Agents.IProcessStartInfo">
            <summary>
            Contains process initialization information.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Agents.IProcessStartInfo.Arguments">
            <summary>
            Gets or sets the arguments.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Agents.IProcessStartInfo.EnvironmentVariables">
            <summary>
            Gets the environment variables.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Agents.IProcessStartInfo.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Agents.IProcessStartInfo.WorkingDirectory">
            <summary>
            Gets or sets the working directory.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.Database.DatabaseBaseAction">
            <summary>
            Base class for an Action that is to be used with a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Database.DatabaseProviderBase"/>.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Database.DatabaseBaseAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.Database.DatabaseBaseAction"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.Database.DatabaseBaseAction.DatabaseProviderId">
            <summary>
            Gets or sets the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Database.DatabaseProviderBase"/> ID.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportFormats">
            <summary>
            Represents the types of report formats for a <see cref="T:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportingActionBase"/>.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportFormats.Html">
            <summary>
            The report is a single HTML page.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportFormats.ZippedHtml">
            <summary>
            The report is one or more HTML files with associated resources.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportFormats.PlainText">
            <summary>
            The report is a single plain text file.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportingActionBase">
            <summary>
            A <see cref="T:Inedo.BuildMaster.Extensibility.Actions.CommandLineActionBase"/> that can report results into build output.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportingActionBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportingActionBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportingActionBase.SubmitReport(System.String)">
            <summary>
            Submits a string as a report in HTML.
            </summary>
            <param name="buildOutput">HTML content of report to submit.</param>
            <remarks>
            A Build Output Report may not be submitted more than once, or while a remote command is being executed.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportingActionBase.SubmitReport(System.Byte[],Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportFormats)">
            <summary>
            Submits arbitrary data as a report.
            </summary>
            <param name="buildOutput">Report data to submit.</param>
            <param name="format">Format of the report data.</param>
            <remarks>
            A Build Output Report may not be submitted more than once, or while a remote command is being executed.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportingActionBase.ZipAndEncodeDirectory(System.String,System.String,System.String)">
            <summary>
            Zips a directory and returns a base 64 encoded string containing the resulting archive.
            </summary>
            <param name="path">Directory to zip. Files and subdirectories will be added to the archive.</param>
            <param name="defaultPage">Default or main page of the archive.</param>
            <param name="previewPage">Page to display in an iframe as a preview of the report; may be null.</param>
            <returns>Base 64 encoded string containing the zipped directory.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportingActionBase.ZipAndEncodeDirectory(System.String,System.String)">
            <summary>
            Zips a directory and returns a base 64 encoded string containing the resulting archive.
            </summary>
            <param name="path">Directory to zip. Files and subdirectories will be added to the archive.</param>
            <param name="defaultPage">Default or main page of the archive.</param>
            <returns>Base 64 encoded string containing the zipped directory.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportingActionBase.getAbsPath(System.String)">
            <summary>
            Gets the abs path.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportingActionBase.OutputName">
            <summary>
            Gets or sets the output name of the report
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportingActionBase.ExePath">
            <summary>
            Gets or sets the application to start
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportingActionBase.WorkingDirectory">
            <summary>
            Gets or sets the application's working directory
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.Reporting.ReportingActionBase.Arguments">
            <summary>
            Gets or sets the command line arguments to use when running the command
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Actions.Testing.UnitTestActionBase">
            <summary>
            Base class for an Action that executes unit tests.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Testing.UnitTestActionBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Actions.Testing.UnitTestActionBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Testing.UnitTestActionBase.ProcessRemoteCommand(System.String,System.String[])">
            <summary>
            Runs the unit tests on the appropriate server.
            </summary>
            <param name="name">Name of command to process.</param>
            <param name="args">Optional command arguments.</param>
            <returns>
            Result of the command.
            </returns>
            <remarks>
            This method should not be called directly.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Testing.UnitTestActionBase.Execute">
            <summary>
            Executes the Unit Test Action.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Testing.UnitTestActionBase.RunTests">
            <summary>
            Runs a unit test against the target specified in the action.
            After the test is run, use the <see cref="M:RecordResult"/> method
            to save the test results to the database.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Actions.Testing.UnitTestActionBase.RecordResult(System.String,System.Boolean,System.String,System.DateTime,System.DateTime)">
            <summary>
            Records the test result in BuildMaster.
            </summary>
            <param name="testName">The name of the file the test was run against.</param>
            <param name="testPassed">Value indicating whether the test passed.</param>
            <param name="testResult">The XML (or text) result of the test.</param>
            <param name="startTime">The time when the test was started.</param>
            <param name="endTime">The time when the test was completed.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Actions.Testing.UnitTestActionBase.GroupName">
            <summary>
            Gets or sets the unit test group name.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Agents.AgentFactory">
            <summary>
            Creates instances of <see cref="T:Inedo.BuildMaster.Agents.IAgent"/> based on an agent ID.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentFactory.CreateAgent(System.Int32)">
            <summary>
            Creates an instance of an <see cref="T:Inedo.BuildMaster.Agents.IAgent"/>.
            </summary>
            <param name="agentId">Identifier of the agent to create.</param>
            <returns>New instance of the <see cref="T:Inedo.BuildMaster.Agents.IAgent"/>.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentFactory.CreateAgentInternal(System.Int32)">
            <summary>
            Creates an instance of an <see cref="T:Inedo.BuildMaster.Agents.IAgent"/>.
            </summary>
            <param name="agentId">Identifier of the agent to create.</param>
            <returns>New instance of an <see cref="T:Inedo.BuildMaster.Agents.IAgent"/>.</returns>
            <remarks>This is the instance version of <see cref="M:Inedo.BuildMaster.Agents.AgentFactory.CreateAgent(System.Int32)"/>.</remarks>
        </member>
        <member name="T:Inedo.BuildMaster.Agents.AgentHelper">
            <summary>
            An object that contains helper functions and may act as a proxy for remote calls
            to a BuildMaster Agent.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.CreateNewRemoteProxy(System.Int32)">
            <summary>
            Creates a new <see cref="T:Inedo.BuildMaster.Agents.AgentHelper"/> remote proxy.
            </summary>
            <param name="serverId">The server ID. This may be the BuildMaster server itself or any of its agents.</param>
            <returns>New <see cref="T:Inedo.BuildMaster.Agents.AgentHelper"/> proxy object.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.CreateRemoteProxy(System.Int32)">
            <summary>
            Creates the remote proxy.
            </summary>
            <param name="serverId">The server id.</param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.GetDirectorySeparator">
            <summary>
            Returns the directory separator character used by the agent's platform.
            </summary>
            <returns>Directory separator character used by the agent's platform.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.GetBaseWorkingDirectory">
            <summary>
            Returns the base working directory for the agent.
            </summary>
            <returns>Base working directory for the agent.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.GetDefaultApplicationBaseDirectory(System.Int32)">
            <summary>
            Returns the base working directory for the specified application.
            </summary>
            <param name="applicationId">The ID of the application.</param>
            <returns>Base working directory for the application.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.CombinePath(System.String,System.String)">
            <summary>
            Combines two path strings according to the path format of the agent.
            </summary>
            <param name="path1">The fist path.</param>
            <param name="path2">The second path.</param>
            <returns>Combined path string.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.GetDirectoryName(System.String)">
            <summary>
            Returns the name of a directory path.
            </summary>
            <param name="path">The path to the directory.</param>
            <returns>The name of the directory.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.GetRelativeDeployableWorkingDirectory(System.Int32)">
            <summary>
            Returns the relative working directory for the specified deployable.
            </summary>
            <param name="deployableId">The ID of the deployable.</param>
            <returns>Relative working directory for the specified deployable.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.GetWorkingDirectory(System.Int32,System.Int32,System.String)">
            <summary>
            Returns the working directory for the specified application, deployable, and overridden path.
            </summary>
            <param name="applicationId">The ID of the application.</param>
            <param name="deployableId">The ID of the deployable.</param>
            <param name="overridePath">The overridden path.</param>
            <returns>Working directory for the specified application, deployable, and overridden path.</returns>
            <remarks>
                The value of <paramref name="overridePath"/> may be either a relative or absolute path:
                <list type="bullet">
                    <item>absolute - <paramref name="overridePath"/> is always returned.</item>
                    <item>relative (starts with ~) - <paramref name="overridePath"/> is combined with the application base path.</item>
                    <item>relative (does not start with ~) - <paramref name="overridePath"/> is combined with the deployable base path.</item>
                </list>
            </remarks>
            <example>
                <list type="table">
                    <listheader>
                        <term>Value of <paramref name="overridePath"/></term>
                        <description>Result</description>
                    </listheader>
                    <item>
                        <term>(null/empty)</term>
                        <description>C:\[BuildMaster base directory]\A[AppId]\S[DplId]\WRK</description>
                    </item>
                    <item>
                        <term>~</term>
                        <description>C:\[BuildMaster base directory]\A[AppId]</description>
                    </item>
                    <item>
                        <term>~\MyPath</term>
                        <description>C:\[BuildMaster base directory]\A[AppId]\MyPath</description>
                    </item>
                    <item>
                        <term>\MyPath</term>
                        <description>C:\MyPath</description>
                    </item>
                    <item>
                        <term>MyPath</term>
                        <description>C:\[BuildMaster base directory]\A[AppId]\S[DplId]\WRK\MyPath</description>
                    </item>
                </list>
            </example>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.ClearDeployableDirectories(System.Int32)">
            <summary>
            Clears all deployable (_S*) working directories for the given application.
            </summary>
            <param name="applicationId">The ID of the application.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.GetFileEntry(System.String)">
            <summary>
            Wrapper for <see cref="M:Inedo.BuildMaster.Util.Files.GetFileEntry(System.String)"/>.
            </summary>
            <param name="path">See <see cref="M:Inedo.BuildMaster.Util.Files.GetFileEntry(System.String)"/>.</param>
            <returns>See <see cref="M:Inedo.BuildMaster.Util.Files.GetFileEntry(System.String)"/></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.GetDirectoryEntry(System.String)">
            <summary>
            Wrapper for <see cref="M:Inedo.BuildMaster.Util.Files.GetDirectoryEntry(System.String)"/>.
            </summary>
            <param name="path">See <see cref="M:Inedo.BuildMaster.Util.Files.GetDirectoryEntry(System.String)"/>.</param>
            <returns>See <see cref="M:Inedo.BuildMaster.Util.Files.GetDirectoryEntry(System.String)"/>.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.GetDirectoryEntryRecursive(System.String)">
            <summary>
            Wrapper for <see cref="M:Inedo.BuildMaster.Util.Files.GetDirectoryEntry(System.String,System.Exception[]@,System.Boolean)"/>.
            </summary>
            <param name="path">See <see cref="M:Inedo.BuildMaster.Util.Files.GetDirectoryEntry(System.String,System.Exception[]@,System.Boolean)"/>.</param>
            <returns>See <see cref="M:Inedo.BuildMaster.Util.Files.GetDirectoryEntry(System.String,System.Exception[]@,System.Boolean)"/>.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.FileExists(System.String)">
            <summary>
            Wrapper for <see cref="M:System.IO.File.Exists(System.String)"/>.
            </summary>
            <param name="path">See <see cref="M:System.IO.File.Exists(System.String)"/>.</param>
            <returns>see <see cref="M:System.IO.File.Exists(System.String)"/>.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.DirectoryExists(System.String)">
            <summary>
            Wrapper for <see cref="M:System.IO.Directory.Exists(System.String)"/>.
            </summary>
            <param name="path">See <see cref="M:System.IO.Directory.Exists(System.String)"/>.</param>
            <returns>See <see cref="M:System.IO.Directory.Exists(System.String)"/>.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.DirectoryEmpty(System.String)">
            <summary>
            Returns value indicating whether the specified directory is empty.
            </summary>
            <param name="path">The directory to test.</param>
            <returns>True if directory is empty; false if directory does not exist or is not empty.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.CreateDirectory(System.String)">
            <summary>
            Wrapper for <see cref="M:System.IO.Directory.CreateDirectory(System.String)"/>.
            </summary>
            <param name="path">See <see cref="M:System.IO.Directory.CreateDirectory(System.String)"/>.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.DeleteFiles(System.String[])">
            <summary>
            Deletes all of the specified files if they exist.
            </summary>
            <param name="fileNames">The files to delete.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.ClearFolder(System.String)">
            <summary>
            Deletes all files and subfolders in a folder (but not the folder itself).
            </summary>
            <param name="path">The path of the folder to empty.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.DeleteDirectories(System.String[])">
            <summary>
            Deletes all of the specified directories if they exist.
            </summary>
            <param name="directoryNames">THe directories to delete.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.WriteAllFileBytes(System.String,System.Byte[])">
            <summary>
            Wrapper for <see cref="M:System.IO.File.WriteAllBytes(System.String,System.Byte[])"/>.
            </summary>
            <param name="path">See <see cref="M:System.IO.File.WriteAllBytes(System.String,System.Byte[])"/>.</param>
            <param name="bytes">See <see cref="M:System.IO.File.WriteAllBytes(System.String,System.Byte[])"/>.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.WriteAllFileBytes(System.String,System.Byte[],System.Boolean)">
            <summary>
            Wrapper for <see cref="M:System.IO.File.WriteAllBytes(System.String,System.Byte[])"/>.
            </summary>
            <param name="path">See <see cref="M:System.IO.File.WriteAllBytes(System.String,System.Byte[])"/>.</param>
            <param name="bytes">See <see cref="M:System.IO.File.WriteAllBytes(System.String,System.Byte[])"/>.</param>
            <param name="createDirectory">Value indicating whether target directory should be created if it doesn't exist.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.AppendFileBytes(System.String,System.Byte[])">
            <summary>
            Appends an array of bytes to the end of a file.
            </summary>
            <param name="path">The file to be appended.</param>
            <param name="bytes">The bytes to append to the file.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.WriteAllFileBytesSetLastFileWriteTimeAndAttributes(System.String,System.Byte[],Inedo.BuildMaster.Agents.AgentDateTime,System.IO.FileAttributes)">
            <summary>
            Wrapper for <see cref="M:System.IO.File.WriteAllBytes(System.String,System.Byte[])"/>, <see cref="M:System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)"/>, and <see cref="M:System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)"/>.
            </summary>
            <param name="path">See <see cref="M:System.IO.File.WriteAllBytes(System.String,System.Byte[])"/>.</param>
            <param name="bytes">See <see cref="M:System.IO.File.WriteAllBytes(System.String,System.Byte[])"/>.</param>
            <param name="lastWriteTime">See <see cref="M:System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)"/>.</param>
            <param name="fileAttributes">See <see cref="M:System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)"/>.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.WriteAllFileBytesSetLastFileWriteTimeAndAttributes(System.String,System.Byte[],Inedo.BuildMaster.Agents.AgentDateTime,System.IO.FileAttributes,System.Boolean)">
            <summary>
            Wrapper for <see cref="M:System.IO.File.WriteAllBytes(System.String,System.Byte[])"/>, <see cref="M:System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)"/>, and <see cref="M:System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)"/>.
            </summary>
            <param name="path">See <see cref="M:System.IO.File.WriteAllBytes(System.String,System.Byte[])"/>.</param>
            <param name="bytes">See <see cref="M:System.IO.File.WriteAllBytes(System.String,System.Byte[])"/>.</param>
            <param name="lastWriteTime">See <see cref="M:System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)"/>.</param>
            <param name="fileAttributes">See <see cref="M:System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)"/>.</param>
            <param name="createDirectory">Value indicating whether target directory should be created if it doesn't exist.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.SetLastFileWriteTime(System.String,Inedo.BuildMaster.Agents.AgentDateTime)">
            <summary>
            Wrapper for <see cref="M:System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)"/>.
            </summary>
            <param name="path">See <see cref="M:System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)"/>.</param>
            <param name="lastWriteTime">See <see cref="M:System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)"/>.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.SetFileAttributesAndLastWriteTime(System.String,Inedo.BuildMaster.Agents.AgentDateTime,System.IO.FileAttributes)">
            <summary>
            Wrapper for <see cref="M:System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)"/> and <see cref="M:System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)"/>.
            </summary>
            <param name="path">See <see cref="M:System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)"/>.</param>
            <param name="lastWriteTime">See <see cref="M:System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)"/>.</param>
            <param name="fileAttributes">See <see cref="M:System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)"/>.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.SetFileAttributes(System.String,System.IO.FileAttributes)">
            <summary>
            Wrapper for <see cref="M:System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)"/>.
            </summary>
            <param name="path">See <see cref="M:System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)"/>.</param>
            <param name="fileAttributes">See <see cref="M:System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)"/>.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.GetFileAttributes(System.String)">
            <summary>
            Wrapper for <see cref="M:System.IO.File.GetAttributes(System.String)"/>.
            </summary>
            <param name="path">See <see cref="M:System.IO.File.GetAttributes(System.String)"/>.</param>
            <returns>See <see cref="M:System.IO.File.GetAttributes(System.String)"/>.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.GetLastFileWriteTime(System.String)">
            <summary>
            Wrapper for <see cref="M:System.IO.File.GetLastWriteTimeUtc(System.String)"/>.
            </summary>
            <param name="path">See <see cref="M:System.IO.File.GetLastWriteTimeUtc(System.String)"/>.</param>
            <returns>See <see cref="M:System.IO.File.GetLastWriteTimeUtc(System.String)"/>.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.FileCopyBatch(System.String,System.String[],System.String,System.String[],System.Boolean,System.Boolean)">
            <summary>
            Performs a local copy on a batch of files.
            </summary>
            <param name="sourceDirName">Directory to copy files from.</param>
            <param name="sourceFileNames">Files in the directory to copy.</param>
            <param name="destDirName">Directory to copy files to.</param>
            <param name="destFileNames">Names of the copied files in the new directory.</param>
            <param name="overwrite">Value indicating whether files should be overwritten.</param>
            <param name="createDirectory">Value indicating whether the target directory should be created if it doesn't exist.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.MoveDirectory(System.String,System.String)">
            <summary>
            Wrapper for <see cref="M:System.IO.Directory.Move(System.String,System.String)"/>
            </summary>
            <param name="sourceDirName">See <see cref="M:System.IO.Directory.Move(System.String,System.String)"/>.</param>
            <param name="destDirName">See <see cref="M:System.IO.Directory.Move(System.String,System.String)"/>.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.ReadAllFileBytes(System.String)">
            <summary>
            Wrapper for <see cref="M:System.IO.File.ReadAllBytes(System.String)"/>.
            </summary>
            <param name="path">See <see cref="M:System.IO.File.ReadAllBytes(System.String)"/>.</param>
            <returns>See <see cref="M:System.IO.File.ReadAllBytes(System.String)"/>.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.AgentHelper.ReadFileBytes(System.String,System.Int64,System.Int32)">
            <summary>
            Reads an array of bytes from a file.
            </summary>
            <param name="path">The path of the file to read.</param>
            <param name="streamStartPosition">The offset within the file to begin reading from.</param>
            <param name="count">The number of bytes to read.</param>
            <returns>A byte array containing the file section contents.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Agents.IFileOperationsExecuter">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Agents.AgentBase"/> supports file operations
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IFileOperationsExecuter.GetDirectorySeparator">
            <summary>
            Returns the directory separator character used by the agent's platform.
            </summary>
            <returns>Directory separator character used by the agent's platform.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IFileOperationsExecuter.GetNewLine">
            <summary>
            Returns the new line string used by the agent's platform.
            </summary>
            <returns>The new line string used by the agent's platform.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IFileOperationsExecuter.CombinePath(System.String,System.String)">
            <summary>
            Combines two path strings according to the path format of the agent.
            </summary>
            <param name="path1">The fist path.</param>
            <param name="path2">The second path.</param>
            <returns>Combined path string.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IFileOperationsExecuter.GetDirectoryEntry(Inedo.BuildMaster.Files.GetDirectoryEntryCommand)">
            <summary>
            Wrapper for <see cref="M:Inedo.BuildMaster.Util.Files.GetDirectoryEntry(Inedo.BuildMaster.Files.GetDirectoryEntryCommand)"/>.
            </summary>
            <param name="command">See <see cref="M:Inedo.BuildMaster.Util.Files.GetDirectoryEntry(Inedo.BuildMaster.Files.GetDirectoryEntryCommand)"/>.</param>
            <returns>See <see cref="M:Inedo.BuildMaster.Util.Files.GetDirectoryEntry(Inedo.BuildMaster.Files.GetDirectoryEntryCommand)"/></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IFileOperationsExecuter.GetFileEntry(System.String)">
            <summary>
            Wrapper for <see cref="M:Inedo.BuildMaster.Util.Files.GetFileEntry(System.String)"/>.
            </summary>
            <param name="path">See <see cref="M:Inedo.BuildMaster.Util.Files.GetFileEntry(System.String)"/>.</param>
            <returns>See <see cref="M:Inedo.BuildMaster.Util.Files.GetFileEntry(System.String)"/></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IFileOperationsExecuter.CreateDirectory(System.String)">
            <summary>
            Wrapper for <see cref="M:System.IO.Directory.CreateDirectory(System.String)"/>.
            </summary>
            <param name="path">See <see cref="M:System.IO.Directory.CreateDirectory(System.String)"/>.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IFileOperationsExecuter.DeleteFiles(System.String[])">
            <summary>
            Deletes all of the specified files if they exist.
            </summary>
            <param name="fileNames">The files to delete.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IFileOperationsExecuter.ClearFolder(System.String)">
            <summary>
            Deletes all files and subfolders in a folder (but not the folder itself).
            </summary>
            <param name="path">The path of the folder to empty.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IFileOperationsExecuter.DeleteDirectories(System.String[])">
            <summary>
            Deletes all of the specified directories if they exist.
            </summary>
            <param name="directoryNames">THe directories to delete.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IFileOperationsExecuter.AppendFileBytes(System.String,System.Byte[])">
            <summary>
            Appends an array of bytes to the end of a file.
            </summary>
            <param name="path">The file to be appended.</param>
            <param name="bytes">The bytes to append to the file.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IFileOperationsExecuter.WriteFile(System.String,System.Nullable{System.DateTime},System.Nullable{System.IO.FileAttributes},System.Byte[],System.Boolean)">
            <summary>
            Writes the file.
            </summary>
            <param name="path">The path.</param>
            <param name="lastModified">The last modified.</param>
            <param name="fileAttributes">The file attributes.</param>
            <param name="bytes">The bytes.</param>
            <param name="createDirectory">if set to <c>true</c> [create directory].</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IFileOperationsExecuter.FileCopyBatch(System.String,System.String[],System.String,System.String[],System.Boolean,System.Boolean)">
            <summary>
            Performs a local copy on a batch of files.
            </summary>
            <param name="sourceDirName">Directory to copy files from.</param>
            <param name="sourceFileNames">Files in the directory to copy.</param>
            <param name="destDirName">Directory to copy files to.</param>
            <param name="destFileNames">Names of the copied files in the new directory.</param>
            <param name="overwrite">Value indicating whether files should be overwritten.</param>
            <param name="createDirectory">Value indicating whether the target directory should be created if it doesn't exist.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IFileOperationsExecuter.MoveDirectory(System.String,System.String)">
            <summary>
            Wrapper for <see cref="M:System.IO.Directory.Move(System.String,System.String)"/>
            </summary>
            <param name="sourceDirName">See <see cref="M:System.IO.Directory.Move(System.String,System.String)"/>.</param>
            <param name="destDirName">See <see cref="M:System.IO.Directory.Move(System.String,System.String)"/>.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IFileOperationsExecuter.ReadAllFileBytes(System.String)">
            <summary>
            Wrapper for <see cref="M:System.IO.File.ReadAllBytes(System.String)"/>.
            </summary>
            <param name="path">See <see cref="M:System.IO.File.ReadAllBytes(System.String)"/>.</param>
            <returns>See <see cref="M:System.IO.File.ReadAllBytes(System.String)"/>.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IFileOperationsExecuter.ReadFileBytes(System.String,System.Int64,System.Int32)">
            <summary>
            Reads an array of bytes from a file.
            </summary>
            <param name="path">The path of the file to read.</param>
            <param name="streamStartPosition">The offset within the file to begin reading from.</param>
            <param name="count">The number of bytes to read.</param>
            <returns>A byte array containing the file section contents.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IFileOperationsExecuter.GetBaseWorkingDirectory">
            <summary>
            Returns the base working directory for the agent.
            </summary>
            <returns>Base working directory for the agent.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Agents.IRemoteCommandExecuter">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Agents.AgentBase"/> supports command execution remote actions
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IRemoteCommandExecuter.ExecuteCommand(Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.PackagedRemoteAction,System.String,System.String[])">
            <summary>
            Executes the specified command on the specified packaged remote action.
            </summary>
            <param name="package">The packaged remote action.</param>
            <param name="commandName">The name of the command to execute.</param>
            <param name="commandArgs">The arguments to pass to the command.</param>
            <returns>Return value of the command.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IRemoteCommandExecuter.GetRemoteExecutionStatus">
            <summary>
            Gets the remote execution status.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Inedo.BuildMaster.Agents.AgentStatuses">
            <summary>
            Represents the status of an <see cref="T:Inedo.BuildMaster.Agents.IAgent"/>.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Agents.AgentStatuses.ExecutingAction">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Actions.RemoteActionBase"/> is currently executing.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Agents.AgentStatuses.Updating">
            <summary>
            Indicates that the agent is being updated.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Agents.AgentStatuses.Idle">
            <summary>
            Indicates that the agent is waiting.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Agents.IAgent">
            <summary>
            Represents a remote BuildMaster agent that can be manipulated using a proxy.
            </summary>
            <seealso cref="T:Inedo.BuildMaster.Agents.AgentHelper"/>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.IAgent.ExecuteMethodOnXmlPersistedObject(System.String,System.String,System.Object[])">
            <summary>
            Executes the specified method on the specified object that has 
            been serialized.
            </summary>
            <param name="objectXml">Serialized object using BuildMaster's persistence model.</param>
            <param name="methodName">Name of method to invoke.</param>
            <param name="parameters">Arguments to pass to the method.</param>
            <returns>Return value of the method.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.IAgent.ExecuteCommand(Inedo.BuildMaster.Extensibility.Actions.RemoteCommandExecution.PackagedRemoteAction,System.String,System.String[])">
            <summary>
            Executes the specified command on the specified packaged remote action.
            </summary>
            <param name="package">The packaged remote action.</param>
            <param name="commandName">The name of the command to execute.</param>
            <param name="commandArgs">The arguments to pass to the command.</param>
            <returns>Return value of the command.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Agents.IAgent.GetAgentInfo">
            <summary>
            Returns the status of the agent.
            </summary>
            <returns>The status of the agent.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Configuration.BuildMasterConfig">
             <summary>
             When implemented by a derived class, represents configuration 
             within a portion of the application
             </summary>
             <remarks>
             It is recommended that implementors use a singleton pattern and have
             strongly typed properties that wrap the protected Read/Write value
             </remarks>
             <example>
                 public sealed class ExampleConfig : Config
                 {
                     //private constructor + private single instance
                     ExampleConfig() : base("Example") { }
                     static readonly ExampleConfig i = new ExampleConfig();
            
                     public static int SomeProperty
                     {
                     get { return int.Parse(i.ReadValue("SomeProperty")); }
                     set { i.WriteValue("SomeProperty", value.ToString()); }
                     }
                 }
             </example>
        </member>
        <member name="M:Inedo.BuildMaster.Configuration.BuildMasterConfig.#ctor(System.String)">
            <summary>
            Instantiates a new Config class within the specified scope
            </summary>
            <param name="scope"></param>
        </member>
        <member name="T:Inedo.BuildMaster.Configuration.CoreConfig">
            <summary>
            Configuration items used within core
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Configuration.CoreConfig.GetConfigSource">
            <summary>
            Loads the configuration <see cref="T:Inedo.Configuration.Sources.IConfigSource"/> associated with
            this configuration
            </summary>
            <returns>
            instance of IConfigSource
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Configuration.CoreConfig.OverrideConfigSource(Inedo.BuildMaster.Configuration.Sources.IBuildMasterConfigSource)">
            <summary>
            Replaces the configuration source used by <see cref="T:Inedo.BuildMaster.Configuration.CoreConfig"/>
            </summary>
            <param name="configSource">the <see cref="T:Inedo.BuildMaster.Configuration.Sources.IBuildMasterConfigSource"/> to use or null to use the default</param>
            <remarks>By default, the configuration files are read from a configuration file</remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Configuration.CoreConfig.BaseWorkingDirectory">
            <summary>
            Gets the BuildMaster working directory
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Configuration.CoreConfig.DbConnectionString">
            <summary>
            Gets the ConnectionString used by BuildMaster to connect to its database
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Configuration.Sources.IBuildMasterConfigSource">
            <summary>
            Represents a source of configuration scope+key/value pairs
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ApplicationGroups_CreateOrUpdateApplicationGroup">
            <summary>
            Creates or updates a new application group
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ApplicationGroups_DeleteApplicationGroup">
            <summary>
            Deletes an application group
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ApplicationGroups_GetApplicationGroup">
            <summary>
            Gets an application group by ID.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ApplicationGroups_GetApplicationGroups">
            <summary>
            Gets all the application groups
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Applications_AddImportedDeployable">
            <summary>
            Adds an imported deployable to an application
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Applications_CloneApplication">
            <summary>
            Clones an application, but does not copy any history
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Applications_CreateApplication">
            <summary>
            Creates a new application
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Applications_CreateOrUpdateDeployable">
            <summary>
            Creates a deployable for a specified application, or updates an existing one
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Applications_DeleteImportedDeployable">
            <summary>
            Deletes an existing imported deployable relation, but does not delete the deployable from the host application
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Applications_EditApplication">
            <summary>
            Edits an existing application
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Applications_GetApplication">
            <summary>
            Gets the details of an application along with the associated deployables
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Applications_GetApplications">
            <summary>
            Gets the specified number of applications in the system, or all if null is passed in
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Applications_GetDependentApplications">
            <summary>
            Gets all applications with imported deployables from a specified application
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Applications_GetDeployable">
            <summary>
            Gets the specified deployable
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Applications_GetDeployableDependencies">
            <summary>
            Gets a set of dependencies for the deployables in a given application or a specific deployable if one is specified
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Applications_GetDeployables">
            <summary>
            Gets the deployables for a specific application
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Applications_GetImportedDeployables">
            <summary>
            Gets a set a imported deployables for a specified application
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Applications_PurgeApplicationData">
            <summary>
            Purges an entire application and all associated data from the system
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Applications_PurgeDeployableData">
            <summary>
            Purges a deployable and all its associations from the system
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Applications_SetDashboard">
            <summary>
            Sets the dashboard text for an application
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Applications_SetDeployableDependencies">
            <summary>
            Sets the dependency relationships between the specified deployable and its dependents
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Applications_SetIssueTracker">
            <summary>
            Sets the issue tracking provider of a specified application
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Artifacts_CreateOrReplaceArtifact">
            <summary>
            Creates a reference to an artifact in the artifact library
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Artifacts_GetArtifacts">
            <summary>
            Gets a set of artifacts based on the specified criteria
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.BuildMaster_GetCurrentDateTime">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.BuildOutputs_AddOutput">
            <summary>
            Adds a build output report to a specified build execution
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.BuildOutputs_GetOutput">
            <summary>
            Gets the build output report for a specified build and sequence number
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.BuildOutputs_GetOutputs">
            <summary>
            Gets the build output reports for a specified build
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Builds_AddApproval">
            <summary>
            Approves a build for execution based on the specified parameters
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Builds_CompletePromotion">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Builds_CreateBuild">
            <summary>
            Creates a new build of an application and optionally promotes it to the first environment.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Builds_CreateDependentBuilds">
            <summary>
            Creates new builds in all dependent applications a build.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Builds_GetAllPromotionRequiredApprovalsByUser">
            <summary>
            Gets the set of approvals required from a specific user or group member for a build in a specified environment
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Builds_GetBuild">
            <summary>
            Gets the details for a specified build
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Builds_GetBuilds">
            <summary>
            Gets the details for all builds that match the specified criteria
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Builds_GetDependentPromotions">
            <summary>
            Gets all promotions that are contingent upon the specified promotion.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Builds_GetExecution">
            <summary>
            Gets all details regarding a specific build execution
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Builds_GetExecutionLog">
            <summary>
            Gets the details for a specified build execution, and plan or action if specified
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Builds_GetExecutions">
            <summary>
            Gets all the build executions for the specified build
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Builds_GetPromotion">
            <summary>
            Gets the set of promotions that have occurred to the specified environment
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Builds_GetPromotionApproval">
            <summary>
            Gets the details of the specified approval
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Builds_GetPromotionApprovals">
            <summary>
            Gets the set of approvals that have occurred for the specified build and optional environment
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Builds_GetPromotionRequiredApprovals">
            <summary>
            Gets a set of approvals for the specified environment of a given build
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Builds_GetPromotionRequiredApprovalsByUser">
            <summary>
            Gets the set of approvals required from a specific user or group member for a build in a specified environment
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Builds_GetPromotions">
            <summary>
            Gets all the promotions that have occurred for a specified build
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Builds_GetRequiredPromotions">
            <summary>
            Gets a list of all the promotions that must occur for a build from start to finish
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Builds_InitiateBuildExecution">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Builds_PromoteBuild">
            <summary>
            Promotes a build to its next environment in its workflow
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Builds_PromoteDependents">
            <summary>
            Promotes all dependents for a given promotion
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Builds_RejectBuild">
            <summary>
            Rejects the specified build
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Builds_RemoveApproval">
            <summary>
            Removes the specified build approval from a build
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Builds_ValidateForPromotion">
            <summary>
            Indicates whether a build is eligible for a promotion to the next environment in its workflow
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.BuildSchedules_CreateOrUpdateRecurring">
            <summary>
            Creates a recurring build based on the specified parameters, or updates an existing schedule if one with the given ID already exists.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.BuildSchedules_CreateOrUpdateSchedule">
            <summary>
            Creates a scheduled build based on the specified parameters, or updates an existing scheduled build if one with the given ID already exists.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.BuildSchedules_CreateOrUpdateSCMTriggered">
            <summary>
            Creates a source control triggered automated build based on the specified parameters, or updates an existing one if one with a given ID already exists.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.BuildSchedules_CreateOrUpdateURLTriggered">
            <summary>
            Creates a URL-triggered build based on the specified parameters, or updates an existing schedule if one with the given ID already exists.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.BuildSchedules_DeleteBuildSchedule">
            <summary>
            Deletes the specified build schedule
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.BuildSchedules_GetBuildSchedule">
            <summary>
            Gets the specified build schedule
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.BuildSchedules_GetBuildSchedules">
            <summary>
            Gets a set of builds schedules for the specified application and active indicator, or all if null is supplied
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.BuildSchedules_GetScheduled">
            <summary>
            Gets a set of build schedules that are scheduled to be executed between the specified dates
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.BuildTestResults_GetTestGroupResults">
            <summary>
            Gets the unit test results for a specified build execution
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.BuildTestResults_GetTestLog">
            <summary>
            Gets the results of a specific unit test
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.BuildTestResults_GetTestResults">
            <summary>
            Gets the build test results based on the specified criteria
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.BuildTestResults_RecordTestResult">
            <summary>
            Logs the result of an individual unit test
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ChangeControlPerformances_GetReleaseSummary">
            <summary>
            Gets a summary of the change control performances for a specified change control
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ChangeControls_CreateOrUpdateChangeControl">
            <summary>
            Creates a new change control, or updates an existing one
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ChangeControls_DeleteChangeControl">
            <summary>
            Deletes the specified change control
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ChangeControls_GetChangeControl">
            <summary>
            Gets the details of a specified change control
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ChangeControls_GetChangeControlPerformances">
            <summary>
            Gets a list of change control performances for a specified change control or all change controls if none is specified
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ChangeControls_GetChangeControls">
            <summary>
            Gets a list of change controls based on the specified criteria
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ChangeControls_PerformChangeControl">
            <summary>
            Adds a change control performance for a specified environment
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Configuration_GetConfiguration">
            <summary>
            Gets the a complete list of BuildMaster configuration settings
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Configuration_GetValue">
            <summary>
            Gets the specified BuildMaster configuration value
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Configuration_SetValue">
            <summary>
            Sets a BuildMaster configuration value
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Configuration_SetValueWithoutEvent">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ConfigurationFiles_CreateConfigurationFile">
            <summary>
            Creates a configuration file in the system
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ConfigurationFiles_CreateConfigurationFileInstance">
            <summary>
            Creates a new instance of a configuration file
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ConfigurationFiles_CreateConfigurationFileVersions">
            <summary>
            Creates new configuration file versions for each instance specified in the ConfigurationFiles_Xml for the given configuration file
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ConfigurationFiles_DeployConfigurationFile">
            <summary>
            Saves the result of a deployed configuration file (note this will not physically deploy the configuration file)
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ConfigurationFiles_GetConfigurationFile">
            <summary>
            Gets all configuration files and all configuration file instances
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ConfigurationFiles_GetConfigurationFileDeployments">
            <summary>
            Gets a list of all configuration file deployments based on the specified criteria
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ConfigurationFiles_GetConfigurationFileInstances">
            <summary>
            Gets a list of all configuration file instances that match the specified criteria
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ConfigurationFiles_GetConfigurationFiles">
            <summary>
            Gets all configuration files that match the specified criteria
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ConfigurationFiles_GetConfigurationFileVersion">
            <summary>
            Gets a list of configuration file versions for a specified configuration file
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ConfigurationFiles_GetConfigurationFileVersions">
            <summary>
            Gets the configuration file versions that match the specified criteria
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ConfigurationFiles_GetConfigurationFileVersionsByRelease">
            <summary>
            Gets the configuration file versions for the specified release including all version prior
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ConfigurationFiles_ReactivateConfigurationFile">
            <summary>
            Reactivates a configuration file that has been marked inactive
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ConfigurationFiles_RenameConfigurationFile">
            <summary>
            Renames an existing configuration file
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ConfigurationFiles_UpdateConfigurationFile">
            <summary>
            Updates an existing configuration file
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ConfigurationFiles_UpdateConfigurationFileInstance">
            <summary>
            Updates an existing configuration file instance
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Dashboards_ApplicationOverview">
            <summary>
            Gets a series of data sets with information pertaining to a specified application
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Dashboards_CreateDashboard">
            <summary>
            Creates a dashboard
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Dashboards_CreateOrUpdateGadget">
            <summary>
            Creates or updates a gadget in an application or system-level dashboard
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Dashboards_DeleteGadget">
            <summary>
            Deletes a gadget in an application or system-level dashboard
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Dashboards_GetApplications">
            <summary>
            Gets an application summary for all applications in BuildMaster or a specific group of applications
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Dashboards_GetDashboard">
            <summary>
            Gets a dashboard
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Dashboards_GetGadget">
            <summary>
            Gets a gadget in an application or system-level dashboard
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Dashboards_GetGadgets">
            <summary>
            Gets the gadgets in an application or system-level dashboard
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Dashboards_ResequenceGadget">
            <summary>
            Changes the sequence of a gadget within a dashboard
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.DatabaseChangeScripts_AddDatabaseProvider">
            <summary>
            Adds a database change script provider if one does not exist, or updates an existing one
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.DatabaseChangeScripts_CreateNewChangeScript">
            <summary>
            Creates a new database change script
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.DatabaseChangeScripts_DeleteChangeScript">
            <summary>
            Deletes a database change script
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.DatabaseChangeScripts_DeleteDatabaseProvider">
            <summary>
            Deletes a database provider
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.DatabaseChangeScripts_EditChangeScript">
            <summary>
            Updates an existing database change script
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.DatabaseChangeScripts_GetChangeScript">
            <summary>
            Gets the specified database change script
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.DatabaseChangeScripts_GetChangeScripts">
            <summary>
            Gets all the database change scripts that match the specified criteria
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.DatabaseChangeScripts_GetDatabaseChangeScriptExecution">
            <summary>
            Gets the specified database change script execution details
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.DatabaseChangeScripts_GetDatabaseChangeScriptExecutions">
            <summary>
            Gets all the database change script executions that have occurred matching the specified criteria
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.DatabaseChangeScripts_GetDatabaseProvider">
            <summary>
            Gets the specified database provider
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.DatabaseChangeScripts_GetDatabaseProviders">
            <summary>
            Gets all the database providers that match the specified criteria
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.DatabaseChangeScripts_LogExecution">
            <summary>
            Logs the execution of a database change script
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Environments_AddOrRemoveServer">
            <summary>
            Associates or disassociates a server from a specified environment
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Environments_AddOrRemoveServerFromGroup">
            <summary>
            Adds or removes a server from a specified server group
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Environments_CreateOrUpdateEnvironment">
            <summary>
            Creates a new environment or updates an existing one
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Environments_CreateOrUpdateServer">
            <summary>
            Creates a new server, or updates an existing one
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Environments_DeleteEnvironment">
            <summary>
            Soft deletes an environment
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Environments_DeleteServer">
            <summary>
            Deletes a server
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Environments_GetEnvironment">
            <summary>
            Gets an environment
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Environments_GetEnvironments">
            <summary>
            Gets the environments for a specified application, or all environments if no application is provided
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Environments_GetEnvironmentsAndServers">
            <summary>
            Gets the a dataset containing all environments, all environment/server relations, and servers
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Environments_GetServer">
            <summary>
            Gets the details of a specific server and all the environments it belongs to
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Environments_GetServers">
            <summary>
            Gets all the servers in the system
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Environments_GetServersInGroup">
            <summary>
            Gets all the servers in a specified server group
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Environments_ResequenceEnvironment">
            <summary>
            Resequences the specified environment by placing it where another environment is sequenced
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Environments_UndeleteEnvironment">
            <summary>
            Undeletes the specified environment
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Environments_UpdateServerStatus">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Events_GetEventOccurence">
            <summary>
            Get a specific event occurence along with its event details
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Events_GetEventOccurences">
            <summary>
            Gets all the event occurences in the system for a specific application, or all applications, limited to a specified count if provided
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Events_GetNotifiers">
            <summary>
            Gets the notifiers that have arisen since the date specified
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Executions_AppendActionLog">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Executions_CancelExecution">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Executions_CompleteAction">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Executions_FailExecutingPlans">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Executions_GetAndExecuteNextAction">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Executions_GetExecutionsToExecute">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Executions_GetManualActionsInProgress">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Executions_GetManualActionsInProgressForUser">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Executions_GetOrSetManualActionComplete">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Executions_GetServers">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Executions_SkipPlan">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Executions_ValidateForReexecutionFromLastFailed">
            <summary>
            Indicates whether an execution is eligible to be re-executed from the last failed action
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ExtensionConfiguration_DeleteConfiguration">
            <summary>
            Deletes an extension configuration
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ExtensionConfiguration_GetConfiguration">
            <summary>
            Gets the details of an extension configurer for extension with the specified name
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ExtensionConfiguration_GetConfigurations">
            <summary>
            Gets the details for all extension configurers in the system, or a specific one if specified
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.ExtensionConfiguration_SaveConfiguration">
            <summary>
            Creates an extension configurer in the system, or updates an existing one
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Features_GetFeatureLevel">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Features_GetFeatureLevels">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Features_SetFeatureLevel">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.InvalidateLastActionReexecution">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.LicenseKeys_ActivateLicenseKey">
            <summary>
            Sets the activation code for a license key.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.LicenseKeys_AddLicenseKey">
            <summary>
            Adds a new license key.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.LicenseKeys_DeleteLicenseKey">
            <summary>
            Deletes a license key.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.LicenseKeys_GetLicenseKeys">
            <summary>
            Gets all the license keys.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.LogMessages_AddMessage">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.LogMessages_DeleteMessages">
            <summary>
            Deletes a specified message from the error log
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.LogMessages_GetMessage">
            <summary>
            Gets a specified message from the error log
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.LogMessages_GetMessages">
            <summary>
            Gets the messages from the error log that match the specified criteria
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Notifiers_CreateOrUpdateNotifier">
            <summary>
            Creates a new notifier, or updates an existing one
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Notifiers_DeleteNotifier">
            <summary>
            Deletes a notifier from the system
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Notifiers_GetNotifier">
            <summary>
            Gets a notifier and a list of event codes that the notifier is subscribed to
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Notifiers_GetNotifiers">
            <summary>
            Gets a list of notifiers for the specified user, or all users if no user is specified
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Plans_ChangeActionGroup">
            <summary>
            Moves an action into a different action group
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Plans_ChangeActionGroupEnvironment">
            <summary>
            Moves a plan action group to the final position of a deployment plan in a new environment
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Plans_CreateOrUpdateAction">
            <summary>
            Creates an action in the specified action group, or updates an existing one
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Plans_CreatePlanActionGroup">
            <summary>
            Creates a new action group for the specified environment of an application
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Plans_DeleteAction">
            <summary>
            Deletes an action from an action group
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Plans_DeletePlanActionGroup">
            <summary>
            Deletes the specified action group
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Plans_GetAction">
            <summary>
            Gets the details of the specified action
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Plans_GetActionsInProgress">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Plans_GetPlanActionGroup">
            <summary>
            Gets the details of the specified plan, and all the actions associated with the plan
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Plans_GetPlanActionGroups">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Plans_GetPlansInApplications">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Plans_GetServersForPlan">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Plans_ResequenceAction">
            <summary>
            Changes the sequence of an action within a plan
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Plans_ResequenceActionGroup">
            <summary>
            Changes the sequence of a plan action group
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Plans_UpdateActionGroup">
            <summary>
            Updates the specified plan
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Plans_UpdatePlanActionGroup">
            <summary>
            Updates the specified plan
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Plans_UpdatePredicates">
            <summary>
            Updates the predicates for the specified plan
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.PromotionRequirements_CreateOrUpdatePromotionRequirement">
            <summary>
            Creates a new promotion requirement, or updates an existing one
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.PromotionRequirements_DeletePromotionRequirement">
            <summary>
            Deletes a promotion requirement from the system
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.PromotionRequirements_GetPromotionRequirement">
            <summary>
            Gets the details of the specified promotion requirement
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.PromotionRequirements_GetPromotionRequirements">
            <summary>
            Gets all the promotion requirements for the specified environment in a workflow
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.PromotionRequirements_GetPromotionRequirementStatus">
            <summary>
            Gets the status for the specified state-managed promotion requirement
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.PromotionRequirements_SetPromotionRequirementStatus">
            <summary>
            Sets the status of a state-managed promotion requirement
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Providers_CreateOrUpdateProvider">
            <summary>
            Creates a new provider
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Providers_DeleteProvider">
            <summary>
            Deletes the specified provider
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Providers_GetProvider">
            <summary>
            Gets the details of the specified provider
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Providers_GetProviders">
            <summary>
            Gets a list of providers in the system based on the specified criteria
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Releases_CancelRelease">
            <summary>
            Cancels the specified release
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Releases_CreateOrUpdateRelease">
            <summary>
            Creates a new release, or updates an existing one
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Releases_CreateOrUpdateReleaseNote">
            <summary>
            Creates a new release note, or updates an existing one
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Releases_DeleteReleaseNote">
            <summary>
            Deletes a release note from the system
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Releases_GetBuildExecutions">
            <summary>
            Gets the list of build executions for the specified release
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Releases_GetDependentReleases">
            <summary>
            Gets all releases with referenced deployables from a specified release
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Releases_GetRelease">
            <summary>
            Gets the details of a specified release and the set of deployables associated with the release
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Releases_GetReleaseNote">
            <summary>
            Gets a release note from the system
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Releases_GetReleaseNotes">
            <summary>
            Gets the release notes that match the specified criteria
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Releases_GetReleases">
            <summary>
            Gets a list of releases that match the specified criteria
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Releases_GetRequiredPromotions">
            <summary>
            Gets a list of the promotions that are required for the specified release
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Releases_ReleaseExists">
            <summary>
            Determines whether a release already exists, and also whether a newer release of an application exists
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Releases_UnCancelRelease">
            <summary>
            Uncancels a previously cancelled release
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Security_AddNamedUser">
            <summary>
            Assigns the specified user as a named user with the specified user class type
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Security_AddPrivilege">
            <summary>
            Grants or denies the specified principal the ability to perform a certain role
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Security_CreateOrUpdateRole">
            <summary>
            Creates a new role defined by the specified tasks
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Security_DeleteRole">
            <summary>
            Deletes the specified role from the system
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Security_GetNamedUser">
            <summary>
            Gets the specified named user
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Security_GetNamedUsers">
            <summary>
            Gets a list of the named users in the system
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Security_GetPrivileges">
            <summary>
            Gets a list of privileges assigned in the system
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Security_GetRole">
            <summary>
            Gets the specified role in the database, along with all the tasks that comprise the role
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Security_GetRoles">
            <summary>
            Gets all the roles in the system, along with all the tasks comprising each role
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Security_GetUserClassCounts">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Security_GetUserPrivileges">
            <summary>
            Gets the list of privileges specifically assigned to a user or any specified groups
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Security_IsAuthorizedForAnyTask">
            <summary>
            Determines whether or not the specified user with specified groups has authorized to perform a task
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Security_IsAuthorizedForTask">
            <summary>
            Determines whether or not the specified user with specified groups has authorized to perform a task
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Security_RemoveNamedUser">
            <summary>
            Removes the specified user as a named user
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Security_RemovePrivilege">
            <summary>
            Deletes a privilege from the system
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Security_UpdateUserClassType">
            <summary>
            Updates the user class type of the specified user
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Security_UserIsNamed">
            <summary>
            Determines whether or not a user is a named user in the system
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.UserConfiguration_GetUserConfiguration">
            <summary>
            Gets the a complete list of user configuration settings
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.UserConfiguration_GetValue">
            <summary>
            Gets the specified user configuration value
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.UserConfiguration_SetValue">
            <summary>
            Sets a user configuration value
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Users_CreateGroup">
            <summary>
            Creates a new user group in the system
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Users_CreateOrUpdateUser">
            <summary>
            Creates a new user in the system, or updates an existing one
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Users_DeleteGroup">
            <summary>
            Deletes a user group from the system, but does not delete the users who belong to the group
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Users_DeleteUser">
            <summary>
            Deletes a user from the system
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Users_GetGroups">
            <summary>
            Gets a list of user groups in the system
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Users_GetUser">
            <summary>
            Gets the details of the specified user, and a list of all the groups the user belongs to
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Users_GetUsers">
            <summary>
            Gets all the users in the system, along with all the groups in the system
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Users_GetUsersInGroup">
            <summary>
            Gets a list of users in the specified group
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Users_SearchGroups">
            <summary>
            Gets a specific group by name, or if a wildcard search is performed, a group whose name starts with the specified name
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Users_SearchUsers">
            <summary>
            Gets the specified user, or searchs for a user whose name starts with any of the specified criteria
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Users_SetPassword">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Users_ValidateLogin">
            <summary>
            Validates the password of a specified user
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Variables_CreateOrUpdateVariable">
            <summary>
            Creates a new variable in the system, or updates an existing one
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Variables_DeleteVariable">
            <summary>
            Deletes the specified variable
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Variables_GetBuildScheduleVariables">
            <summary>
            Gets the build schedule variables for the specified build schedule
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Variables_GetBuildScheduleVariablesForExecution">
            <summary>
            Gets a list of build schedule variables and their values
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Variables_GetBuildVariables">
            <summary>
            Gets a list of build variables for the specified build
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Variables_GetExecutionVariables">
            <summary>
            Stored procedure for internal use only.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Variables_GetNewBuildDefaults">
            <summary>
            Gets the default variable values in preparation for a new build
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Variables_GetNewReleaseDefaults">
            <summary>
            Gets the default variable values for release variables
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Variables_GetReleaseVariables">
            <summary>
            Gets the variables for the specified release
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Variables_GetVariable">
            <summary>
            Gets the specified variable
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Variables_GetVariables">
            <summary>
            Gets the variables in the system that match the specified criteria
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Variables_SetVariableValues">
            <summary>
            Sets the values of variables at the appropriate build, release, or build schedule level.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Workflows_AddOrRemoveApproval">
            <summary>
            Adds or removes an approval to the specified workflow step
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Workflows_AddOrRemoveClosedIssuesRequired">
            <summary>
            Toggles whether or not to require all issues to be closed before promotion to an environment
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Workflows_CreateOrUpdateWorkflow">
            <summary>
            Adds a new workflow to an application, or updates an existing one
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Workflows_CreateOrUpdateWorkflowStep">
            <summary>
            Creates a new workflow step
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Workflows_DeleteStep">
            <summary>
            Deletes a workflow step
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Workflows_GetPromotionApprovalRequirements">
            <summary>
            Gets the list of approvals required for the specified environment in the workflow
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Workflows_GetWorkflow">
            <summary>
            Gets a specific workflow and all of its workflow steps
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Workflows_GetWorkflows">
            <summary>
            Gets a list of all workflows for an application
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Workflows_GetWorkflowStep">
            <summary>
            Gets the specified workflow step
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Workflows_MoveApproval">
            <summary>
            Moves an approval up or down in sequence
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcedures.Workflows_MoveWorkflowStep">
            <summary>
            Moves a workflow step to a new sequence
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.StoredProcs">
            <summary>
            List of all Stored Procedures
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ApplicationGroups_CreateOrUpdateApplicationGroup(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            ApplicationGroups_CreateOrUpdateApplicationGroup Stored Procedure
            </summary>
            <returns>StoredProcedures.ApplicationGroups_CreateOrUpdateApplicationGroup</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ApplicationGroups_DeleteApplicationGroup(System.Nullable{System.Int32})">
            <summary>
            ApplicationGroups_DeleteApplicationGroup Stored Procedure
            </summary>
            <returns>StoredProcedures.ApplicationGroups_DeleteApplicationGroup</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ApplicationGroups_GetApplicationGroup(System.Nullable{System.Int32})">
            <summary>
            ApplicationGroups_GetApplicationGroup Stored Procedure
            </summary>
            <returns>StoredProcedures.ApplicationGroups_GetApplicationGroup</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ApplicationGroups_GetApplicationGroups">
            <summary>
            ApplicationGroups_GetApplicationGroups Stored Procedure
            </summary>
            <returns>StoredProcedures.ApplicationGroups_GetApplicationGroups</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Applications_AddImportedDeployable(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Applications_AddImportedDeployable Stored Procedure
            </summary>
            <returns>StoredProcedures.Applications_AddImportedDeployable</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Applications_CloneApplication(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Applications_CloneApplication Stored Procedure
            </summary>
            <returns>StoredProcedures.Applications_CloneApplication</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Applications_CreateApplication(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Applications_CreateApplication Stored Procedure
            </summary>
            <returns>StoredProcedures.Applications_CreateApplication</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Applications_CreateOrUpdateDeployable(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Applications_CreateOrUpdateDeployable Stored Procedure
            </summary>
            <returns>StoredProcedures.Applications_CreateOrUpdateDeployable</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Applications_DeleteImportedDeployable(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Applications_DeleteImportedDeployable Stored Procedure
            </summary>
            <returns>StoredProcedures.Applications_DeleteImportedDeployable</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Applications_EditApplication(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Applications_EditApplication Stored Procedure
            </summary>
            <returns>StoredProcedures.Applications_EditApplication</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Applications_GetApplication(System.Nullable{System.Int32})">
            <summary>
            Applications_GetApplication Stored Procedure
            </summary>
            <returns>StoredProcedures.Applications_GetApplication</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Applications_GetApplications(System.Nullable{System.Int32})">
            <summary>
            Applications_GetApplications Stored Procedure
            </summary>
            <returns>StoredProcedures.Applications_GetApplications</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Applications_GetDependentApplications(System.Nullable{System.Int32})">
            <summary>
            Applications_GetDependentApplications Stored Procedure
            </summary>
            <returns>StoredProcedures.Applications_GetDependentApplications</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Applications_GetDeployable(System.Nullable{System.Int32})">
            <summary>
            Applications_GetDeployable Stored Procedure
            </summary>
            <returns>StoredProcedures.Applications_GetDeployable</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Applications_GetDeployableDependencies(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Applications_GetDeployableDependencies Stored Procedure
            </summary>
            <returns>StoredProcedures.Applications_GetDeployableDependencies</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Applications_GetDeployables(System.Nullable{System.Int32})">
            <summary>
            Applications_GetDeployables Stored Procedure
            </summary>
            <returns>StoredProcedures.Applications_GetDeployables</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Applications_GetImportedDeployables(System.Nullable{System.Int32})">
            <summary>
            Applications_GetImportedDeployables Stored Procedure
            </summary>
            <returns>StoredProcedures.Applications_GetImportedDeployables</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Applications_PurgeApplicationData(System.Nullable{System.Int32})">
            <summary>
            Applications_PurgeApplicationData Stored Procedure
            </summary>
            <returns>StoredProcedures.Applications_PurgeApplicationData</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Applications_PurgeDeployableData(System.Nullable{System.Int32})">
            <summary>
            Applications_PurgeDeployableData Stored Procedure
            </summary>
            <returns>StoredProcedures.Applications_PurgeDeployableData</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Applications_SetDashboard(System.Nullable{System.Int32},System.String)">
            <summary>
            Applications_SetDashboard Stored Procedure
            </summary>
            <returns>StoredProcedures.Applications_SetDashboard</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Applications_SetDeployableDependencies(System.Nullable{System.Int32},System.String)">
            <summary>
            Applications_SetDeployableDependencies Stored Procedure
            </summary>
            <returns>StoredProcedures.Applications_SetDeployableDependencies</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Applications_SetIssueTracker(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Applications_SetIssueTracker Stored Procedure
            </summary>
            <returns>StoredProcedures.Applications_SetIssueTracker</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Artifacts_CreateOrReplaceArtifact(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Artifacts_CreateOrReplaceArtifact Stored Procedure
            </summary>
            <returns>StoredProcedures.Artifacts_CreateOrReplaceArtifact</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Artifacts_GetArtifacts(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Artifacts_GetArtifacts Stored Procedure
            </summary>
            <returns>StoredProcedures.Artifacts_GetArtifacts</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.BuildMaster_GetCurrentDateTime">
            <summary>
            BuildMaster_GetCurrentDateTime Stored Procedure
            </summary>
            <returns>StoredProcedures.BuildMaster_GetCurrentDateTime</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.BuildOutputs_AddOutput(System.Nullable{System.Int32},System.String,System.Byte[],System.String)">
            <summary>
            BuildOutputs_AddOutput Stored Procedure
            </summary>
            <returns>StoredProcedures.BuildOutputs_AddOutput</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.BuildOutputs_GetOutput(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            BuildOutputs_GetOutput Stored Procedure
            </summary>
            <returns>StoredProcedures.BuildOutputs_GetOutput</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.BuildOutputs_GetOutputs(System.Nullable{System.Int32})">
            <summary>
            BuildOutputs_GetOutputs Stored Procedure
            </summary>
            <returns>StoredProcedures.BuildOutputs_GetOutputs</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Builds_AddApproval(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Builds_AddApproval Stored Procedure
            </summary>
            <returns>StoredProcedures.Builds_AddApproval</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Builds_CompletePromotion(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Builds_CompletePromotion Stored Procedure
            </summary>
            <returns>StoredProcedures.Builds_CompletePromotion</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Builds_CreateBuild(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String)">
            <summary>
            Builds_CreateBuild Stored Procedure
            </summary>
            <returns>StoredProcedures.Builds_CreateBuild</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Builds_CreateDependentBuilds(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String)">
            <summary>
            Builds_CreateDependentBuilds Stored Procedure
            </summary>
            <returns>StoredProcedures.Builds_CreateDependentBuilds</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Builds_GetAllPromotionRequiredApprovalsByUser(System.String,System.String)">
            <summary>
            Builds_GetAllPromotionRequiredApprovalsByUser Stored Procedure
            </summary>
            <returns>StoredProcedures.Builds_GetAllPromotionRequiredApprovalsByUser</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Builds_GetBuild(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Builds_GetBuild Stored Procedure
            </summary>
            <returns>StoredProcedures.Builds_GetBuild</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Builds_GetBuilds(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Builds_GetBuilds Stored Procedure
            </summary>
            <returns>StoredProcedures.Builds_GetBuilds</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Builds_GetDependentPromotions(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Builds_GetDependentPromotions Stored Procedure
            </summary>
            <returns>StoredProcedures.Builds_GetDependentPromotions</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Builds_GetExecution(System.Nullable{System.Int32})">
            <summary>
            Builds_GetExecution Stored Procedure
            </summary>
            <returns>StoredProcedures.Builds_GetExecution</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Builds_GetExecutionLog(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Builds_GetExecutionLog Stored Procedure
            </summary>
            <returns>StoredProcedures.Builds_GetExecutionLog</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Builds_GetExecutions(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Builds_GetExecutions Stored Procedure
            </summary>
            <returns>StoredProcedures.Builds_GetExecutions</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Builds_GetPromotion(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Builds_GetPromotion Stored Procedure
            </summary>
            <returns>StoredProcedures.Builds_GetPromotion</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Builds_GetPromotionApproval(System.Nullable{System.Int32})">
            <summary>
            Builds_GetPromotionApproval Stored Procedure
            </summary>
            <returns>StoredProcedures.Builds_GetPromotionApproval</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Builds_GetPromotionApprovals(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Builds_GetPromotionApprovals Stored Procedure
            </summary>
            <returns>StoredProcedures.Builds_GetPromotionApprovals</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Builds_GetPromotionRequiredApprovals(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Builds_GetPromotionRequiredApprovals Stored Procedure
            </summary>
            <returns>StoredProcedures.Builds_GetPromotionRequiredApprovals</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Builds_GetPromotionRequiredApprovalsByUser(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Builds_GetPromotionRequiredApprovalsByUser Stored Procedure
            </summary>
            <returns>StoredProcedures.Builds_GetPromotionRequiredApprovalsByUser</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Builds_GetPromotions(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Builds_GetPromotions Stored Procedure
            </summary>
            <returns>StoredProcedures.Builds_GetPromotions</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Builds_GetRequiredPromotions(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Builds_GetRequiredPromotions Stored Procedure
            </summary>
            <returns>StoredProcedures.Builds_GetRequiredPromotions</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Builds_InitiateBuildExecution(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32})">
            <summary>
            Builds_InitiateBuildExecution Stored Procedure
            </summary>
            <returns>StoredProcedures.Builds_InitiateBuildExecution</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Builds_PromoteBuild(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Builds_PromoteBuild Stored Procedure
            </summary>
            <returns>StoredProcedures.Builds_PromoteBuild</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Builds_PromoteDependents(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Builds_PromoteDependents Stored Procedure
            </summary>
            <returns>StoredProcedures.Builds_PromoteDependents</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Builds_RejectBuild(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Builds_RejectBuild Stored Procedure
            </summary>
            <returns>StoredProcedures.Builds_RejectBuild</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Builds_RemoveApproval(System.Nullable{System.Int32})">
            <summary>
            Builds_RemoveApproval Stored Procedure
            </summary>
            <returns>StoredProcedures.Builds_RemoveApproval</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Builds_ValidateForPromotion(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Builds_ValidateForPromotion Stored Procedure
            </summary>
            <returns>StoredProcedures.Builds_ValidateForPromotion</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.BuildSchedules_CreateOrUpdateRecurring(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            BuildSchedules_CreateOrUpdateRecurring Stored Procedure
            </summary>
            <returns>StoredProcedures.BuildSchedules_CreateOrUpdateRecurring</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.BuildSchedules_CreateOrUpdateSchedule(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            BuildSchedules_CreateOrUpdateSchedule Stored Procedure
            </summary>
            <returns>StoredProcedures.BuildSchedules_CreateOrUpdateSchedule</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.BuildSchedules_CreateOrUpdateSCMTriggered(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            BuildSchedules_CreateOrUpdateSCMTriggered Stored Procedure
            </summary>
            <returns>StoredProcedures.BuildSchedules_CreateOrUpdateSCMTriggered</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.BuildSchedules_CreateOrUpdateURLTriggered(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            BuildSchedules_CreateOrUpdateURLTriggered Stored Procedure
            </summary>
            <returns>StoredProcedures.BuildSchedules_CreateOrUpdateURLTriggered</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.BuildSchedules_DeleteBuildSchedule(System.Nullable{System.Int32})">
            <summary>
            BuildSchedules_DeleteBuildSchedule Stored Procedure
            </summary>
            <returns>StoredProcedures.BuildSchedules_DeleteBuildSchedule</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.BuildSchedules_GetBuildSchedule(System.Nullable{System.Int32})">
            <summary>
            BuildSchedules_GetBuildSchedule Stored Procedure
            </summary>
            <returns>StoredProcedures.BuildSchedules_GetBuildSchedule</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.BuildSchedules_GetBuildSchedules(System.Nullable{System.Int32},System.String)">
            <summary>
            BuildSchedules_GetBuildSchedules Stored Procedure
            </summary>
            <returns>StoredProcedures.BuildSchedules_GetBuildSchedules</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.BuildSchedules_GetScheduled(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            BuildSchedules_GetScheduled Stored Procedure
            </summary>
            <returns>StoredProcedures.BuildSchedules_GetScheduled</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.BuildTestResults_GetTestGroupResults(System.Nullable{System.Int32})">
            <summary>
            BuildTestResults_GetTestGroupResults Stored Procedure
            </summary>
            <returns>StoredProcedures.BuildTestResults_GetTestGroupResults</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.BuildTestResults_GetTestLog(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            BuildTestResults_GetTestLog Stored Procedure
            </summary>
            <returns>StoredProcedures.BuildTestResults_GetTestLog</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.BuildTestResults_GetTestResults(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            BuildTestResults_GetTestResults Stored Procedure
            </summary>
            <returns>StoredProcedures.BuildTestResults_GetTestResults</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.BuildTestResults_RecordTestResult(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            BuildTestResults_RecordTestResult Stored Procedure
            </summary>
            <returns>StoredProcedures.BuildTestResults_RecordTestResult</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ChangeControlPerformances_GetReleaseSummary(System.Nullable{System.Int32})">
            <summary>
            ChangeControlPerformances_GetReleaseSummary Stored Procedure
            </summary>
            <returns>StoredProcedures.ChangeControlPerformances_GetReleaseSummary</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ChangeControls_CreateOrUpdateChangeControl(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            ChangeControls_CreateOrUpdateChangeControl Stored Procedure
            </summary>
            <returns>StoredProcedures.ChangeControls_CreateOrUpdateChangeControl</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ChangeControls_DeleteChangeControl(System.Nullable{System.Int32})">
            <summary>
            ChangeControls_DeleteChangeControl Stored Procedure
            </summary>
            <returns>StoredProcedures.ChangeControls_DeleteChangeControl</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ChangeControls_GetChangeControl(System.Nullable{System.Int32})">
            <summary>
            ChangeControls_GetChangeControl Stored Procedure
            </summary>
            <returns>StoredProcedures.ChangeControls_GetChangeControl</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ChangeControls_GetChangeControlPerformances(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            ChangeControls_GetChangeControlPerformances Stored Procedure
            </summary>
            <returns>StoredProcedures.ChangeControls_GetChangeControlPerformances</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ChangeControls_GetChangeControls(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            ChangeControls_GetChangeControls Stored Procedure
            </summary>
            <returns>StoredProcedures.ChangeControls_GetChangeControls</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ChangeControls_PerformChangeControl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            ChangeControls_PerformChangeControl Stored Procedure
            </summary>
            <returns>StoredProcedures.ChangeControls_PerformChangeControl</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Configuration_GetConfiguration">
            <summary>
            Configuration_GetConfiguration Stored Procedure
            </summary>
            <returns>StoredProcedures.Configuration_GetConfiguration</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Configuration_GetValue(System.String,System.String,System.String)">
            <summary>
            Configuration_GetValue Stored Procedure
            </summary>
            <returns>StoredProcedures.Configuration_GetValue</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Configuration_SetValue(System.String,System.String,System.String)">
            <summary>
            Configuration_SetValue Stored Procedure
            </summary>
            <returns>StoredProcedures.Configuration_SetValue</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Configuration_SetValueWithoutEvent(System.String,System.String,System.String)">
            <summary>
            Configuration_SetValueWithoutEvent Stored Procedure
            </summary>
            <returns>StoredProcedures.Configuration_SetValueWithoutEvent</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ConfigurationFiles_CreateConfigurationFile(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            ConfigurationFiles_CreateConfigurationFile Stored Procedure
            </summary>
            <returns>StoredProcedures.ConfigurationFiles_CreateConfigurationFile</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ConfigurationFiles_CreateConfigurationFileInstance(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            ConfigurationFiles_CreateConfigurationFileInstance Stored Procedure
            </summary>
            <returns>StoredProcedures.ConfigurationFiles_CreateConfigurationFileInstance</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ConfigurationFiles_CreateConfigurationFileVersions(System.Nullable{System.Int32},System.String)">
            <summary>
            ConfigurationFiles_CreateConfigurationFileVersions Stored Procedure
            </summary>
            <returns>StoredProcedures.ConfigurationFiles_CreateConfigurationFileVersions</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ConfigurationFiles_DeployConfigurationFile(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            ConfigurationFiles_DeployConfigurationFile Stored Procedure
            </summary>
            <returns>StoredProcedures.ConfigurationFiles_DeployConfigurationFile</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ConfigurationFiles_GetConfigurationFile(System.Nullable{System.Int32},System.String)">
            <summary>
            ConfigurationFiles_GetConfigurationFile Stored Procedure
            </summary>
            <returns>StoredProcedures.ConfigurationFiles_GetConfigurationFile</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ConfigurationFiles_GetConfigurationFileDeployments(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            ConfigurationFiles_GetConfigurationFileDeployments Stored Procedure
            </summary>
            <returns>StoredProcedures.ConfigurationFiles_GetConfigurationFileDeployments</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ConfigurationFiles_GetConfigurationFileInstances(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            ConfigurationFiles_GetConfigurationFileInstances Stored Procedure
            </summary>
            <returns>StoredProcedures.ConfigurationFiles_GetConfigurationFileInstances</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ConfigurationFiles_GetConfigurationFiles(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            ConfigurationFiles_GetConfigurationFiles Stored Procedure
            </summary>
            <returns>StoredProcedures.ConfigurationFiles_GetConfigurationFiles</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ConfigurationFiles_GetConfigurationFileVersion(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            ConfigurationFiles_GetConfigurationFileVersion Stored Procedure
            </summary>
            <returns>StoredProcedures.ConfigurationFiles_GetConfigurationFileVersion</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ConfigurationFiles_GetConfigurationFileVersions(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            ConfigurationFiles_GetConfigurationFileVersions Stored Procedure
            </summary>
            <returns>StoredProcedures.ConfigurationFiles_GetConfigurationFileVersions</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ConfigurationFiles_GetConfigurationFileVersionsByRelease(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            ConfigurationFiles_GetConfigurationFileVersionsByRelease Stored Procedure
            </summary>
            <returns>StoredProcedures.ConfigurationFiles_GetConfigurationFileVersionsByRelease</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ConfigurationFiles_ReactivateConfigurationFile(System.Nullable{System.Int32})">
            <summary>
            ConfigurationFiles_ReactivateConfigurationFile Stored Procedure
            </summary>
            <returns>StoredProcedures.ConfigurationFiles_ReactivateConfigurationFile</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ConfigurationFiles_RenameConfigurationFile(System.Nullable{System.Int32},System.String)">
            <summary>
            ConfigurationFiles_RenameConfigurationFile Stored Procedure
            </summary>
            <returns>StoredProcedures.ConfigurationFiles_RenameConfigurationFile</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ConfigurationFiles_UpdateConfigurationFile(System.Nullable{System.Int32},System.String)">
            <summary>
            ConfigurationFiles_UpdateConfigurationFile Stored Procedure
            </summary>
            <returns>StoredProcedures.ConfigurationFiles_UpdateConfigurationFile</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ConfigurationFiles_UpdateConfigurationFileInstance(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            ConfigurationFiles_UpdateConfigurationFileInstance Stored Procedure
            </summary>
            <returns>StoredProcedures.ConfigurationFiles_UpdateConfigurationFileInstance</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Dashboards_ApplicationOverview(System.Nullable{System.Int32})">
            <summary>
            Dashboards_ApplicationOverview Stored Procedure
            </summary>
            <returns>StoredProcedures.Dashboards_ApplicationOverview</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Dashboards_CreateDashboard(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Dashboards_CreateDashboard Stored Procedure
            </summary>
            <returns>StoredProcedures.Dashboards_CreateDashboard</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Dashboards_CreateOrUpdateGadget(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Dashboards_CreateOrUpdateGadget Stored Procedure
            </summary>
            <returns>StoredProcedures.Dashboards_CreateOrUpdateGadget</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Dashboards_DeleteGadget(System.Nullable{System.Int32})">
            <summary>
            Dashboards_DeleteGadget Stored Procedure
            </summary>
            <returns>StoredProcedures.Dashboards_DeleteGadget</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Dashboards_GetApplications(System.Nullable{System.Int32})">
            <summary>
            Dashboards_GetApplications Stored Procedure
            </summary>
            <returns>StoredProcedures.Dashboards_GetApplications</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Dashboards_GetDashboard(System.Nullable{System.Int32},System.String)">
            <summary>
            Dashboards_GetDashboard Stored Procedure
            </summary>
            <returns>StoredProcedures.Dashboards_GetDashboard</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Dashboards_GetGadget(System.Nullable{System.Int32})">
            <summary>
            Dashboards_GetGadget Stored Procedure
            </summary>
            <returns>StoredProcedures.Dashboards_GetGadget</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Dashboards_GetGadgets(System.Nullable{System.Int32})">
            <summary>
            Dashboards_GetGadgets Stored Procedure
            </summary>
            <returns>StoredProcedures.Dashboards_GetGadgets</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Dashboards_ResequenceGadget(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Dashboards_ResequenceGadget Stored Procedure
            </summary>
            <returns>StoredProcedures.Dashboards_ResequenceGadget</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.DatabaseChangeScripts_AddDatabaseProvider(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            DatabaseChangeScripts_AddDatabaseProvider Stored Procedure
            </summary>
            <returns>StoredProcedures.DatabaseChangeScripts_AddDatabaseProvider</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.DatabaseChangeScripts_CreateNewChangeScript(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            DatabaseChangeScripts_CreateNewChangeScript Stored Procedure
            </summary>
            <returns>StoredProcedures.DatabaseChangeScripts_CreateNewChangeScript</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.DatabaseChangeScripts_DeleteChangeScript(System.Nullable{System.Int32})">
            <summary>
            DatabaseChangeScripts_DeleteChangeScript Stored Procedure
            </summary>
            <returns>StoredProcedures.DatabaseChangeScripts_DeleteChangeScript</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.DatabaseChangeScripts_DeleteDatabaseProvider(System.Nullable{System.Int32})">
            <summary>
            DatabaseChangeScripts_DeleteDatabaseProvider Stored Procedure
            </summary>
            <returns>StoredProcedures.DatabaseChangeScripts_DeleteDatabaseProvider</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.DatabaseChangeScripts_EditChangeScript(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            DatabaseChangeScripts_EditChangeScript Stored Procedure
            </summary>
            <returns>StoredProcedures.DatabaseChangeScripts_EditChangeScript</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.DatabaseChangeScripts_GetChangeScript(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            DatabaseChangeScripts_GetChangeScript Stored Procedure
            </summary>
            <returns>StoredProcedures.DatabaseChangeScripts_GetChangeScript</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.DatabaseChangeScripts_GetChangeScripts(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            DatabaseChangeScripts_GetChangeScripts Stored Procedure
            </summary>
            <returns>StoredProcedures.DatabaseChangeScripts_GetChangeScripts</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.DatabaseChangeScripts_GetDatabaseChangeScriptExecution(System.Nullable{System.Int32})">
            <summary>
            DatabaseChangeScripts_GetDatabaseChangeScriptExecution Stored Procedure
            </summary>
            <returns>StoredProcedures.DatabaseChangeScripts_GetDatabaseChangeScriptExecution</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.DatabaseChangeScripts_GetDatabaseChangeScriptExecutions(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            DatabaseChangeScripts_GetDatabaseChangeScriptExecutions Stored Procedure
            </summary>
            <returns>StoredProcedures.DatabaseChangeScripts_GetDatabaseChangeScriptExecutions</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.DatabaseChangeScripts_GetDatabaseProvider(System.Nullable{System.Int32})">
            <summary>
            DatabaseChangeScripts_GetDatabaseProvider Stored Procedure
            </summary>
            <returns>StoredProcedures.DatabaseChangeScripts_GetDatabaseProvider</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.DatabaseChangeScripts_GetDatabaseProviders(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            DatabaseChangeScripts_GetDatabaseProviders Stored Procedure
            </summary>
            <returns>StoredProcedures.DatabaseChangeScripts_GetDatabaseProviders</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.DatabaseChangeScripts_LogExecution(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            DatabaseChangeScripts_LogExecution Stored Procedure
            </summary>
            <returns>StoredProcedures.DatabaseChangeScripts_LogExecution</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Environments_AddOrRemoveServer(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Environments_AddOrRemoveServer Stored Procedure
            </summary>
            <returns>StoredProcedures.Environments_AddOrRemoveServer</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Environments_AddOrRemoveServerFromGroup(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Environments_AddOrRemoveServerFromGroup Stored Procedure
            </summary>
            <returns>StoredProcedures.Environments_AddOrRemoveServerFromGroup</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Environments_CreateOrUpdateEnvironment(System.Nullable{System.Int32},System.String)">
            <summary>
            Environments_CreateOrUpdateEnvironment Stored Procedure
            </summary>
            <returns>StoredProcedures.Environments_CreateOrUpdateEnvironment</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Environments_CreateOrUpdateServer(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Environments_CreateOrUpdateServer Stored Procedure
            </summary>
            <returns>StoredProcedures.Environments_CreateOrUpdateServer</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Environments_DeleteEnvironment(System.Nullable{System.Int32})">
            <summary>
            Environments_DeleteEnvironment Stored Procedure
            </summary>
            <returns>StoredProcedures.Environments_DeleteEnvironment</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Environments_DeleteServer(System.Nullable{System.Int32})">
            <summary>
            Environments_DeleteServer Stored Procedure
            </summary>
            <returns>StoredProcedures.Environments_DeleteServer</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Environments_GetEnvironment(System.Nullable{System.Int32})">
            <summary>
            Environments_GetEnvironment Stored Procedure
            </summary>
            <returns>StoredProcedures.Environments_GetEnvironment</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Environments_GetEnvironments(System.Nullable{System.Int32})">
            <summary>
            Environments_GetEnvironments Stored Procedure
            </summary>
            <returns>StoredProcedures.Environments_GetEnvironments</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Environments_GetEnvironmentsAndServers(System.String)">
            <summary>
            Environments_GetEnvironmentsAndServers Stored Procedure
            </summary>
            <returns>StoredProcedures.Environments_GetEnvironmentsAndServers</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Environments_GetServer(System.Nullable{System.Int32})">
            <summary>
            Environments_GetServer Stored Procedure
            </summary>
            <returns>StoredProcedures.Environments_GetServer</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Environments_GetServers">
            <summary>
            Environments_GetServers Stored Procedure
            </summary>
            <returns>StoredProcedures.Environments_GetServers</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Environments_GetServersInGroup(System.Nullable{System.Int32})">
            <summary>
            Environments_GetServersInGroup Stored Procedure
            </summary>
            <returns>StoredProcedures.Environments_GetServersInGroup</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Environments_ResequenceEnvironment(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Environments_ResequenceEnvironment Stored Procedure
            </summary>
            <returns>StoredProcedures.Environments_ResequenceEnvironment</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Environments_UndeleteEnvironment(System.Nullable{System.Int32})">
            <summary>
            Environments_UndeleteEnvironment Stored Procedure
            </summary>
            <returns>StoredProcedures.Environments_UndeleteEnvironment</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Environments_UpdateServerStatus(System.Nullable{System.Int32},System.String)">
            <summary>
            Environments_UpdateServerStatus Stored Procedure
            </summary>
            <returns>StoredProcedures.Environments_UpdateServerStatus</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Events_GetEventOccurence(System.Nullable{System.Int32})">
            <summary>
            Events_GetEventOccurence Stored Procedure
            </summary>
            <returns>StoredProcedures.Events_GetEventOccurence</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Events_GetEventOccurences(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Events_GetEventOccurences Stored Procedure
            </summary>
            <returns>StoredProcedures.Events_GetEventOccurences</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Events_GetNotifiers(System.Nullable{System.DateTime})">
            <summary>
            Events_GetNotifiers Stored Procedure
            </summary>
            <returns>StoredProcedures.Events_GetNotifiers</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Executions_AppendActionLog(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Executions_AppendActionLog Stored Procedure
            </summary>
            <returns>StoredProcedures.Executions_AppendActionLog</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Executions_CancelExecution(System.Nullable{System.Int32})">
            <summary>
            Executions_CancelExecution Stored Procedure
            </summary>
            <returns>StoredProcedures.Executions_CancelExecution</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Executions_CompleteAction(System.Nullable{System.Int32})">
            <summary>
            Executions_CompleteAction Stored Procedure
            </summary>
            <returns>StoredProcedures.Executions_CompleteAction</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Executions_FailExecutingPlans">
            <summary>
            Executions_FailExecutingPlans Stored Procedure
            </summary>
            <returns>StoredProcedures.Executions_FailExecutingPlans</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Executions_GetAndExecuteNextAction(System.Nullable{System.Int32})">
            <summary>
            Executions_GetAndExecuteNextAction Stored Procedure
            </summary>
            <returns>StoredProcedures.Executions_GetAndExecuteNextAction</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Executions_GetExecutionsToExecute">
            <summary>
            Executions_GetExecutionsToExecute Stored Procedure
            </summary>
            <returns>StoredProcedures.Executions_GetExecutionsToExecute</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Executions_GetManualActionsInProgress(System.Nullable{System.Int32},System.String)">
            <summary>
            Executions_GetManualActionsInProgress Stored Procedure
            </summary>
            <returns>StoredProcedures.Executions_GetManualActionsInProgress</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Executions_GetManualActionsInProgressForUser(System.String,System.String)">
            <summary>
            Executions_GetManualActionsInProgressForUser Stored Procedure
            </summary>
            <returns>StoredProcedures.Executions_GetManualActionsInProgressForUser</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Executions_GetOrSetManualActionComplete(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Executions_GetOrSetManualActionComplete Stored Procedure
            </summary>
            <returns>StoredProcedures.Executions_GetOrSetManualActionComplete</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Executions_GetServers(System.Nullable{System.Int32})">
            <summary>
            Executions_GetServers Stored Procedure
            </summary>
            <returns>StoredProcedures.Executions_GetServers</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Executions_SkipPlan(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Executions_SkipPlan Stored Procedure
            </summary>
            <returns>StoredProcedures.Executions_SkipPlan</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Executions_ValidateForReexecutionFromLastFailed(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Executions_ValidateForReexecutionFromLastFailed Stored Procedure
            </summary>
            <returns>StoredProcedures.Executions_ValidateForReexecutionFromLastFailed</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ExtensionConfiguration_DeleteConfiguration(System.Nullable{System.Int32})">
            <summary>
            ExtensionConfiguration_DeleteConfiguration Stored Procedure
            </summary>
            <returns>StoredProcedures.ExtensionConfiguration_DeleteConfiguration</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ExtensionConfiguration_GetConfiguration(System.String,System.String,System.String)">
            <summary>
            ExtensionConfiguration_GetConfiguration Stored Procedure
            </summary>
            <returns>StoredProcedures.ExtensionConfiguration_GetConfiguration</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ExtensionConfiguration_GetConfigurations(System.String)">
            <summary>
            ExtensionConfiguration_GetConfigurations Stored Procedure
            </summary>
            <returns>StoredProcedures.ExtensionConfiguration_GetConfigurations</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.ExtensionConfiguration_SaveConfiguration(System.Nullable{System.Int32},System.String,System.String,System.String,System.String)">
            <summary>
            ExtensionConfiguration_SaveConfiguration Stored Procedure
            </summary>
            <returns>StoredProcedures.ExtensionConfiguration_SaveConfiguration</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Features_GetFeatureLevel(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Features_GetFeatureLevel Stored Procedure
            </summary>
            <returns>StoredProcedures.Features_GetFeatureLevel</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Features_GetFeatureLevels">
            <summary>
            Features_GetFeatureLevels Stored Procedure
            </summary>
            <returns>StoredProcedures.Features_GetFeatureLevels</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Features_SetFeatureLevel(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Features_SetFeatureLevel Stored Procedure
            </summary>
            <returns>StoredProcedures.Features_SetFeatureLevel</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.InvalidateLastActionReexecution(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            InvalidateLastActionReexecution Stored Procedure
            </summary>
            <returns>StoredProcedures.InvalidateLastActionReexecution</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.LicenseKeys_ActivateLicenseKey(System.String,System.String)">
            <summary>
            LicenseKeys_ActivateLicenseKey Stored Procedure
            </summary>
            <returns>StoredProcedures.LicenseKeys_ActivateLicenseKey</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.LicenseKeys_AddLicenseKey(System.String)">
            <summary>
            LicenseKeys_AddLicenseKey Stored Procedure
            </summary>
            <returns>StoredProcedures.LicenseKeys_AddLicenseKey</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.LicenseKeys_DeleteLicenseKey(System.String)">
            <summary>
            LicenseKeys_DeleteLicenseKey Stored Procedure
            </summary>
            <returns>StoredProcedures.LicenseKeys_DeleteLicenseKey</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.LicenseKeys_GetLicenseKeys">
            <summary>
            LicenseKeys_GetLicenseKeys Stored Procedure
            </summary>
            <returns>StoredProcedures.LicenseKeys_GetLicenseKeys</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.LogMessages_AddMessage(System.Nullable{System.Guid},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            LogMessages_AddMessage Stored Procedure
            </summary>
            <returns>StoredProcedures.LogMessages_AddMessage</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.LogMessages_DeleteMessages(System.Nullable{System.Int32},System.Nullable{System.Guid})">
            <summary>
            LogMessages_DeleteMessages Stored Procedure
            </summary>
            <returns>StoredProcedures.LogMessages_DeleteMessages</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.LogMessages_GetMessage(System.Nullable{System.Guid})">
            <summary>
            LogMessages_GetMessage Stored Procedure
            </summary>
            <returns>StoredProcedures.LogMessages_GetMessage</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.LogMessages_GetMessages(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            LogMessages_GetMessages Stored Procedure
            </summary>
            <returns>StoredProcedures.LogMessages_GetMessages</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Notifiers_CreateOrUpdateNotifier(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Notifiers_CreateOrUpdateNotifier Stored Procedure
            </summary>
            <returns>StoredProcedures.Notifiers_CreateOrUpdateNotifier</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Notifiers_DeleteNotifier(System.Nullable{System.Int32})">
            <summary>
            Notifiers_DeleteNotifier Stored Procedure
            </summary>
            <returns>StoredProcedures.Notifiers_DeleteNotifier</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Notifiers_GetNotifier(System.Nullable{System.Int32})">
            <summary>
            Notifiers_GetNotifier Stored Procedure
            </summary>
            <returns>StoredProcedures.Notifiers_GetNotifier</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Notifiers_GetNotifiers(System.String)">
            <summary>
            Notifiers_GetNotifiers Stored Procedure
            </summary>
            <returns>StoredProcedures.Notifiers_GetNotifiers</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Plans_ChangeActionGroup(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Plans_ChangeActionGroup Stored Procedure
            </summary>
            <returns>StoredProcedures.Plans_ChangeActionGroup</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Plans_ChangeActionGroupEnvironment(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Plans_ChangeActionGroupEnvironment Stored Procedure
            </summary>
            <returns>StoredProcedures.Plans_ChangeActionGroupEnvironment</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Plans_CreateOrUpdateAction(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Plans_CreateOrUpdateAction Stored Procedure
            </summary>
            <returns>StoredProcedures.Plans_CreateOrUpdateAction</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Plans_CreatePlanActionGroup(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Plans_CreatePlanActionGroup Stored Procedure
            </summary>
            <returns>StoredProcedures.Plans_CreatePlanActionGroup</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Plans_DeleteAction(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Plans_DeleteAction Stored Procedure
            </summary>
            <returns>StoredProcedures.Plans_DeleteAction</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Plans_DeletePlanActionGroup(System.Nullable{System.Int32})">
            <summary>
            Plans_DeletePlanActionGroup Stored Procedure
            </summary>
            <returns>StoredProcedures.Plans_DeletePlanActionGroup</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Plans_GetAction(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Plans_GetAction Stored Procedure
            </summary>
            <returns>StoredProcedures.Plans_GetAction</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Plans_GetActionsInProgress(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Plans_GetActionsInProgress Stored Procedure
            </summary>
            <returns>StoredProcedures.Plans_GetActionsInProgress</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Plans_GetPlanActionGroup(System.Nullable{System.Int32})">
            <summary>
            Plans_GetPlanActionGroup Stored Procedure
            </summary>
            <returns>StoredProcedures.Plans_GetPlanActionGroup</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Plans_GetPlanActionGroups(System.Nullable{System.Int32})">
            <summary>
            Plans_GetPlanActionGroups Stored Procedure
            </summary>
            <returns>StoredProcedures.Plans_GetPlanActionGroups</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Plans_GetPlansInApplications(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Plans_GetPlansInApplications Stored Procedure
            </summary>
            <returns>StoredProcedures.Plans_GetPlansInApplications</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Plans_GetServersForPlan(System.Nullable{System.Int32})">
            <summary>
            Plans_GetServersForPlan Stored Procedure
            </summary>
            <returns>StoredProcedures.Plans_GetServersForPlan</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Plans_ResequenceAction(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Plans_ResequenceAction Stored Procedure
            </summary>
            <returns>StoredProcedures.Plans_ResequenceAction</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Plans_ResequenceActionGroup(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Plans_ResequenceActionGroup Stored Procedure
            </summary>
            <returns>StoredProcedures.Plans_ResequenceActionGroup</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Plans_UpdateActionGroup(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Plans_UpdateActionGroup Stored Procedure
            </summary>
            <returns>StoredProcedures.Plans_UpdateActionGroup</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Plans_UpdatePlanActionGroup(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Plans_UpdatePlanActionGroup Stored Procedure
            </summary>
            <returns>StoredProcedures.Plans_UpdatePlanActionGroup</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Plans_UpdatePredicates(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Plans_UpdatePredicates Stored Procedure
            </summary>
            <returns>StoredProcedures.Plans_UpdatePredicates</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.PromotionRequirements_CreateOrUpdatePromotionRequirement(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            PromotionRequirements_CreateOrUpdatePromotionRequirement Stored Procedure
            </summary>
            <returns>StoredProcedures.PromotionRequirements_CreateOrUpdatePromotionRequirement</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.PromotionRequirements_DeletePromotionRequirement(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            PromotionRequirements_DeletePromotionRequirement Stored Procedure
            </summary>
            <returns>StoredProcedures.PromotionRequirements_DeletePromotionRequirement</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.PromotionRequirements_GetPromotionRequirement(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            PromotionRequirements_GetPromotionRequirement Stored Procedure
            </summary>
            <returns>StoredProcedures.PromotionRequirements_GetPromotionRequirement</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.PromotionRequirements_GetPromotionRequirements(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            PromotionRequirements_GetPromotionRequirements Stored Procedure
            </summary>
            <returns>StoredProcedures.PromotionRequirements_GetPromotionRequirements</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.PromotionRequirements_GetPromotionRequirementStatus(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            PromotionRequirements_GetPromotionRequirementStatus Stored Procedure
            </summary>
            <returns>StoredProcedures.PromotionRequirements_GetPromotionRequirementStatus</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.PromotionRequirements_SetPromotionRequirementStatus(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            PromotionRequirements_SetPromotionRequirementStatus Stored Procedure
            </summary>
            <returns>StoredProcedures.PromotionRequirements_SetPromotionRequirementStatus</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Providers_CreateOrUpdateProvider(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String)">
            <summary>
            Providers_CreateOrUpdateProvider Stored Procedure
            </summary>
            <returns>StoredProcedures.Providers_CreateOrUpdateProvider</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Providers_DeleteProvider(System.Nullable{System.Int32})">
            <summary>
            Providers_DeleteProvider Stored Procedure
            </summary>
            <returns>StoredProcedures.Providers_DeleteProvider</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Providers_GetProvider(System.Nullable{System.Int32})">
            <summary>
            Providers_GetProvider Stored Procedure
            </summary>
            <returns>StoredProcedures.Providers_GetProvider</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Providers_GetProviders(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Providers_GetProviders Stored Procedure
            </summary>
            <returns>StoredProcedures.Providers_GetProviders</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Releases_CancelRelease(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Releases_CancelRelease Stored Procedure
            </summary>
            <returns>StoredProcedures.Releases_CancelRelease</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Releases_CreateOrUpdateRelease(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.String)">
            <summary>
            Releases_CreateOrUpdateRelease Stored Procedure
            </summary>
            <returns>StoredProcedures.Releases_CreateOrUpdateRelease</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Releases_CreateOrUpdateReleaseNote(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Releases_CreateOrUpdateReleaseNote Stored Procedure
            </summary>
            <returns>StoredProcedures.Releases_CreateOrUpdateReleaseNote</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Releases_DeleteReleaseNote(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Releases_DeleteReleaseNote Stored Procedure
            </summary>
            <returns>StoredProcedures.Releases_DeleteReleaseNote</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Releases_GetBuildExecutions(System.Nullable{System.Int32},System.String)">
            <summary>
            Releases_GetBuildExecutions Stored Procedure
            </summary>
            <returns>StoredProcedures.Releases_GetBuildExecutions</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Releases_GetDependentReleases(System.Nullable{System.Int32},System.String)">
            <summary>
            Releases_GetDependentReleases Stored Procedure
            </summary>
            <returns>StoredProcedures.Releases_GetDependentReleases</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Releases_GetRelease(System.Nullable{System.Int32},System.String)">
            <summary>
            Releases_GetRelease Stored Procedure
            </summary>
            <returns>StoredProcedures.Releases_GetRelease</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Releases_GetReleaseNote(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Releases_GetReleaseNote Stored Procedure
            </summary>
            <returns>StoredProcedures.Releases_GetReleaseNote</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Releases_GetReleaseNotes(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Releases_GetReleaseNotes Stored Procedure
            </summary>
            <returns>StoredProcedures.Releases_GetReleaseNotes</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Releases_GetReleases(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Releases_GetReleases Stored Procedure
            </summary>
            <returns>StoredProcedures.Releases_GetReleases</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Releases_GetRequiredPromotions(System.Nullable{System.Int32},System.String)">
            <summary>
            Releases_GetRequiredPromotions Stored Procedure
            </summary>
            <returns>StoredProcedures.Releases_GetRequiredPromotions</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Releases_ReleaseExists(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Releases_ReleaseExists Stored Procedure
            </summary>
            <returns>StoredProcedures.Releases_ReleaseExists</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Releases_UnCancelRelease(System.Nullable{System.Int32},System.String)">
            <summary>
            Releases_UnCancelRelease Stored Procedure
            </summary>
            <returns>StoredProcedures.Releases_UnCancelRelease</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Security_AddNamedUser(System.String,System.String)">
            <summary>
            Security_AddNamedUser Stored Procedure
            </summary>
            <returns>StoredProcedures.Security_AddNamedUser</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Security_AddPrivilege(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Security_AddPrivilege Stored Procedure
            </summary>
            <returns>StoredProcedures.Security_AddPrivilege</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Security_CreateOrUpdateRole(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Security_CreateOrUpdateRole Stored Procedure
            </summary>
            <returns>StoredProcedures.Security_CreateOrUpdateRole</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Security_DeleteRole(System.Nullable{System.Int32})">
            <summary>
            Security_DeleteRole Stored Procedure
            </summary>
            <returns>StoredProcedures.Security_DeleteRole</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Security_GetNamedUser(System.String)">
            <summary>
            Security_GetNamedUser Stored Procedure
            </summary>
            <returns>StoredProcedures.Security_GetNamedUser</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Security_GetNamedUsers">
            <summary>
            Security_GetNamedUsers Stored Procedure
            </summary>
            <returns>StoredProcedures.Security_GetNamedUsers</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Security_GetPrivileges(System.Nullable{System.Int32},System.String)">
            <summary>
            Security_GetPrivileges Stored Procedure
            </summary>
            <returns>StoredProcedures.Security_GetPrivileges</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Security_GetRole(System.Nullable{System.Int32})">
            <summary>
            Security_GetRole Stored Procedure
            </summary>
            <returns>StoredProcedures.Security_GetRole</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Security_GetRoles">
            <summary>
            Security_GetRoles Stored Procedure
            </summary>
            <returns>StoredProcedures.Security_GetRoles</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Security_GetUserClassCounts">
            <summary>
            Security_GetUserClassCounts Stored Procedure
            </summary>
            <returns>StoredProcedures.Security_GetUserClassCounts</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Security_GetUserPrivileges(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Security_GetUserPrivileges Stored Procedure
            </summary>
            <returns>StoredProcedures.Security_GetUserPrivileges</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Security_IsAuthorizedForAnyTask(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Security_IsAuthorizedForAnyTask Stored Procedure
            </summary>
            <returns>StoredProcedures.Security_IsAuthorizedForAnyTask</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Security_IsAuthorizedForTask(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Security_IsAuthorizedForTask Stored Procedure
            </summary>
            <returns>StoredProcedures.Security_IsAuthorizedForTask</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Security_RemoveNamedUser(System.String)">
            <summary>
            Security_RemoveNamedUser Stored Procedure
            </summary>
            <returns>StoredProcedures.Security_RemoveNamedUser</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Security_RemovePrivilege(System.Nullable{System.Int32})">
            <summary>
            Security_RemovePrivilege Stored Procedure
            </summary>
            <returns>StoredProcedures.Security_RemovePrivilege</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Security_UpdateUserClassType(System.String,System.String)">
            <summary>
            Security_UpdateUserClassType Stored Procedure
            </summary>
            <returns>StoredProcedures.Security_UpdateUserClassType</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Security_UserIsNamed(System.String,System.String)">
            <summary>
            Security_UserIsNamed Stored Procedure
            </summary>
            <returns>StoredProcedures.Security_UserIsNamed</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.UserConfiguration_GetUserConfiguration(System.String)">
            <summary>
            UserConfiguration_GetUserConfiguration Stored Procedure
            </summary>
            <returns>StoredProcedures.UserConfiguration_GetUserConfiguration</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.UserConfiguration_GetValue(System.String,System.String,System.String)">
            <summary>
            UserConfiguration_GetValue Stored Procedure
            </summary>
            <returns>StoredProcedures.UserConfiguration_GetValue</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.UserConfiguration_SetValue(System.String,System.String,System.String)">
            <summary>
            UserConfiguration_SetValue Stored Procedure
            </summary>
            <returns>StoredProcedures.UserConfiguration_SetValue</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Users_CreateGroup(System.String)">
            <summary>
            Users_CreateGroup Stored Procedure
            </summary>
            <returns>StoredProcedures.Users_CreateGroup</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Users_CreateOrUpdateUser(System.String,System.String,System.String,System.String)">
            <summary>
            Users_CreateOrUpdateUser Stored Procedure
            </summary>
            <returns>StoredProcedures.Users_CreateOrUpdateUser</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Users_DeleteGroup(System.String)">
            <summary>
            Users_DeleteGroup Stored Procedure
            </summary>
            <returns>StoredProcedures.Users_DeleteGroup</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Users_DeleteUser(System.String)">
            <summary>
            Users_DeleteUser Stored Procedure
            </summary>
            <returns>StoredProcedures.Users_DeleteUser</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Users_GetGroups">
            <summary>
            Users_GetGroups Stored Procedure
            </summary>
            <returns>StoredProcedures.Users_GetGroups</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Users_GetUser(System.String)">
            <summary>
            Users_GetUser Stored Procedure
            </summary>
            <returns>StoredProcedures.Users_GetUser</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Users_GetUsers">
            <summary>
            Users_GetUsers Stored Procedure
            </summary>
            <returns>StoredProcedures.Users_GetUsers</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Users_GetUsersInGroup(System.String)">
            <summary>
            Users_GetUsersInGroup Stored Procedure
            </summary>
            <returns>StoredProcedures.Users_GetUsersInGroup</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Users_SearchGroups(System.String,System.String)">
            <summary>
            Users_SearchGroups Stored Procedure
            </summary>
            <returns>StoredProcedures.Users_SearchGroups</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Users_SearchUsers(System.String,System.String,System.String,System.String)">
            <summary>
            Users_SearchUsers Stored Procedure
            </summary>
            <returns>StoredProcedures.Users_SearchUsers</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Users_SetPassword(System.String,System.String)">
            <summary>
            Users_SetPassword Stored Procedure
            </summary>
            <returns>StoredProcedures.Users_SetPassword</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Users_ValidateLogin(System.String,System.String,System.String)">
            <summary>
            Users_ValidateLogin Stored Procedure
            </summary>
            <returns>StoredProcedures.Users_ValidateLogin</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Variables_CreateOrUpdateVariable(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Variables_CreateOrUpdateVariable Stored Procedure
            </summary>
            <returns>StoredProcedures.Variables_CreateOrUpdateVariable</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Variables_DeleteVariable(System.Nullable{System.Int32},System.String)">
            <summary>
            Variables_DeleteVariable Stored Procedure
            </summary>
            <returns>StoredProcedures.Variables_DeleteVariable</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Variables_GetBuildScheduleVariables(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Variables_GetBuildScheduleVariables Stored Procedure
            </summary>
            <returns>StoredProcedures.Variables_GetBuildScheduleVariables</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Variables_GetBuildScheduleVariablesForExecution(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Variables_GetBuildScheduleVariablesForExecution Stored Procedure
            </summary>
            <returns>StoredProcedures.Variables_GetBuildScheduleVariablesForExecution</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Variables_GetBuildVariables(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Variables_GetBuildVariables Stored Procedure
            </summary>
            <returns>StoredProcedures.Variables_GetBuildVariables</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Variables_GetExecutionVariables(System.Nullable{System.Int32})">
            <summary>
            Variables_GetExecutionVariables Stored Procedure
            </summary>
            <returns>StoredProcedures.Variables_GetExecutionVariables</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Variables_GetNewBuildDefaults(System.Nullable{System.Int32},System.String)">
            <summary>
            Variables_GetNewBuildDefaults Stored Procedure
            </summary>
            <returns>StoredProcedures.Variables_GetNewBuildDefaults</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Variables_GetNewReleaseDefaults(System.Nullable{System.Int32})">
            <summary>
            Variables_GetNewReleaseDefaults Stored Procedure
            </summary>
            <returns>StoredProcedures.Variables_GetNewReleaseDefaults</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Variables_GetReleaseVariables(System.Nullable{System.Int32},System.String)">
            <summary>
            Variables_GetReleaseVariables Stored Procedure
            </summary>
            <returns>StoredProcedures.Variables_GetReleaseVariables</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Variables_GetVariable(System.Nullable{System.Int32},System.String)">
            <summary>
            Variables_GetVariable Stored Procedure
            </summary>
            <returns>StoredProcedures.Variables_GetVariable</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Variables_GetVariables(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Variables_GetVariables Stored Procedure
            </summary>
            <returns>StoredProcedures.Variables_GetVariables</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Variables_SetVariableValues(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Variables_SetVariableValues Stored Procedure
            </summary>
            <returns>StoredProcedures.Variables_SetVariableValues</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Workflows_AddOrRemoveApproval(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Workflows_AddOrRemoveApproval Stored Procedure
            </summary>
            <returns>StoredProcedures.Workflows_AddOrRemoveApproval</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Workflows_AddOrRemoveClosedIssuesRequired(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Workflows_AddOrRemoveClosedIssuesRequired Stored Procedure
            </summary>
            <returns>StoredProcedures.Workflows_AddOrRemoveClosedIssuesRequired</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Workflows_CreateOrUpdateWorkflow(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Workflows_CreateOrUpdateWorkflow Stored Procedure
            </summary>
            <returns>StoredProcedures.Workflows_CreateOrUpdateWorkflow</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Workflows_CreateOrUpdateWorkflowStep(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Workflows_CreateOrUpdateWorkflowStep Stored Procedure
            </summary>
            <returns>StoredProcedures.Workflows_CreateOrUpdateWorkflowStep</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Workflows_DeleteStep(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Workflows_DeleteStep Stored Procedure
            </summary>
            <returns>StoredProcedures.Workflows_DeleteStep</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Workflows_GetPromotionApprovalRequirements(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Workflows_GetPromotionApprovalRequirements Stored Procedure
            </summary>
            <returns>StoredProcedures.Workflows_GetPromotionApprovalRequirements</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Workflows_GetWorkflow(System.Nullable{System.Int32})">
            <summary>
            Workflows_GetWorkflow Stored Procedure
            </summary>
            <returns>StoredProcedures.Workflows_GetWorkflow</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Workflows_GetWorkflows(System.Nullable{System.Int32},System.String)">
            <summary>
            Workflows_GetWorkflows Stored Procedure
            </summary>
            <returns>StoredProcedures.Workflows_GetWorkflows</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Workflows_GetWorkflowStep(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Workflows_GetWorkflowStep Stored Procedure
            </summary>
            <returns>StoredProcedures.Workflows_GetWorkflowStep</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Workflows_MoveApproval(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Workflows_MoveApproval Stored Procedure
            </summary>
            <returns>StoredProcedures.Workflows_MoveApproval</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.StoredProcs.Workflows_MoveWorkflowStep(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Workflows_MoveWorkflowStep Stored Procedure
            </summary>
            <returns>StoredProcedures.Workflows_MoveWorkflowStep</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Diagnostics.DiagnosticsHelper">
            <summary>
            A collection of helper methods to 
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Proxies.AgentProxyableObject`1">
            <summary>
            Represents an object that can be proxied to allow for execution via an agent
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Inedo.BuildMaster.Proxies.AgentProxyableObject`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Proxies.AgentProxyableObject`1"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Proxies.AgentProxyableObject`1.CreateRemoteProxy(System.Int32)">
            <summary>
            Creates a remote proxy of the object whose methods execute on a remote server.
            </summary>
            <remarks>
            When a method on a remote proxy is executed:
             1) The object is "persisted" (i.e. all properties marked with a 
                <see cref="T:Inedo.BuildMaster.PersistentAttribute"/> are saved)
             2) The persisted object is sent to the agent on the specified server
             3) An object is recreated
             4) The method is executed
             5) The method's return is serialized and returned
            
            Note that methods returning custom classes through a remote proxy must be marked
            with the <see cref="T:System.SerializableAttribute"/>, or a runtime exception will be thrown.
            </remarks>
            <param name="agentId">ID of server on which the object will execute methods</param>
            <returns>Proxied Object</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Diagnostics.DiagnosticsHelper.ClearEventLog">
            <summary>
            Clears the <see cref="T:System.Diagnostics.EventLog"/> named "BuildMaster"
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Diagnostics.DiagnosticsHelper.GetEventLogEntries">
            <summary>
            Retreives <see cref="T:System.Diagnostics.EventLogEntry"/> from an <see cref="T:System.Diagnostics.EventLog"/> named "BuildMaster"
            </summary>
            <returns>an array of <see cref="T:System.Diagnostics.EventLogEntry"/> found in "BuildMaster"</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Events.EventType">
            <summary>
            Represents a type of Event that can occur
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Events.EventType.EventCode">
            <summary>
            Gets the code associated with the event type
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Events.EventType.EventDescription">
            <summary>
            Gets the description associated with the event description
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Events.Internal.EventType`2">
            <summary>
            Represents a type of Event that can occur and provides an strong-typing for the details
            </summary>
            <typeparam name="T">event type</typeparam>
            /// <typeparam name="D">event details type</typeparam>
            <remarks>This is intended to be used internally</remarks>
        </member>
        <member name="F:Inedo.BuildMaster.Events.Internal.EventType`2.EventDetails">
            <summary>
            Gets the details associated with the event type
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Events.Internal.EventType`2.op_Implicit(Inedo.BuildMaster.Events.Internal.EventType{`0,`1})~System.String">
            <summary>
            Performs an implicit conversion from <see cref="T:Inedo.BuildMaster.Events.Internal.EventType`2"/> to <see cref="T:System.String"/>.
            </summary>
            <param name="e">The e.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:Inedo.BuildMaster.Events.Internal.EventTypeDetails`1">
            <summary>
            Represents the base for all event type detail classes
            </summary>
            <typeparam name="T">event type details are assocaitedw ith</typeparam>
            <remarks>This class is intended to be used internally only</remarks>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Agents.AgentBase">
            <summary>
            The base class for all agents
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.AgentBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Agents.AgentBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.AgentBase.GetAgentStatus">
            <summary>
            Gets the agent status, which is one of the constants defined within <see cref="T:Inedo.BuildMaster.Data.Domains.ServerStatus"/>
            </summary>
            <remarks>
            Note to implementers - this applies validation to <see cref="M:Inedo.BuildMaster.Extensibility.Agents.AgentBase.GetAgentStatusInternal"/>
            </remarks>
            <returns>The agent status code</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.AgentBase.GetAgentStatusInternal">
            <summary>
            Gets the agent status, which is one of the constants defined within <see cref="T:Inedo.BuildMaster.Data.Domains.ServerStatus"/>
            </summary>
            <returns>The agent status code</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.AgentBase.ProxyObject``1(``0)">
            <summary>
            Proxies the object.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="proxyableObject">The proxyable object.</param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.AgentBase.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.AgentBase.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Agents.AgentExtensions">
            <summary>
            Contains agent-related extension methods.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.AgentExtensions.GetDefaultApplicationBaseDirectory(Inedo.BuildMaster.Extensibility.Agents.IFileOperationsExecuter,System.Int32)">
            <summary>
            Returns the base working directory for the specified application.
            </summary>
            <param name="agent">The agent.</param>
            <param name="applicationId">The ID of the application.</param>
            <returns>Base working directory for the application.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.AgentExtensions.GetRelativeDeployableWorkingDirectory(Inedo.BuildMaster.Extensibility.Agents.IFileOperationsExecuter,System.Int32)">
            <summary>
            Returns the relative working directory for the specified deployable.
            </summary>
            <param name="agent">The agent.</param>
            <param name="deployableId">The ID of the deployable.</param>
            <returns>Relative working directory for the specified deployable.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.AgentExtensions.GetWorkingDirectory(Inedo.BuildMaster.Extensibility.Agents.IFileOperationsExecuter,System.Int32,System.Int32,System.String)">
            <summary>
            Returns the working directory for the specified application, deployable, and overridden path.
            </summary>
            <param name="agent">The agent.</param>
            <param name="applicationId">The ID of the application.</param>
            <param name="deployableId">The ID of the deployable.</param>
            <param name="overridePath">The overridden path.</param>
            <returns>Working directory for the specified application, deployable, and overridden path.</returns>
            <remarks>
                The value of <paramref name="overridePath"/> may be either a relative or absolute path:
                <list type="bullet">
                    <item>absolute - <paramref name="overridePath"/> is always returned.</item>
                    <item>relative (starts with ~) - <paramref name="overridePath"/> is combined with the application base path.</item>
                    <item>relative (does not start with ~) - <paramref name="overridePath"/> is combined with the deployable base path.</item>
                </list>
            </remarks>
            <example>
                <list type="table">
                    <listheader>
                        <term>Value of <paramref name="overridePath"/></term>
                        <description>Result</description>
                    </listheader>
                    <item>
                        <term>(null/empty)</term>
                        <description>C:\[BuildMaster base directory]\A[AppId]\S[DplId]\WRK</description>
                    </item>
                    <item>
                        <term>~</term>
                        <description>C:\[BuildMaster base directory]\A[AppId]</description>
                    </item>
                    <item>
                        <term>~\MyPath</term>
                        <description>C:\[BuildMaster base directory]\A[AppId]\MyPath</description>
                    </item>
                    <item>
                        <term>\MyPath</term>
                        <description>C:\MyPath</description>
                    </item>
                    <item>
                        <term>MyPath</term>
                        <description>C:\[BuildMaster base directory]\A[AppId]\S[DplId]\WRK\MyPath</description>
                    </item>
                </list>
            </example>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.AgentExtensions.DirectoryExists(Inedo.BuildMaster.Extensibility.Agents.IFileOperationsExecuter,System.String)">
            <summary>
            Returns a value indicating whether the specified directory exists.
            </summary>
            <param name="agent">The agent.</param>
            <param name="path">The path of the directory.</param>
            <returns>True if directory exists; otherwise false.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.AgentExtensions.DeleteFile(Inedo.BuildMaster.Extensibility.Agents.IFileOperationsExecuter,System.String)">
            <summary>
            Deletes the specified file if it exists.
            </summary>
            <param name="agent">The agent.</param>
            <param name="fileName">The name of the file to delete.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.AgentExtensions.CombinePath(Inedo.BuildMaster.Extensibility.Agents.IFileOperationsExecuter,System.String[])">
            <summary>
            Combines multiple path components into one string.
            </summary>
            <param name="agent">The agent.</param>
            <param name="paths">The path components to combine.</param>
            <returns>Combined path string.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Agents.AgentPropertiesAttribute">
            <summary>
            Properties for an agent.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.AgentPropertiesAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Agents.AgentPropertiesAttribute"/> class.
            </summary>
            <param name="name">The name of the extension.</param>
            <param name="description">The description of the extension.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Agents.HostedAgentInfo">
            <summary>
            Represents the status of an <see cref="T:Inedo.BuildMaster.Extensibility.Agents.IHostedAgent"/>.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.HostedAgentInfo.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Agents.HostedAgentInfo"/> class from being created.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.HostedAgentInfo.#ctor(System.String[],System.String[],Inedo.BuildMaster.Files.ExtendedFileEntryInfo[],System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Agents.HostedAgentInfo"/> class.
            </summary>
            <param name="extensionAssemblies">The extension assemblies.</param>
            <param name="coreAssemblies">The core assemblies.</param>
            <param name="extensionFiles">The extension files.</param>
            <param name="platform">The platform.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.HostedAgentInfo.System#Xml#Serialization#IXmlSerializable#GetSchema">
            <summary>
            This method is reserved and should not be used. When implementing the IXmlSerializable interface, you should return null (Nothing in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute"/> to the class.
            </summary>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema"/> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"/> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"/> method.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.HostedAgentInfo.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.HostedAgentInfo.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> stream to which the object is serialized.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.HostedAgentInfo.GetXmlSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Referenced by the XmlSchemaProvider attribute, and used as a work-around
            for failed auto-WSDL generation.
            </summary>
            <param name="schemas">The schema set.</param>
            <returns>The schema type.</returns>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Agents.HostedAgentInfo.ExtensionAssemblies">
            <summary>
            Gets a string array of assembly names (using <see cref="P:System.Reflection.Assembly.FullName"/>)
            from the extensions root.
            </summary>   
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Agents.HostedAgentInfo.ExtensionFiles">
            <summary>
            Gets an array of files in the extensions root path.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Agents.HostedAgentInfo.CoreAssemblies">
            <summary>
            Gets a string array of assembly names (using <see cref="P:System.Reflection.Assembly.FullName"/>)
            from the private path (/bin).
            </summary>   
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Agents.HostedAgentInfo.Platform">
            <summary>
            Gets the platform.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Agents.IBinaryDataProcess">
            <summary>
            Represents a process that provides access to binary data streams.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IBinaryDataProcess.Start">
            <summary>
            Starts the process.
            </summary>
            <returns>Value indicating whether the process was started.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IBinaryDataProcess.Kill">
            <summary>
            Immediately terminates the process.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IBinaryDataProcess.WaitForExit">
            <summary>
            Blocks until the process exits.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IBinaryDataProcess.WaitForExit(System.Int32)">
            <summary>
            Blocks until the process exits or the timeout length is exceeded.
            </summary>
            <param name="milliseconds">The timeout length in milliseconds.</param>
            <returns>True if process exited; false if the timeout lenght was exceeded.</returns>
        </member>
        <member name="E:Inedo.BuildMaster.Extensibility.Agents.IBinaryDataProcess.Exited">
            <summary>
            Occurs when the process has exited.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Agents.IBinaryDataProcess.StandardInput">
            <summary>
            Gets the raw input stream.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Agents.IBinaryDataProcess.StandardOutput">
            <summary>
            Gets the raw output stream.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Agents.IBinaryDataProcess.StandardError">
            <summary>
            Gets the raw error stream.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Agents.IBinaryDataProcess.ExitCode">
            <summary>
            Gets the process exit code.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Agents.IBinaryDataProcess.HasExited">
            <summary>
            Gets a value indicating whether the process has exited.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Agents.IBinaryDataProcess.StartTime">
            <summary>
            Gets the process start time.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Agents.IBinaryDataProcess.ExitTime">
            <summary>
            Gets the process exit time.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Agents.IHostedAgent">
            <summary>
            Represents an <see cref="T:Inedo.BuildMaster.Extensibility.Agents.AgentBase"/> which is remotely hosted
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IHostedAgent.Restart">
            <summary>
            Restarts the remotely hosted agent.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IHostedAgent.Update">
            <summary>
            Updates the remotely hosted agent.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IHostedAgent.GetHostedAgentInfo">
            <summary>
            Gets the remotely hosted agent info.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Agents.IPersistedObjectExecuter">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Agents.AgentBase"/> supports executing methods against persisted objects
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IPersistedObjectExecuter.ExecuteMethodOnXmlPersistedObject(System.String,System.String,System.Object[])">
            <summary>
            Executes the specified method on the specified object that has 
            been serialized.
            </summary>
            <param name="objectXml">Serialized object using BuildMaster's persistence model.</param>
            <param name="methodName">Name of method to invoke.</param>
            <param name="parameters">Arguments to pass to the method.</param>
            <returns>Return value of the method.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Agents.IProcess">
            <summary>
            Represents a process.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IProcess.Start">
            <summary>
            Starts the process.
            </summary>
            <returns>Value indicating whether the process was started.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IProcess.Kill">
            <summary>
            Immediately terminates the process.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IProcess.WaitForExit">
            <summary>
            Blocks until the process exits.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IProcess.WaitForExit(System.Int32)">
            <summary>
            Blocks until the process exits or the timeout length is exceeded.
            </summary>
            <param name="milliseconds">The timeout length in milliseconds.</param>
            <returns>True if process exited; false if the timeout lenght was exceeded.</returns>
        </member>
        <member name="E:Inedo.BuildMaster.Extensibility.Agents.IProcess.Exited">
            <summary>
            Occurs when the process has exited.
            </summary>
        </member>
        <member name="E:Inedo.BuildMaster.Extensibility.Agents.IProcess.ErrorDataReceived">
            <summary>
            Occurs when text has been written to the <see cref="P:StandardError"/> stream.
            </summary>
        </member>
        <member name="E:Inedo.BuildMaster.Extensibility.Agents.IProcess.OutputDataReceived">
            <summary>
            Occurs when text has been written to the <see cref="P:StandardOutput"/> stream.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Agents.IProcess.ExitCode">
            <summary>
            Gets the process exit code.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Agents.IProcess.HasExited">
            <summary>
            Gets a value indicating whether the process has exited.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Agents.IProcess.StartTime">
            <summary>
            Gets the process start time.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Agents.IProcess.ExitTime">
            <summary>
            Gets the process exit time.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Agents.IProcess.StandardError">
            <summary>
            Gets the text written to standard error.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Agents.IProcess.StandardInput">
            <summary>
            Gets the standard input stream.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Agents.IProcess.StandardOutput">
            <summary>
            Gets the text written to standard output.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Agents.IRemoteBinaryProcessExecuter">
            <summary>
            Implemented by agents that can execute a process remotely and provide binary
            stream input and output.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IRemoteBinaryProcessExecuter.CreateProcess(Inedo.BuildMaster.Extensibility.Agents.IProcessStartInfo)">
            <summary>
            Creates a process on the agent.
            </summary>
            <param name="startInfo">The process start info.</param>
            <returns>Instance used to control and monitor the remote process.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Agents.IRemoteProcessExecuter">
            <summary>
            Implemented by agents that can execute a process remotely.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IRemoteProcessExecuter.CreateProcess(Inedo.BuildMaster.Extensibility.Agents.IProcessStartInfo)">
            <summary>
            Creates a process on the agent.
            </summary>
            <param name="startInfo">The process start info.</param>
            <returns>Instance used to control and monitor the remote process.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Agents.IRemoteZip">
            <summary>
            Indicates that an agent can create and extract zip files.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IRemoteZip.CreateZipFile(System.String,System.String)">
            <summary>
            Creates a zip file on the remote server.
            </summary>
            <param name="sourcePath">Path of the directory to zip.</param>
            <param name="targetFileName">Path to the zip file to create.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.IRemoteZip.ExtractZipFile(System.String,System.String,System.Boolean)">
            <summary>
            Extracts a zip file on the remote server.
            </summary>
            <param name="sourceFileName">Path to the zip file to extract.</param>
            <param name="targetPath">Path to extract the file to.</param>
            <param name="overwrite">Value indicating whether to overwrite files in the target directory.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Agents.ProcessDataReceivedEventArgs">
            <summary>
            Contains a string received from a process.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.ProcessDataReceivedEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Agents.ProcessDataReceivedEventArgs"/> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Agents.ProcessDataReceivedEventArgs.Data">
            <summary>
            Gets the data received.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Agents.ServerHosts.IServerStarterStopper">
            <summary>
            Describes a <see cref="T:Inedo.BuildMaster.Extensibility.Agents.ServerHosts.ServerHostBase"/> which allows servers to be started and stopped.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.ServerHosts.IServerStarterStopper.StartServer(System.String)">
            <summary>
            Starts a server.
            </summary>
            <param name="serverName">The name of the server to start.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.ServerHosts.IServerStarterStopper.StopServer(System.String)">
            <summary>
            Stops a server.
            </summary>
            <param name="serverName">The name of the server to stop.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Agents.ServerHosts.ServerHostBase">
            <summary>
            The base class for all server hosts.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.ServerHosts.ServerHostBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Agents.ServerHosts.ServerHostBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.ServerHosts.ServerHostBase.GetServerStatus(System.String)">
            <summary>
            Returns the server status, which is one of the constants defined within <see cref="!:Domains.ServerStatus"/>.
            </summary>
            <param name="serverName">The name of the server.</param>
            <returns>The server status code.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.ServerHosts.ServerHostBase.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.ServerHosts.ServerHostBase.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>True</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.ServerHosts.ServerHostBase.GetServerStatusInternal(System.String)">
            <summary>
            Returns the server status, which is one of the constants defined within <see cref="!:Domains.ServerStatus"/>.
            </summary>
            <param name="serverName">The name of the server.</param>
            <returns>The server status code.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Agents.ServerHosts.ServerHostPropertiesAttribute">
            <summary>
            Properties for a <see cref="T:Inedo.BuildMaster.Extensibility.Agents.ServerHosts.ServerHostBase"/>.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Agents.ServerHosts.ServerHostPropertiesAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Agents.ServerHosts.ServerHostPropertiesAttribute"/> class.
            </summary>
            <param name="name">The name of the server host.</param>
            <param name="description">The description of the server host.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.ChangeControls.ChangeControlTransformBase">
            <summary>
            Base class for all Change Control transforms.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.ChangeControls.ChangeControlTransformBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.ChangeControls.ChangeControlTransformBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.ChangeControls.ChangeControlTransformBase.TransformChangeControl(Inedo.BuildMaster.Extensibility.ChangeControls.ChangeControlBase)">
            <summary>
            Transforms an existing Change Control.
            </summary>
            <param name="changeControl">Change Control to transform.</param>
            <returns>Transformed Change Control.</returns>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.ChangeControls.ChangeControlTransformBase.Name">
            <summary>
            Gets the name of the transform.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.ChangeControls.SimpleChangeControl">
            <summary>
            Change Control which may be in progress, completed, or not completed.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.ChangeControls.ChangeControlBase">
            <summary>
            Base class for Change Controls.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.ChangeControls.ChangeControlBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.ChangeControls.ChangeControlBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.ChangeControls.ChangeControlBase.GetCurrentTransforms">
            <summary>
            Returns an array of transforms that apply to the current state of the Change Control.
            </summary>
            <returns>Array of applicable transforms.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.ChangeControls.ChangeControlBase.GetStatus">
            <summary>
            Returns the current status of the Change Control.
            </summary>
            <returns>Current status of the Change Control.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.ChangeControls.SimpleChangeControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.ChangeControls.SimpleChangeControl"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.ChangeControls.SimpleChangeControl.GetCurrentTransforms">
            <summary>
            Returns an array of transforms that apply to the current state of the Change Control.
            </summary>
            <returns>
            Array of applicable transforms.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.ChangeControls.SimpleChangeControl.GetStatus">
            <summary>
            Returns the current status of the Change Control.
            </summary>
            <returns>
            Current status of the Change Control.
            </returns>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.ChangeControls.SimpleChangeControl.Status">
            <summary>
            Gets or sets the current status of the Change Control.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.ChangeControls.SimpleChangeControlTransform">
            <summary>
            Transform for changing the status of a <see cref="T:Inedo.BuildMaster.Extensibility.ChangeControls.SimpleChangeControl"/>.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.ChangeControls.SimpleChangeControlTransform.#ctor(Inedo.BuildMaster.Extensibility.ChangeControls.ChangeControlStatuses)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.ChangeControls.SimpleChangeControlTransform"/> class.
            </summary>
            <param name="newStatus">The new status of the Change Control.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.ChangeControls.SimpleChangeControlTransform.TransformChangeControl(Inedo.BuildMaster.Extensibility.ChangeControls.ChangeControlBase)">
            <summary>
            Transforms an existing Change Control.
            </summary>
            <param name="_changeControl">Change Control to transform.</param>
            <returns>Transformed Change Control.</returns>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.ChangeControls.SimpleChangeControlTransform.Name">
            <summary>
            Gets the name of the transform.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.ChangeControls.ChangeControlStatuses">
            <summary>
            Represents a valid status for a <see cref="T:Inedo.BuildMaster.Extensibility.ChangeControls.ChangeControlBase"/>.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.ChangeControls.ChangeControlStatuses.InProgress">
            <summary>
            Indicates that the Change Control is ongoing.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.ChangeControls.ChangeControlStatuses.Completed">
            <summary>
            Indicates that the Change Control has been completed.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.ChangeControls.ChangeControlStatuses.NotCompleted">
            <summary>
            Indicates that the Change Control will not be completed.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.ChangeControls.ChangeControlStatuses.Unknown">
            <summary>
            Indicates that the Change Control is in an unknown state.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Configurers.ConfigurerBase">
            <summary>
            Responsible for storing and accessing the configuration of a component.
            </summary>
            <remarks>
            This class is used internally by BuildMaster.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Configurers.ConfigurerBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Configurers.ConfigurerBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Configurers.ConfigurerBase.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerPropertiesAttribute">
            <summary>
            Marks a class as an the configurer for an extension.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerPropertiesAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerPropertiesAttribute"/> class.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerAttribute">
            <summary>
            Specifies the <see cref="T:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerBase"/> to use for an extension.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerAttribute"/> class.
            </summary>
            <param name="extensionConfigurerType">Type of the extension configurer.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerAttribute.IsValid">
            <summary>
            Determines if the value of <see cref="P:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerAttribute.ExtensionConfigurerType"/> is valid.
            </summary>
            <returns>Value indicating whether the value of <see cref="P:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerAttribute.ExtensionConfigurerType"/> is valid.</returns>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerAttribute.ExtensionConfigurerType">
            <summary>
            Gets the type of the extension configurer used by the extension.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerBase">
            <summary>
            Contains the configuration for an extension.
            </summary>
            <remarks>
            There can only be one <see cref="T:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerBase"/> per extension assembly; this is defined by the 
            <see cref="T:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerAttribute"/> attribute.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Configurers.Extension.ExtensionConfigurerBase"/> class.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.DeprecatedInBuildMasterVersionAttribute">
            <summary>
            Marks an extension or class as deprecated by a specific version of BuildMaster.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.DeprecatedInBuildMasterVersionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.DeprecatedInBuildMasterVersionAttribute"/> class.
            </summary>
            <param name="version">The version which deprecates the extension or class.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.DeprecatedInBuildMasterVersionAttribute.DeprecatedVersion">
            <summary>
            Gets the version which deprecates the extension or class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.DeprecatedInBuildMasterVersionAttribute.ErrorIfUsed">
            <summary>
            Gets or sets a value indicating whether the use of this extension or class should be an error or a warning.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Gadgets.GadgetBase">
            <summary>
            Represents the base class for all Gadgets.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Gadgets.GadgetBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Gadgets.GadgetBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Gadgets.GadgetBase.CreateFullSizeGadgetControl(Inedo.BuildMaster.Extensibility.Gadgets.GadgetContext)">
            <summary>
            Returns an instance of a <see cref="T:System.Web.UI.Control"/> that can be
            added to a Dashboard page.
            </summary>
            <param name="context">Context information for the gadget.</param>
            <returns><see cref="T:System.Web.UI.Control"/> that can be added to a Dashboard page.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Gadgets.GadgetBase.CreateHalfSizeGadgetControl(Inedo.BuildMaster.Extensibility.Gadgets.GadgetContext)">
            <summary>
            Returns an instance of a <see cref="T:System.Web.UI.Control"/> that can be
            added to a Dashboard page.
            </summary>
            <param name="context">Context information for the gadget.</param>
            <returns><see cref="T:System.Web.UI.Control"/> that can be added to a Dashboard page.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Gadgets.GadgetBase.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the Gadget.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current configuration of the Gadget.
            </returns>
            <remarks>
            This should return a user-friendly string describing what the Gadget does
            and the state of its important persistent properties.
            </remarks>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Gadgets.GadgetContext">
            <summary>
            Contains information about the context of a dashboard gadget.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Gadgets.GadgetContext.SystemContext">
            <summary>
            Gets the System-level context instance.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Gadgets.GadgetContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Gadgets.GadgetContext"/> class with System-level context.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Gadgets.GadgetContext.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Gadgets.GadgetContext"/> class with Application-level context.
            </summary>
            <param name="applicationId">The application ID.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Gadgets.GadgetContext.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Gadgets.GadgetContext"/> class with Release-level context.
            </summary>
            <param name="applicationId">The application ID.</param>
            <param name="releaseNumber">The release number.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Gadgets.GadgetContext.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Gadgets.GadgetContext"/> class with Build-level context.
            </summary>
            <param name="applicationId">The application ID.</param>
            <param name="releaseNumber">The release number.</param>
            <param name="buildNumber">The build number.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Gadgets.GadgetContext.FromApplicationGroup(System.Nullable{System.Int32})">
            <summary>
            Returns a system-level gadget context with a specific application group
            </summary>
            <param name="applicationGroupId">The application group ID.</param>
            <returns>System-level gadget context.</returns>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Gadgets.GadgetContext.ApplicationGroupId">
            <summary>
            Gets the application group ID.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Gadgets.GadgetContext.ApplicationId">
            <summary>
            Gets the application ID.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Gadgets.GadgetContext.ReleaseNumber">
            <summary>
            Gets the release number.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Gadgets.GadgetContext.BuildNumber">
            <summary>
            Gets the build number.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Gadgets.GadgetContext.Scope">
            <summary>
            Gets the scope.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Gadgets.GadgetPropertiesAttribute">
            <summary>
            Describes a Gadget to the end-user.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Gadgets.GadgetPropertiesAttribute.#ctor(System.String,System.String,Inedo.BuildMaster.Extensibility.Gadgets.GadgetScope)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Gadgets.GadgetPropertiesAttribute"/> class.
            </summary>
            <param name="name">The friendly name of the Gadget.</param>
            <param name="desc">The description of the Gadget.</param>
            <param name="scope">The scope to which this Gadget applies.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Gadgets.GadgetPropertiesAttribute.Scope">
            <summary>
            Gets the scope to which this Gadget applies.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Gadgets.GadgetScope">
            <summary>
            Specifies the dashboard scope to which a gadget may be added.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Gadgets.GadgetScope.System">
            <summary>
            The gadget may be added to a system-level dashboard.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Gadgets.GadgetScope.Application">
            <summary>
            The gadget may be added to an application-level dashboard.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Gadgets.GadgetScope.Release">
            <summary>
            The gadget may be added to a release-level dashboard.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Gadgets.GadgetScope.Build">
            <summary>
            The gadget may be added to a build-level dashboard.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Notifiers.EventDetail">
            <summary>
            Represents a single detail about an event.
            </summary>
            <remarks>
            An event may have many individual details (for example, ApplicationId).
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Notifiers.EventDetail.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Notifiers.EventDetail"/> class.
            </summary>
            <param name="keyName">Name of the key.</param>
            <param name="value">The value of the detail.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Notifiers.EventDetail.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Notifiers.EventDetail.KeyName">
            <summary>
            Gets the name of the key.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Notifiers.EventDetail.Value">
            <summary>
            Gets the value of the detail.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Notifiers.Triggers.ITrigger">
            <summary>
            Marks a <see cref="T:Inedo.BuildMaster.Extensibility.Notifiers.NotifierBase"/> as a Trigger.
            </summary>
            <remarks>
            A "Trigger" is not designed to Notify, but to perform certain actions; fundamentally, Triggers and Notifiers function the same way, 
            but they are presented to the user differently.
            </remarks>
            <seealso cref="T:Inedo.BuildMaster.Extensibility.Notifiers.NotifierBase"/>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Notifiers.NotificationContext">
            <summary>
            Contains the context of an event notification.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Notifiers.NotificationContext.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Notifiers.NotificationContext"/> class from being created.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Notifiers.NotificationContext.#ctor(Inedo.BuildMaster.Events.EventType,System.String,Inedo.BuildMaster.Extensibility.Notifiers.EventDetail[])">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Notifiers.NotificationContext"/> class.
            </summary>
            <param name="eventType">Type of the event.</param>
            <param name="ownerUserName">Name of the user which owns the Notifier.</param>
            <param name="eventInfo">Additional details about the event.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Notifiers.NotificationContext.GetDetail(System.String)">
            <summary>
            Returns an event detail by key name.
            </summary>
            <param name="keyName">Key of the event detail requested.</param>
            <returns>Value of the specified key.</returns>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Notifiers.NotificationContext.Event">
            <summary>
            Gets the event code fired.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Notifiers.NotificationContext.OwnerUserName">
            <summary>
            Gets the name of the user who subscribed to this notifier, or null if this is actually a Trigger.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Notifiers.NotificationContext.Data">
            <summary>
            Gets or sets an arbitrary object that may be used by Notifiers.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Notifiers.NotificationContext.OccurrenceDetails">
            <summary>
            Gets a copy of the occurrence details for this notification context.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Notifiers.NotifierBase">
            <summary>
            The base class for all Notifiers.
            </summary>
            <remarks>
            A Notifier runs on the BuildMaster server and performs some action in response
            to specific events. Notifiers are configurable per-user while Triggers apply system-wide.
            </remarks>
            <seealso cref="T:Inedo.BuildMaster.Extensibility.Notifiers.Triggers.ITrigger"/>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Notifiers.NotifierBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Notifiers.NotifierBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Notifiers.NotifierBase.EventOccured(Inedo.BuildMaster.Extensibility.Notifiers.NotificationContext)">
            <summary>
            Called when one of the event codes in Inedo.BuildMaster.Events.EventCodes
            has been fired by the system.
            </summary>
            <param name="context">Current notification context which contains information about the event.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Notifiers.NotifierBase.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Notifiers.NotifierBase.Events">
            <summary>
            Gets the events that the notifier is listening to.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Notifiers.NotifierPropertiesAttribute">
            <summary>
            Describes a Notifier to the end-user.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Notifiers.NotifierPropertiesAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Notifiers.NotifierPropertiesAttribute"/> class.
            </summary>
            <param name="name">The friendly name of the Notifier.</param>
            <param name="desc">The description of the Notifier.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.CreatePersistentObjectEventArgs">
            <summary>
            Contains information about a persistent object that is being deserialized.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.CreatePersistentObjectEventArgs.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.CreatePersistentObjectEventArgs"/> class.
            </summary>
            <param name="assemblyName">Name of hte assembly containing the type to instantiate.</param>
            <param name="typeName">Name of the type to instantiate.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.CreatePersistentObjectEventArgs.AssemblyName">
            <summary>
            Gets the name of the assembly containing the type ot instantiate.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.CreatePersistentObjectEventArgs.TypeName">
            <summary>
            Gets the name of the type to instantiate.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.CreatePersistentObjectEventArgs.Instance">
            <summary>
            Gets or sets the instantiated object.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.PromotionRequirements.ArtifactPromotionRequirementBase">
            <summary>
            Provides common functionality for artifact-based promotion requirements.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementBase">
            <summary>
            Represents a requirement that must be met before a build may be promoted.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementBase.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementBase.ToString(Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="context">The context of the current promotion.</param>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementBase.IsRequired(Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext)">
            <summary>
            Determines whether this requirement must be met in order to promote.
            </summary>
            <param name="context">The context of the promotion to test.</param>
            <returns>Value indicating whether the requirement is required.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementBase.IsMet(Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext)">
            <summary>
            Determines whether this requirement has been met.
            </summary>
            <param name="context">The context of the promotion to test.</param>
            <returns>Value indicating whether the requirement is met.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementBase.GetRequiredAndMetText(Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext)">
            <summary>
            Returns a string describing whether the requirement is currently required and met.
            </summary>
            <param name="context">The context of the promotion.</param>
            <returns>User-friendly string indicating the current status.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.ArtifactPromotionRequirementBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.PromotionRequirements.ArtifactPromotionRequirementBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.ArtifactPromotionRequirementBase.GetArtifact(Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext)">
            <summary>
            Returns a stream of the raw compressed artifact data.
            </summary>
            <param name="context">Current promotion context.</param>
            <returns>Stream backed by the artifact file or null if the artifact was not found.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.ArtifactPromotionRequirementBase.GetArtifactFiles(Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext)">
            <summary>
            Returns an array of files contained in the artifact.
            </summary>
            <param name="context">Current promotion context.</param>
            <returns>Array of files contained in the artifact.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.ArtifactPromotionRequirementBase.GetArtifactFileInfo(Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext,System.String)">
            <summary>
            Returns information about a file in an artifact if the file was found; otherwise returns null.
            </summary>
            <param name="context">Current promotion context.</param>
            <param name="fileName">Name of the file in the artifact.</param>
            <returns>Information about a file in an artifact if this file was found; otherwise null.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.ArtifactPromotionRequirementBase.OpenArtifactFile(Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext,System.String)">
            <summary>
            Returns a stream backed by a file in an artifact if the file was found; otherwise returns null.
            </summary>
            <param name="context">Current promotion context.</param>
            <param name="fileName">Name of the file in the artifact.</param>
            <returns>Stream backed by a file in an artifact if the file was found; otherwise null.</returns>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.PromotionRequirements.ArtifactPromotionRequirementBase.ArtifactName">
            <summary>
            Gets or sets the name of the artifact.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.PromotionRequirements.ArtifactPromotionRequirementBase.DeployableId">
            <summary>
            Gets or sets the artifact's deployable ID.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.PromotionRequirements.ArtifactPromotionRequirementBase.ArtifactsBasePath">
            <summary>
            Gets the Artifacts Base Path on the BuildMaster Server.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.PromotionRequirements.ArtifactPromotionRequirementBase.ArtifactFileStream">
            <summary>
            Wraps a Zip file stream and ensures that the artifact file gets closed when the stream is disposed.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.ArtifactPromotionRequirementBase.ArtifactFileStream.#ctor(System.IO.Stream,ICSharpCode.SharpZipLib.Zip.ZipFile,System.IO.Stream,ICSharpCode.SharpZipLib.Zip.ZipEntry)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.PromotionRequirements.ArtifactPromotionRequirementBase.ArtifactFileStream"/> class.
            </summary>
            <param name="fileStream">The file stream.</param>
            <param name="zipFile">The zip file.</param>
            <param name="zipFileStream">The zip file stream.</param>
            <param name="zipEntry">The zip entry.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementStateBase">
            <summary>
            Represents the state of a <see cref="T:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementBase"/>.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementStateBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementStateBase"/> class.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementStateBase.Empty">
            <summary>
            Represents an empty state.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementStateBase.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.PromotionRequirements.IPromotionRequirementStateManager">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementBase"/> is responsible for managing
            its own state.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.IPromotionRequirementStateManager.GetInitialState(Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext)">
            <summary>
            Returns the initial state of the <see cref="T:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementStateBase"/> for a given context.
            </summary>
            <returns>Initial state of the Promotion Requirement.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.IPromotionRequirementStateManager.SetState(Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementStateBase)">
            <summary>
            Sets the state of the <see cref="T:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementStateBase"/>.
            </summary>
            <param name="state">New state of the Promotion Requirement.</param>
            <remarks>This method is called prior to calling <see cref="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementBase.IsMet(Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext)"/> and <see cref="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementBase.IsRequired(Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext)"/>.</remarks>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext">
            <summary>
            Provides important information about a Promotion.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext"/> class from being created.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext.#ctor(System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext"/> class.
            </summary>
            <param name="applicationId">The application ID.</param>
            <param name="releaseNumber">The release number.</param>
            <param name="buildNumber">The build number.</param>
            <param name="environmentId">The environment ID.</param>
            <param name="sequenceNumber">The sequence number.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext.ApplicationId">
            <summary>
            Gets the current Application ID.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext.ReleaseNumber">
            <summary>
            Gets the current Release Number.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext.BuildNumber">
            <summary>
            Gets the current Build Number.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext.EnvironmentId">
            <summary>
            Gets the current Environment ID.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionContext.SequenceNumber">
            <summary>
            Gets the current Sequence Number.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementsPropertiesAttribute">
            <summary>
            Describes a Promotion Requirement to the user.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementsPropertiesAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.PromotionRequirements.PromotionRequirementsPropertiesAttribute"/> class.
            </summary>
            <param name="name">The friendly name of the Promotion Requirement.</param>
            <param name="description">The description of the Promotion Requirement.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.Database.IBackupProvider">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Database.DatabaseProviderBase"/> can create a backup of a database.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Database.IBackupProvider.BackupDatabase(System.String,System.String)">
            <summary>
            When implemented by a derived class, backs up the specified database to the specified path.
            </summary>
            <param name="databaseName">The name of the database to be backed up.</param>
            <param name="destinationPath">
            The path that the database will be backed up to. This may either be a file or a directory
            depending on the database provider.
            </param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.Database.IChangeScriptProvider">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Database.DatabaseProviderBase"/> can maintain change script execution history.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Database.IChangeScriptProvider.InitializeDatabase">
            <summary>
            When implemented by a derived class, initializes the database by installing metadata tables
            for tracking change scripts and version numbers.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Database.IChangeScriptProvider.IsDatabaseInitialized">
            <summary>
            When implemented by a derived class, indicates whether the database has been initialized.
            </summary>
            <returns>Value indicating whether the database has been initialized.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Database.IChangeScriptProvider.GetChangeHistory">
            <summary>
            When implemented by a derived class, retrieves the changes that occurred in the database 
            </summary>
            <returns>Changes that occurred in the database.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Database.IChangeScriptProvider.GetSchemaVersion">
            <summary>
            When implemented in a derived class, retrieves the numeric release number of the 
            database.
            </summary>
            <returns>The numeric release number of the database.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Database.IChangeScriptProvider.ExecuteChangeScript(System.Int64,System.Int32,System.String,System.String)">
            <summary>
            When implemented by a derived class, executes the specified script provided that the
            specified script has not already been executed, and returns a Boolean indicating whether
            the script was skipped as a result of being executed.
            </summary>
            <param name="numericReleaseNumber">Release number for the specified script name.</param>
            <param name="scriptId">BuildMaster's script identifier to be executed.</param>
            <param name="scriptName">Name of the script to be executed.</param>
            <param name="scriptText">Script text to be run.</param>
            <returns>Value indicating whether the script was skipped.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.Database.IRestoreProvider">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Database.DatabaseProviderBase"/> can restore a backup of a database.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Database.IRestoreProvider.RestoreDatabase(System.String,System.String)">
            <summary>
            When implemented by a derived class, restores the specified database from the specified path.
            </summary>
            <param name="databaseName">The name of the database to restore</param>
            <param name="sourcePath">
            The path that the database will be restored from. This may either be a file or a directory
            depending on the database provider.
            </param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.Directory.IAdvancedGroupProvider">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Directory.DirectoryProviderBase"/> provides advanced group-related functionality.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Directory.IAdvancedGroupProvider.GetGroupEmailAddress(System.String)">
            <summary>
            Gets the email address of the specified group or null if the group has no email attribute.
            </summary>
            <param name="groupName">Name of the group.</param>
            <returns>A <see cref="T:System.String"/> that represents an email address, or null.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Directory.IAdvancedGroupProvider.GetSubGroups(System.String)">
            <summary>
            Gets the subgroups that belong to the specified group.
            </summary>
            <param name="groupName">Name of the group.</param>
            <returns>An array of strings that represents the group names.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Directory.IAdvancedGroupProvider.GetGroupAttributes(System.String)">
            <summary>
            Gets the group attributes or null if the group has no attributes.
            </summary>
            <param name="groupName">Name of the group.</param>
            <returns>A dictionary that represents group attributes, or null.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.Directory.ISearchable">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Directory.DirectoryProviderBase"/> is searchable.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Directory.ISearchable.FindUsers(Inedo.BuildMaster.Extensibility.Providers.Directory.UserInfo)">
            <summary>
            Returns the top <see cref="P:Inedo.BuildMaster.Extensibility.Providers.Directory.ISearchable.MaxUsersReturned"/> users in the system.
            </summary>
            <returns>The top <see cref="P:Inedo.BuildMaster.Extensibility.Providers.Directory.ISearchable.MaxUsersReturned"/> users in the system.</returns>
            <remarks>
            If <see cref="P:Inedo.BuildMaster.Extensibility.Providers.Directory.ISearchable.MaxUsersReturned"/> is 0, all users are returned.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Directory.ISearchable.FindGroups(System.String)">
            <summary>
            Returns groups based on a search string.
            </summary>
            <param name="searchString">Search string used to filter groups.</param>
            <returns>Groups which meet the specified search string.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Directory.ISearchable.InstantiateUserInfoClass(System.String,System.String,System.String,System.String[])">
            <summary>
            Returns a new <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Directory.UserInfo"/> with the supplied values.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="displayName">The display name of the user.</param>
            <param name="emailAddress">The email address of the user.</param>
            <param name="groups">The groups to which the user belongs.</param>
            <returns>New <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Directory.UserInfo"/> instance with the supplied values.</returns>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.Directory.ISearchable.SupportsUserNameSearch">
            <summary>
            Gets a value indicating whether the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Directory.ISearchable"/> can search by UserName.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.Directory.ISearchable.SupportsDisplayNameSearch">
            <summary>
            Gets a value indicating whether the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Directory.ISearchable"/> can search by DisplayName.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.Directory.ISearchable.SupportsEmailAddressSearch">
            <summary>
            Gets a value indicating whether the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Directory.ISearchable"/> can search by EmailAddress.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.Directory.ISearchable.SupportsGroupNamesSearch">
            <summary>
            Gets a value indicating whether the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Directory.ISearchable"/> can search by GroupNames.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.Directory.ISearchable.SupportsWildcardSearch">
            <summary>
            Gets a value indicating whether the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Directory.ISearchable"/> supports wildcard searching.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.Directory.ISearchable.PerformWildcardSearch">
            <summary>
            Gets whether a wildcard search should be performed
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.Directory.ISearchable.MaxUsersReturned">
            <summary>
            Gets the maximum number of users that can be returned by a call to <see cref="M:Inedo.BuildMaster.Extensibility.Providers.Directory.ISearchable.FindUsers(Inedo.BuildMaster.Extensibility.Providers.Directory.UserInfo)"/>.
            </summary>
            <remarks>
            When 0, all users are returned.
            </remarks>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.ScriptHosts.ScriptArgument">
            <summary>
            Represents an optionally-named argument to pass into a script.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ScriptHosts.ScriptArgument.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ScriptHosts.ScriptArgument"/> class.
            </summary>
            <param name="name">The name of the argument.</param>
            <param name="value">The value of the argument.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ScriptHosts.ScriptArgument.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ScriptHosts.ScriptArgument"/> class.
            </summary>
            <param name="value">The value of the argument.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ScriptHosts.ScriptArgument.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ScriptHosts.ScriptArgument.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ScriptHosts.ScriptArgument.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj"/> parameter is null.
              </exception>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.ScriptHosts.ScriptArgument.Name">
            <summary>
            Gets the name of the argument.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.ScriptHosts.ScriptArgument.Value">
            <summary>
            Gets the value of the argument.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.ScriptHosts.ScriptHostProviderBase">
            <summary>
            Represents a provider that can be used to execute scripts.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.ProviderBase">
            <summary>
            Base class for all providers.
            </summary>
            <remarks>
            This class should not normally be inherited directly in an extension.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ProviderBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.IsAvailable">
            <summary>
            When implemented in a derived class, indicates whether the provider 
            is installed and available for use in the current execution context.
            </summary>
            <returns>Value indicating whether the provider is available in the current context.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.ValidateConnection">
            <summary>
            When implemented in a derived class, attempts to connect with the
            current configuration and throws an exception if unsuccessful.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.ExecuteCommandLine(System.String,System.String,System.String)">
            <summary>
            Executes a command line process on the provider's agent.
            </summary>
            <param name="fileName">The file name of the process to execute.</param>
            <param name="arguments">The arguments to pass to the process.</param>
            <param name="workingDirectory">The working directory of the process.</param>
            <returns>Results of the process.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.SetAgent(Inedo.BuildMaster.Extensibility.Agents.AgentBase)">
            <summary>
            Inititializes the <see cref="P:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.Agent"/> property.
            </summary>
            <param name="agent">Value to write to the property.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.Log(Inedo.BuildMaster.Diagnostics.MessageLevels,System.String)">
            <summary>
            Writes the specified message to the Provider's log.
            </summary>
            <param name="logLevel">Log level of the message.</param>
            <param name="message">Message to log.</param>
            <remarks>
            Instead of calling <see cref="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.Log(Inedo.BuildMaster.Diagnostics.MessageLevels,System.String)"/> directly, it is often more convenient
            to call the more specific <see cref="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogDebug(System.String,System.Object[])"/>,
            <see cref="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogError(System.String,System.Object[])"/>, <see cref="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogInformation(System.String,System.Object[])"/>,
            or <see cref="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogWarning(System.String,System.Object[])"/> method.
            </remarks>
            <seealso cref="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogDebug(System.String,System.Object[])"/>
            <seealso cref="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogInformation(System.String,System.Object[])"/>
            <seealso cref="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogWarning(System.String,System.Object[])"/>
            <seealso cref="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogError(System.String,System.Object[])"/>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogProcessExecution(System.Diagnostics.ProcessStartInfo)">
            <summary>
            Writes a message to the Provider's log with a Debug log level detailing process execution information.
            </summary>
            <param name="procInfo">The proc info.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogDebug(System.String)">
            <summary>
            Logs the specified message to the Provider's log with a Debug log level.
            </summary>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogDebug(System.String,System.Object[])">
            <summary>
            Logs the specified message to the Provider's log with a Debug log level.
            </summary>
            <param name="messageFmt">Message to log as a composite format string.</param>
            <param name="args">Arguments for the composite format string.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogError(System.String)">
            <summary>
            Logs the specified message to the Provider's log with an Error log level.
            </summary>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogError(System.String,System.Object[])">
            <summary>
            Logs the specified message to the Provider's log with an Error log level.
            </summary>
            <param name="messageFmt">Message to log as a composite format string.</param>
            <param name="args">Arguments for the composite format string.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogInformation(System.String)">
            <summary>
            Logs the specified message to the Provider's log with an Information log level.
            </summary>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogInformation(System.String,System.Object[])">
            <summary>
            Logs the specified message to the Provider's log with an Information log level.
            </summary>
            <param name="messageFmt">Message to log as a composite format string.</param>
            <param name="args">Arguments for the composite format string.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogWarning(System.String)">
            <summary>
            Logs the specified message to the Provider's log with a Warning log level.
            </summary>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogWarning(System.String,System.Object[])">
            <summary>
            Logs the specified message to the Provider's log with a Warning log level.
            </summary>
            <param name="messageFmt">Message to log as a composite format string.</param>
            <param name="args">Arguments for the composite format string.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.Agent">
            <summary>
            Gets the agent responsible for executing this Provider's commands.
            </summary>
            <remarks>
            This is guaranteed to be valid when any of the provider methods are called except <see cref="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.ToString"/>.
            </remarks>
        </member>
        <member name="E:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.LogReceived">
            <summary>
            Raised when a log message has been received.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.ProcessResults">
            <summary>
            Contains information about a process.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.ProcessResults.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.ProcessResults"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.ProcessResults.ExitCode">
            <summary>
            Gets or sets the process exit code.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.ProcessResults.Output">
            <summary>
            Gets or sets the lines written to the output stream of the process.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.ProviderBase.ProcessResults.Error">
            <summary>
            Gets or sets the lines written to the error stream of the process.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ScriptHosts.ScriptHostProviderBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ScriptHosts.ScriptHostProviderBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ScriptHosts.ScriptHostProviderBase.ExecuteScript(Inedo.BuildMaster.Extensibility.Actions.ExecutionContext,System.String,Inedo.BuildMaster.Extensibility.Providers.ScriptHosts.ScriptArgument[])">
            <summary>
            When implemented in a derived class, executes a script file using
            a specified execution context.
            </summary>
            <param name="context">Context in which to execute the script file.</param>
            <param name="fileName">Path to the script file to execute.</param>
            <param name="arguments">Arguments to pass to the script. This may be null or empty if no arguments are provided.</param>
            <returns>Return value of the script. This may be null if there is no return value.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ScriptHosts.ScriptHostProviderBase.ExecuteScriptText(Inedo.BuildMaster.Extensibility.Actions.ExecutionContext,System.String,Inedo.BuildMaster.Extensibility.Providers.ScriptHosts.ScriptArgument[])">
            <summary>
            Executes a script stored in a string using a specified execution context.
            </summary>
            <param name="context">Context in which to execute the script.</param>
            <param name="scriptText">Content of the script to execute.</param>
            <param name="arguments">Arguments to pass to the script. This may be null or empty if no arguments are provided.</param>
            <returns>Return value of the script. This may be null if there is no return value.</returns>
            <remarks>
            The default implementation of this method creates a temporary file and passes it to the <see cref="M:Inedo.BuildMaster.Extensibility.Providers.ScriptHosts.ScriptHostProviderBase.ExecuteScript(Inedo.BuildMaster.Extensibility.Actions.ExecutionContext,System.String,Inedo.BuildMaster.Extensibility.Providers.ScriptHosts.ScriptArgument[])"/> method.
            If a script host supports executing a string directly, it may be beneficial to override this method.
            </remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.ScriptHosts.ScriptHostProviderBase.SupportsArguments">
            <summary>
            Gets a value indicating whether the script host accepts arguments.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.ScriptHosts.ScriptHostProviderBase.SupportsReturnValue">
            <summary>
            Gets a value indicating whether the script host can return a value from a script.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.ClientCommand">
            <summary>
            A command executed against a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IClientCommandProvider"/>
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.ClientCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.ClientCommand"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.ClientCommand.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.ClientCommand"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.ClientCommand.CommandName">
            <summary>
            Gets the name of the command that will be executed
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.ClientCommand.CommandDescription">
            <summary>
            Gets the a user-friendly description of the command
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IBranchDeletingProvider">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase"/> supports deleting branches.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IBranchDeletingProvider.DeleteBranch(System.String)">
            <summary>
            When implemented in a derived class, deletes the branch located at the specified source path.
            </summary>
            <param name="sourcePath">Path that will be deleted.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IClientCommandProvider">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase"/> supports execution of specific commands.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IClientCommandProvider.GetAvailableCommands">
            <summary>
            Returns an array of commands that may be executed against the provider.
            </summary>
            <returns>Array of commands that may be executed against the provider.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IClientCommandProvider.ExecuteClientCommand(System.String,System.String)">
            <summary>
            Executes the specified client command with the specified arguments.
            </summary>
            <param name="commandName">The client command.</param>
            <param name="arguments">Optional arguments to pass with the command.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IClientCommandProvider.GetClientCommandHelp(System.String)">
            <summary>
            Returns documentation for a specific client command.
            </summary>
            <param name="commandName">The client command to return documentation for.</param>
            <returns>Documentation for the client command if it is available.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IClientCommandProvider.GetClientCommandPreview">
            <summary>
            Returns a string containing the command to be passed to the tool.
            </summary>
            <returns>String containing the command to be passed to the tool.</returns>
            <remarks>This will typically be displayed to the user, so passwords should be obscured.</remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IClientCommandProvider.SupportsCommandHelp">
            <summary>
            Gets a value indicating whether commands have detailed help available.
            </summary>
            <remarks>
            Generally, command help will only be retrieved if the user explicitly asks for it, so it is
            acceptable to invoke a command-line tool to retrieve it or to just store it in the extension.
            </remarks>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.ILabelDeletingProvider">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase"/> supports deleting labels.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.ILabelDeletingProvider.DeleteLabel(System.String,System.String)">
            <summary>
            When implemented in a derived class, deletes the specified label at the specified
            source path.
            </summary>
            <param name="label">Label to delete.</param>
            <param name="sourcePath">Path to delete label from.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IRevisionProvider">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase"/> can determine the latest revision of a path in source control.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IRevisionProvider.GetCurrentRevision(System.String)">
            <summary>
            Returns a "fingerprint" that represents the current revision on the source control repository.
            </summary>
            <param name="path">The source control path to monitor.</param>
            <returns>A representation of the current revision in source control.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.MultipleRepositoryProviderBase`1">
            <summary>
            Represents a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase"/> with one or more user-defined
            <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.RepositoryBase"/> instance.
            </summary>
            <typeparam name="T">Type of the repository.</typeparam>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.MultipleRepositoryProviderBase">
            <summary>
            The internally-used base class for <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.MultipleRepositoryProviderBase`1"/>
            </summary>
            <remarks>
            This is meant to be used internally.
            </remarks>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase">
            <summary>
            Base class for all source control providers.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase.GetLatest(System.String,System.String)">
            <summary>
            When implemented in a derived class, retrieves the latest version of
            the source code from the provider's source path into the target path.
            </summary>
            <param name="sourcePath">Provider source path.</param>
            <param name="targetPath">Target file path.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase.GetDirectoryEntryInfo(System.String)">
            <summary>
            When implemented in a derived class, returns a <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/>
            object from the specified source path.
            </summary>
            <param name="sourcePath">Provider source path.</param>
            <returns><see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> object populated with the files in source control.</returns>
            <remarks>
            This method is not designed to be recursive
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase.GetDirectoryEntryInfo(System.String,System.Boolean)">
            <summary>
            When implemented in a derived class, returns a <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/>
            object from the specified source path.
            </summary>
            <param name="sourcePath">Provider source path.</param>
            <param name="recurse">Indicates whether to recursively iterate paths.</param>
            <returns><see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> object populated with the files in source control.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase.AlwaysRecursesPath(System.String)">
            <summary>
            When implemented in a derived class, indicates whether the provider will recursively
            retrieving everything in the specified path.
            </summary>
            <remarks>
            Note that for most providers (SVN, FileSystem, etc), this should always return false, as
            the native methods for retrieving a list of items in source control only returns the
            item at the given path. Some providers (Vault, etc), retrieve an entire list of
            files/directories/subdirectories when a path is provided.
            </remarks>
            <param name="sourcePath">Provider source path.</param>
            <returns>Value indicating whether a given path can be recursively retrieved.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase.GetFileContents(System.String)">
            <summary>
            When implemented in a derived class, returns the contents of the specified file.
            </summary>
            <param name="filePath">Provider file path.</param>
            <returns>Contents of the file as an array of bytes.</returns>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase.DirectorySeparator">
            <summary>
            Gets the <see cref="T:System.Char"/> used by the 
            provider to separate directories/files in a path string.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.MultipleRepositoryProviderBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.MultipleRepositoryProviderBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.MultipleRepositoryProviderBase.GetRepositoryType">
            <summary>
            Gets the type of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.RepositoryBase"/> used by <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.MultipleRepositoryProviderBase`1"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.MultipleRepositoryProviderBase.set_RepositoriesInternal(Inedo.BuildMaster.Extensibility.Providers.SourceControl.RepositoryBase[])">
            <summary>
            Used by the setter of <see cref="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.MultipleRepositoryProviderBase.Repositories"/> to allow the new/hiding property to cast properly
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.MultipleRepositoryProviderBase.Repositories">
            <summary>
            Gets or sets the repositories.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.MultipleRepositoryProviderBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.MultipleRepositoryProviderBase`1"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.MultipleRepositoryProviderBase`1.set_RepositoriesInternal(Inedo.BuildMaster.Extensibility.Providers.SourceControl.RepositoryBase[])">
            <summary>
            Used by the setter of <see cref="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.MultipleRepositoryProviderBase`1.Repositories"/> to allow the new/hiding property to cast properly.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.MultipleRepositoryProviderBase`1.GetRepositoryType">
            <summary>
            Gets the type of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.RepositoryBase"/> used by <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.MultipleRepositoryProviderBase`1"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.MultipleRepositoryProviderBase`1.Repositories">
            <summary>
            Gets or sets the repositories.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.RepositoryBase">
            <summary>
            Represents a repository in a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.MultipleRepositoryProviderBase`1"/>
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.RepositoryBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.RepositoryBase"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.RepositoryBase.RepositoryPath">
            <summary>
            Gets or sets the repository path.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.RepositoryBase.RepositoryName">
            <summary>
            Gets the repository name.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.IDatabaseProviderRecipe">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase"/> uses a database Provider.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.IDatabaseProviderRecipe.DatabaseProviderId">
            <summary>
            Gets or sets the database provider id.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.IConfigurationFileRecipe">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase"/> is relevant to a Configuration File.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.IConfigurationFileRecipe.ConfigurationFileId">
            <summary>
            Gets or sets the ID of the relevant Configuration File.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.IDatabaseChangeScriptRecipe">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase"/> is relevant to a Database Change Script.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.IDatabaseChangeScriptRecipe.DatabaseChangeScriptId">
            <summary>
            Gets or sets the ID of the relevant Database Change Script.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.IChangeControlRecipe">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase"/> is relevant to a Change Control.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.IChangeControlRecipe.ChangeControlId">
            <summary>
            Gets or sets the ID of the relevant Change Control.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.IActionRecipe">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase"/> is related to an action
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.IActionGroupRecipe">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase"/> is relevant to an action group.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.IApplicationRecipe">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase"/> is relevant to an application.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.IApplicationRecipe.ApplicationId">
            <summary>
            Gets or sets the ID of the relevant application.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.IActionGroupRecipe.ActionGroupId">
            <summary>
            Gets or sets the id of the relevant action group id.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.IActionRecipe.ActionSequence">
            <summary>
            Gets or sets the sequence of the related action
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.IApplicationGroupRecipe">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase"/> is relevant to an ApplicationGroup.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.IApplicationGroupRecipe.ApplicationGroupId">
            <summary>
            Gets or sets the ID of the relevant ApplicationGroup.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.IDeployableCreatingRecipe">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase"/> creates deployables when an application is created.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.IApplicationCreatingRecipe">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase"/> creates an application.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.IApplicationCreatingRecipe.ApplicationName">
            <summary>
            Gets or sets the name of the application to be created.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.IApplicationCreatingRecipe.ApplicationGroup">
            <summary>
            Gets or sets the group name of the application to be create.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.IDeployableCreatingRecipe.Deployables">
            <summary>
            Gets or sets the collection of deployable IDs mapped to deployable names
            that are created when the application is created.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.IExecutionRecipe">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase"/> is relevant to an Execution.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.IExecutionRecipe.ExecutionId">
            <summary>
            Gets or sets the Execution id of the relevant Execution.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.IBuildPromotionRecipe">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase"/> is relevant to a build promotion.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.IBuildRecipe">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase"/> is relevant to a build.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.IReleaseRecipe">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase"/> is relevant to a release.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.IReleaseRecipe.ReleaseNumber">
            <summary>
            Gets or sets the relevant release number.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.IBuildRecipe.BuildNumber">
            <summary>
            Gets or sets the relavent build number.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.IEnvironmentRecipe">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase"/> is relevant to an environment.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.IEnvironmentRecipe.EnvironmentId">
            <summary>
            Gets or sets the environment id of the relevant environment.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.IExtendedApplicationCreatingRecipe">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase"/> creates an application with certain release and build numbering scheme.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.IExtendedApplicationCreatingRecipe.ReleaseNumberScheme">
            <summary>
            Gets or sets the release number scheme. 
            </summary>
            <remarks>
            This must be one of the string values within <see cref="!:Inedo.BuildMaster.Data.ReleaseNumberSchemes"/>
            </remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.IExtendedApplicationCreatingRecipe.BuildNumberScheme">
            <summary>
            Gets or sets the build number scheme.
            </summary>
            <remarks>
            This must be one of the string values within <see cref="!:Inedo.BuildMaster.Data.BuildNumberSchemes"/>
            </remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.IExtendedApplicationCreatingRecipe.AutoIncrementReleaseNumber">
            <summary>
            Gets or sets a value indicating whether an application should have new
            releases automatically created once a release has been deployed.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.IIssueTrackingProviderRecipe">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase"/> uses an Issue Tracking Provider.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.IIssueTrackingProviderRecipe.IssueTrackingProviderId">
            <summary>
            Gets or sets the issue tracking provider id.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.IServerRecipe">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase"/> is relevant to a Server.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.IServerRecipe.ServerId">
            <summary>
            Gets or sets the Server id of the relevant Server.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.IWorkflowStepRecipe">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase"/> is related to a workflow step.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.IWorkflowRecipe">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase"/> is related to a workflow.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.IWorkflowRecipe.WorkflowId">
            <summary>
            Gets or sets the ID of the related workflow.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.IWorkflowStepRecipe.StepSequence">
            <summary>
            Gets or sets the sequence of the related workflow step.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.IDashboardCreatingRecipe">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase"/> can create custom dashboards.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Recipes.IDashboardCreatingRecipe.CreateDashboards">
            <summary>
            Invoked when the recipe should create its custom dashboards.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.IDeploymentPlanRecipe">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase"/> is relevant to a Deployment Plan.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeScopes">
            <summary>
            Identifies the scope of a recipe.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Recipes.RecipeScopes.None">
            <summary>
            The recipe is not displayed in the UI and requires a hardcoded URL to access it.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Recipes.RecipeScopes.ActionGroup">
            <summary>
            The recipe applies to action groups.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Recipes.RecipeScopes.Action">
            <summary>
            The recipe applies to actions.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Recipes.RecipeScopes.ApplicationGroup">
            <summary>
            The recipe applies to application groups.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Recipes.RecipeScopes.Application">
            <summary>
            The recipe applies to applications.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Recipes.RecipeScopes.BuildPromotion">
            <summary>
            The recipe applies to build promotions.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Recipes.RecipeScopes.Build">
            <summary>
            The recipe applies to builds.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Recipes.RecipeScopes.ChangeControl">
            <summary>
            The recipe applies to change controls.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Recipes.RecipeScopes.ConfigurationFile">
            <summary>
            The recipe applies to configuration files.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Recipes.RecipeScopes.DatabaseChangeScript">
            <summary>
            The recipe applies to database change scripts.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Recipes.RecipeScopes.DatabaseProvider">
            <summary>
            The recipe applies to database providers.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Recipes.RecipeScopes.DeploymentPlan">
            <summary>
            The recipe applies to deployment plans.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Recipes.RecipeScopes.Environment">
            <summary>
            The recipe applies to environments.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Recipes.RecipeScopes.Example">
            <summary>
            The recipe is an example.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Recipes.RecipeScopes.Execution">
            <summary>
            The recipe applies to executions.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Recipes.RecipeScopes.IssueTrackingProvider">
            <summary>
            The recipe applies to issue tracking providers.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Recipes.RecipeScopes.Release">
            <summary>
            The recipe applies to releases.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Recipes.RecipeScopes.SourceControlProvider">
            <summary>
            The recipe applies to source control providers.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Recipes.RecipeScopes.Server">
            <summary>
            The recipe applies to servers.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Recipes.RecipeScopes.Workflow">
            <summary>
            The recipe applies to workflows.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Recipes.RecipeScopes.WorkflowStep">
            <summary>
            The recipe applies to workflow steps.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Recipes.RecipeScopes.System">
            <summary>
            The recipe applies to the whole system.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Recipes.RecipeScopes.NewApplication">
            <summary>
            The recipe is used as a new application wizard.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.WorkflowCreatingRequirementsAttribute">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase"/> requires one or more environments.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Recipes.WorkflowCreatingRequirementsAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.WorkflowCreatingRequirementsAttribute"/> class.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.WorkflowCreatingRequirementsAttribute.MinimumEnvironmentCount">
            <summary>
            Gets the minimum number of environments required for the recipe.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.WorkflowCreatingRequirementsAttribute.MaximumEnvironmentCount">
            <summary>
            Gets the maximum number of environments supported by the recipe.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.IScmCreatingRecipe">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.IScmRecipe"/> creates a Source Control Provider.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.IScmRecipe">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase"/> uses a Source Control Provider.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.IScmRecipe.ScmProviderId">
            <summary>
            Gets or sets the ID of the Source Control Provider used by the <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase"/>.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.IScmRecipe.ScmPath">
            <summary>
            Gets or sets the source control path used by the <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase"/>.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Recipes.IScmCreatingRecipe.InstantiateSourceControlProvider">
            <summary>
            Returns a new instance of the Source Control Provider.
            </summary>
            <returns>Instance of the Source Control Provider.</returns>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.IScmCreatingRecipe.SourceControlProviderName">
            <summary>
            Gets or sets the name of the Source Control Provider to create.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.IWorkflowCreatingRecipe">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase"/> creates a workflow.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.IWorkflowCreatingRecipe.WorkflowName">
            <summary>
            Gets or sets the name of the workflow to be created.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.IWorkflowCreatingRecipe.WorkflowSteps">
            <summary>
            Gets or sets an ordered array of Environment Ids to be created as part of the workflow.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase">
            <summary>
            Base class for all recipes.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase.Execute">
            <summary>
            Executes the recipe.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase.RedirectUrl">
            <summary>
            Gets the URL to redirect to after recipe execution.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Recipes.RecipePropertiesAttribute">
            <summary>
            Describes a <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipeBase"/> to the user.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Recipes.RecipePropertiesAttribute.#ctor(System.String,System.String,Inedo.BuildMaster.Extensibility.Recipes.RecipeScopes)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Recipes.RecipePropertiesAttribute"/> class.
            </summary>
            <param name="name">The friendly name of the recipe.</param>
            <param name="desc">The description of the recipe.</param>
            <param name="scope">The scope.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Recipes.RecipePropertiesAttribute.RecipeScope">
            <summary>
            Gets the scope of the recipe.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.RequiredBuildMasterVersionAttribute">
            <summary>
            Marks an extension or class as requiring a specific minimum version of BuildMaster.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.RequiredBuildMasterVersionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.RequiredBuildMasterVersionAttribute"/> class.
            </summary>
            <param name="minimumVersion">The minimum version.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.RequiredBuildMasterVersionAttribute.MinimumVersion">
            <summary>
            Gets the minimum required BuildMaster version.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.TranslatePersistentTypeEventArgs">
            <summary>
            Contains information about a persistent object that is about to be serialized.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.TranslatePersistentTypeEventArgs.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.TranslatePersistentTypeEventArgs"/> class.
            </summary>
            <param name="type">Type to translate.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.TranslatePersistentTypeEventArgs.OriginalType">
            <summary>
            Gets the type to translate.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.TranslatePersistentTypeEventArgs.AssemblyName">
            <summary>
            Gets or sets the translated assembly name.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.TranslatePersistentTypeEventArgs.TypeName">
            <summary>
            Gets or sets the translated type name.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Features.FeatureCodes">
            <summary>
            Represents the FeatureCodes Domain
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Features.FeatureCodes.Validate(System.String)">
            <summary>
            Validates that the code exists within the domain
            </summary>
            <param name="code">Code to validate</param>
        </member>
        <member name="M:Inedo.BuildMaster.Features.FeatureCodes.GetName(System.String)">
            <summary>
            Returns the Display-Friendly name of the code within FeatureCodes
            </summary>
            <param name="code">value of a constant within the FeatureCodes domain</param>
            <returns>display-friendly name of code</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Features.FeatureCodes.ToArray">
            <summary>
            Returns a string array of domain codes
            </summary>
            <returns>codes within the FeatureCodes domain</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Features.FeatureLevelRequiredAttribute">
            <summary>
            Indicates that particular feature level is required for <see cref="T:Inedo.BuildMaster.Extensibility.IExtensible"/> item to be displayed in a list
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Features.FeatureLevelRequiredAttribute.#ctor(System.String,Inedo.BuildMaster.Features.FeatureLevels)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Features.FeatureLevelRequiredAttribute"/> class.
            </summary>
            <param name="featureCode">The feature code.</param>
            <param name="featureLevel">The feature level.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Features.FeatureLevelRequiredAttribute.FeatureCode">
            <summary>
            Gets the feature code.
            </summary>
            <value>The feature code.</value>
        </member>
        <member name="P:Inedo.BuildMaster.Features.FeatureLevelRequiredAttribute.FeatureLevel">
            <summary>
            Gets the feature level.
            </summary>
            <value>The feature level.</value>
        </member>
        <member name="T:Inedo.BuildMaster.Features.FeatureLevels">
            <summary>
            Level of feature
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Files.DirectoryEntryBuilder">
            <summary>
            Helper for constructing <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> trees.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryBuilder"/> class.
            </summary>
            <param name="name">The name of the entry.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.GetPath(System.String)">
            <summary>
            Returns the path of the entry.
            </summary>
            <param name="separator">Separator to place between path elements.</param>
            <returns>Path of the entry.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.GetPath(System.String,System.Boolean)">
            <summary>
            Returns the path of the entry.
            </summary>
            <param name="separator">Separator to place between path elements.</param>
            <param name="omitEmptyNames">Indicates whether empty directory names should be included in the path.</param>
            <returns>Path of the entry.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.AddFile(System.String)">
            <summary>
            Adds a new file.
            </summary>
            <param name="name">The name of the file to add.</param>
            <returns>The newly-added file.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.AddFile(System.String,System.Int64,System.DateTime,System.IO.FileAttributes)">
            <summary>
            Adds a new file.
            </summary>
            <param name="name">The name of the file to add.</param>
            <param name="size">The size of the file.</param>
            <param name="modified">The timestamp when the file was last modified.</param>
            <param name="fileAttributes">The attributes of the file.</param>
            <returns>The newly-added file.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.AddFile(System.String,System.Int64,System.DateTime,System.IO.FileAttributes,System.String)">
            <summary>
            Adds a new file.
            </summary>
            <param name="name">The name of the file to add.</param>
            <param name="size">The size of the file.</param>
            <param name="modified">The timestamp when the file was last modified.</param>
            <param name="fileAttributes">The attributes of the file.</param>
            <param name="hash">The hash of the file.</param>
            <returns>The newly-added file.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.ToDirectoryEntryInfo(System.String)">
            <summary>
            Returns a <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> instance constructed from this <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryBuilder"/>.
            </summary>
            <param name="pathSeparator">The path separator.</param>
            <returns><see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> instance constructed from this <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryBuilder"/>.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.ToDirectoryEntryInfo(System.String,System.String)">
            <summary>
            Returns a <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> instance constructed from this <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryBuilder"/>.
            </summary>
            <param name="pathSeparator">The path separator.</param>
            <param name="prependPath">Path string to prepend to the DirectoryEntryInfo's path property.</param>
            <returns><see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> instance constructed from this <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryBuilder"/>.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.ToDirectoryEntryInfo(System.String,System.String,System.Boolean)">
            <summary>
            Returns a <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> instance constructed from this <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryBuilder"/>.
            </summary>
            <param name="pathSeparator">The path separator.</param>
            <param name="prependPath">Path string to prepend to the DirectoryEntryInfo's path property.</param>
            <param name="omitEmptyNames">Indicates whether empty directory names should be part of the path.</param>
            <returns><see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> instance constructed from this <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryBuilder"/>.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.Select(System.String,System.String)">
            <summary>
            Selects an entry with the specified path.
            </summary>
            <param name="path">The path of the entry to select relative to the current node.</param>
            <param name="separator">The path separator.</param>
            <returns>Entry with matching path if found; otherwise null.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.SafePathCombine(System.String,System.String,System.String)">
            <summary>
            Returns a combination of two paths.
            </summary>
            <param name="pathSeparator">Path separator character.</param>
            <param name="pathA">First path.</param>
            <param name="pathB">Second path.</param>
            <returns>Combined path.</returns>
        </member>
        <member name="P:Inedo.BuildMaster.Files.DirectoryEntryBuilder.Name">
            <summary>
            Gets or sets the name of the entry.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.DirectoryEntryBuilder.Parent">
            <summary>
            Gets the parent entry.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.DirectoryEntryBuilder.Directories">
            <summary>
            Gets the children of the entry.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.DirectoryEntryBuilder.Files">
            <summary>
            Gets the files contained in this directory.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.DirectoryEntryBuilder.Path">
            <summary>
            Gets the path of the entry using / as the separator.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList">
            <summary>
            Contains DirectoryEntryBuilder instance which represent subdirectories.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.#ctor(Inedo.BuildMaster.Files.DirectoryEntryBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.IndexOf(Inedo.BuildMaster.Files.DirectoryEntryBuilder)">
            <summary>
            Returns the index of a subdirectory.
            </summary>
            <param name="item">Subdirectory whose index is returned.</param>
            <returns>Index of the specified subdirectory if it is contained in this list; otherwise -1.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.Insert(System.Int32,Inedo.BuildMaster.Files.DirectoryEntryBuilder)">
            <summary>
            Inserts a subdirectory into this list.
            </summary>
            <param name="index">Index where subdirectory will be inserted.</param>
            <param name="item">Subdirectory to insert.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.RemoveAt(System.Int32)">
            <summary>
            Removes a subdirectory at a specified index.
            </summary>
            <param name="index">Index of subdirectory to remove.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.Add(Inedo.BuildMaster.Files.DirectoryEntryBuilder)">
            <summary>
            Adds a subdirectory to the list.
            </summary>
            <param name="item">Subdirectory to add.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.Add(System.String)">
            <summary>
            Adds a new subdirectory to the list.
            </summary>
            <param name="name">Name of new subdirectory to add.</param>
            <returns>The newly-added subdirectory.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.Clear">
            <summary>
            Removes all subdirectories from the list.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.Contains(Inedo.BuildMaster.Files.DirectoryEntryBuilder)">
            <summary>
            Returns a value indicating whether a subdirectory is contained in the list.
            </summary>
            <param name="item">Subdirectory to search for.</param>
            <returns>True if subdirectory is in this list; otherwise false.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.System#Collections#Generic#ICollection{Inedo#BuildMaster#Files#DirectoryEntryBuilder}#CopyTo(Inedo.BuildMaster.Files.DirectoryEntryBuilder[],System.Int32)">
            <summary>
            Copies the subdirectory list to an array.
            </summary>
            <param name="array">Array into which subdirectories are copied.</param>
            <param name="arrayIndex">Index in array to start writing.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.Remove(Inedo.BuildMaster.Files.DirectoryEntryBuilder)">
            <summary>
            Removes a subdirectory from the list.
            </summary>
            <param name="item">Subdirectory to remove.</param>
            <returns>True if subdirectory was removed; false if it was not initially in the list.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.GetEnumerator">
            <summary>
            Returns an enumerator for the subdirectory list.
            </summary>
            <returns>Enumerator for the subdirectory list.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator for the subdirectory list.
            </summary>
            <returns>Enumerator for the subdirectory list.</returns>
        </member>
        <member name="P:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.Count">
            <summary>
            Gets the number of directories in the list.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.System#Collections#Generic#ICollection{Inedo#BuildMaster#Files#DirectoryEntryBuilder}#IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.DirectoryEntryBuilder.DirectoryEntryBuilderList.Item(System.Int32)">
            <summary>
            Gets or sets a subdirectory.
            </summary>
            <param name="index">Index of subdirectory.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Files.GetDirectoryEntryCommand">
            <summary>
            Contains parameters for controlling the behavior of <see cref="M:Inedo.BuildMaster.Util.Files.GetDirectoryEntry(Inedo.BuildMaster.Files.GetDirectoryEntryCommand)"/>.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Files.GetDirectoryEntryCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Files.GetDirectoryEntryCommand"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Files.GetDirectoryEntryCommand.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Inedo.BuildMaster.Files.GetDirectoryEntryCommand.Path">
            <summary>
            Gets or sets the root path to enumerate.
            </summary>
            <remarks>
            If this value is null or empty, file system enumeration will start with
            drives returned by the <see cref="M:System.IO.DriveInfo.GetDrives"/> method.
            </remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Files.GetDirectoryEntryCommand.Recurse">
            <summary>
            Gets or sets a value indicating whether to recursively enumerate
            subdirectories below the root path.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.GetDirectoryEntryCommand.BuildFileHashes">
            <summary>
            Gets or sets a value indicating whether to build hashes for
            every file enumerated.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.GetDirectoryEntryCommand.IncludeRootPath">
            <summary>
            Gets or sets a value indicating whether the root path should be
            included in the resulting FileSystemEntryInfos.
            </summary>
            <remarks>
            If this property is false, all of the Path properties
            on returned entries will be relative to the root path
            from which enumeration started.
            </remarks>
        </member>
        <member name="T:Inedo.BuildMaster.Files.GetDirectoryEntryResult">
            <summary>
            Contains the results of a call to the <see cref="M:Inedo.BuildMaster.Util.Files.GetDirectoryEntry(Inedo.BuildMaster.Files.GetDirectoryEntryCommand)"/> method.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Files.GetDirectoryEntryResult.#ctor(Inedo.BuildMaster.Files.DirectoryEntryInfo,System.Exception[])">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Files.GetDirectoryEntryResult"/> class.
            </summary>
            <param name="entry">The resulting root <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/>.</param>
            <param name="exceptions">Any exceptions encountered during enumeration.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Files.GetDirectoryEntryResult.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Inedo.BuildMaster.Files.GetDirectoryEntryResult.Entry">
            <summary>
            Gets the root <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> containing all enumerated files and subdirectories.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.GetDirectoryEntryResult.Exceptions">
            <summary>
            Gets an array of any exceptions which were encountered during enumeration.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Files.HashedFileEntryInfo">
            <summary>
            Represents a file with a hash.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Files.FileEntryInfo">
            <summary>
            Represents a file in a file system.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Files.SystemEntryInfo">
            <summary>
            Represents an entry in a file system.
            </summary>
            <remarks>
            This class may represent anything with a name and a path, but is typically
            a file or directory on a disk.
            </remarks>
            <seealso cref="T:Inedo.BuildMaster.Files.FileEntryInfo"/>
            <seealso cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/>
        </member>
        <member name="M:Inedo.BuildMaster.Files.SystemEntryInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Files.SystemEntryInfo"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Files.SystemEntryInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.SystemEntryInfo.System#IComparable{Inedo#BuildMaster#Files#SystemEntryInfo}#CompareTo(Inedo.BuildMaster.Files.SystemEntryInfo)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Files.SystemEntryInfo.System#IComparable#CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether
            the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared.
            </returns>
        </member>
        <member name="P:Inedo.BuildMaster.Files.SystemEntryInfo.Name">
            <summary>
            Gets the name of the entry.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.SystemEntryInfo.Path">
            <summary>
            Gets the path of the entry.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Files.FileEntryInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Files.FileEntryInfo"/> class.
            </summary>
            <param name="name">The name of the file.</param>
            <param name="path">The path of the file.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Files.FileEntryInfo.Name">
            <summary>
            Gets the name of the file.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.FileEntryInfo.Path">
            <summary>
            Gets the path of the file.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Files.IHashedFileEntry">
            <summary>
            Represents a <see cref="T:Inedo.BuildMaster.Files.FileEntryInfo"/> that has a string-based hash.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.IHashedFileEntry.FileHash">
            <summary>
            Gets the hash string of the file.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Files.HashedFileEntryInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Files.HashedFileEntryInfo"/> class.
            </summary>
            <param name="name">The name of the file.</param>
            <param name="path">The path of the file.</param>
            <param name="hash">The hash string of the file.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Files.HashedFileEntryInfo.FileHash">
            <summary>
            Gets the hash string of the file.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Predicates.GroupPredicateBase">
            <summary>
            Base class for all group Predicates.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Predicates.PredicateBase">
            <summary>
            Base class for all BuildMaster Predicates.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Predicates.PredicateBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Predicates.PredicateBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Predicates.PredicateBase.Evaluate(Inedo.BuildMaster.Extensibility.Actions.ExecutionContext)">
            <summary>
            Evaluates the Predicate, returning the resulting value.
            </summary>
            <param name="context">Context in which the Predicate is evaluated.</param>
            <returns>Resulting value of the evaluated Predicate.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Predicates.PredicateBase.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Predicates.GroupPredicateBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Predicates.GroupPredicateBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Predicates.GroupPredicateBase.ToString(System.Boolean)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="recurse">Value indicating whether contained predicates should be included.</param>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Predicates.GroupPredicateBase.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Predicates.GroupPredicateBase.Predicates">
            <summary>
            Gets or sets the predicates contained within the group.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Predicates.PredicatePropertiesAttribute">
            <summary>
            Describes a Predicate to the end-user.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Predicates.PredicatePropertiesAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Predicates.PredicatePropertiesAttribute"/> class.
            </summary>
            <param name="name">The friendly name of the Predicate.</param>
            <param name="desc">The description of the Predicate.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.Database.ExecutionResult">
            <summary>
            Contains information about the result of a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Database.ChangeScript"/> execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Database.ExecutionResult.#ctor(Inedo.BuildMaster.Extensibility.Providers.Database.ExecutionResult.Results,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Database.ExecutionResult"/> class.
            </summary>
            <param name="result">The result of the script execution.</param>
            <param name="log">A log of any output generated during script execution.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Database.ExecutionResult.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.Database.ExecutionResult.Log">
            <summary>
            Gets a log of the output generated during script execution.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.Database.ExecutionResult.Result">
            <summary>
            Gets the resulting state of the script execution.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.Database.ExecutionResult.Results">
            <summary>
            Describes the resulting state of a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Database.ChangeScript"/> execution.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Providers.Database.ExecutionResult.Results.Success">
            <summary>
            The <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Database.ChangeScript"/> executed successfully.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Providers.Database.ExecutionResult.Results.Failed">
            <summary>
            The <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Database.ChangeScript"/> execution failed.
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Providers.Database.ExecutionResult.Results.Skipped">
            <summary>
            The <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Database.ChangeScript"/> was not executed.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IBranchingProvider">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase"/> supports branching.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IBranchingProvider.Branch(System.String,System.String,System.String)">
            <summary>
            Copies the specified sourcePath to the specified toPath and leaves the specified comment
            if the comment is not null.
            </summary>
            <param name="sourcePath">Path to copy from.</param>
            <param name="toPath">Path to copy to.</param>
            <param name="comment">Comment for the copy operation; may be null if <see cref="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IBranchingProvider.RequiresComment"/> returns false.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IBranchingProvider.RequiresComment">
            <summary>
            Gets a value indicating whether the comment parameter of the <see cref="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IBranchingProvider.Branch(System.String,System.String,System.String)"/> method is required.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.InvalidScPathException">
            <summary>
            Exception that is thrown when an invalid path string is used
            with a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase"/>.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.ProviderException">
            <summary>
            Exception thrown by a provider.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ProviderException"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ProviderException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ProviderException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ProviderException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.InvalidScPathException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.InvalidScPathException"/> class.
            </summary>
            <param name="scPath">The source control path.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.InvalidScPathException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.InvalidScPathException"/> class.
            </summary>
            <param name="scPath">The source control path.</param>
            <param name="inner">The exception which caused the error.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.MasksTypeAttribute">
            <summary>
            When applied to an <see cref="T:Inedo.BuildMaster.Extensibility.IExtensible"/>, allows transparent replacement
            of all instances of a type with this type.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.MasksTypeAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.MasksTypeAttribute"/> class.
            </summary>
            <param name="maskedTypeName">The assembly-qualified-name of the type to replace.</param>
            <param name="version">The replacement version string. See remarks.</param>
            <remarks>
            The version string must specify at a minimum a version number and may be
            prefixed with an inequality operator.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.MasksTypeAttribute.IsMasked(System.Version)">
            <summary>
            Returns a value indicating whether the masking should be applied to a given version.
            </summary>
            <param name="currentVersion">Version to test for masking.</param>
            <returns>True if masking should be applied; otherwise false.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.MasksTypeAttribute.IsVersionInRange(System.Version,System.String)">
            <summary>
            Returns a value indicating whether a version is in range.
            </summary>
            <param name="currentVersion">The version to test.</param>
            <param name="range">The version range string.</param>
            <returns>Value indicating whether the version is in range.</returns>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.MasksTypeAttribute.MaskedTypeName">
            <summary>
            Gets the assembly-qualified-name of the type to replace.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.MasksTypeAttribute.Version">
            <summary>
            Gets the version replacement string.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Files.StreamExtensions">
            <summary>
            Contains extension methods for <see cref="T:System.IO.Stream"/>.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Files.StreamExtensions.CopyTo(System.IO.Stream,System.IO.Stream)">
            <summary>
            Copies data from one stream to another.
            </summary>
            <param name="source">The stream to copy from.</param>
            <param name="target">The stream to copy to.</param>
        </member>
        <member name="T:Inedo.Lazy`1">
            <summary>
            A lazily-initialized object.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
        </member>
        <member name="M:Inedo.Lazy`1.#ctor(Inedo.Func{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.Lazy`1"/> class.
            </summary>
            <param name="newObj">The new obj.</param>
        </member>
        <member name="M:Inedo.Lazy`1.op_Implicit(Inedo.Lazy{`0})~`0">
            <summary>
            Performs an implicit conversion from <see cref="T:Inedo.Lazy`1"/> to <typeparamref name="T"/>.
            </summary>
            <param name="lazy">The lazy.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Inedo.Lazy`1.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Inedo.Lazy`1.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="T:Inedo.Linq.Enumerable">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for 
            querying objects that implement <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the input typed as <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Empty``1">
            <summary>
            Returns an empty <see cref="T:System.Collections.Generic.IEnumerable`1"/> that has the 
            specified type argument.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)">
            <summary>
            Converts the elements of an <see cref="T:System.Collections.IEnumerable"/> to the 
            specified type.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)">
            <summary>
            Filters the elements of an <see cref="T:System.Collections.IEnumerable"/> based on a specified type.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Range(System.Int32,System.Int32)">
            <summary>
            Generates a sequence of integral numbers within a specified range.
            </summary>
            <param name="start">The value of the first integer in the sequence.</param>
            <param name="count">The number of sequential integers to generate.</param>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Repeat``1(``0,System.Int32)">
            <summary>
            Generates a sequence that contains one repeated value.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Boolean})">
            <summary>
            Filters a sequence of values based on a predicate.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Int32,System.Boolean})">
            <summary>
            Filters a sequence of values based on a predicate. 
            Each element's index is used in the logic of the predicate function.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,``1})">
            <summary>
            Projects each element of a sequence into a new form.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Int32,``1})">
            <summary>
            Projects each element of a sequence into a new form by 
            incorporating the element's index.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
            <summary>
            Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1"/> 
            and flattens the resulting sequences into one sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
            <summary>
            Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1"/>, 
            and flattens the resulting sequences into one sequence. The 
            index of each source element is used in the projected form of 
            that element.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Collections.Generic.IEnumerable{``1}},Inedo.Func{``0,``1,``2})">
            <summary>
            Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1"/>, 
            flattens the resulting sequences into one sequence, and invokes 
            a result selector function on each element therein.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},Inedo.Func{``0,``1,``2})">
            <summary>
            Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1"/>, 
            flattens the resulting sequences into one sequence, and invokes 
            a result selector function on each element therein. The index of 
            each source element is used in the intermediate projected form 
            of that element.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Boolean})">
            <summary>
            Returns elements from a sequence as long as a specified condition is true.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Int32,System.Boolean})">
            <summary>
            Returns elements from a sequence as long as a specified condition is true.
            The element's index is used in the logic of the predicate function.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Returns a specified number of contiguous elements from the start 
            of a sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.FirstImpl``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0})">
            <summary>
            Base implementation of First operator.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the first element of a sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Boolean})">
            <summary>
            Returns the first element in a sequence that satisfies a specified condition.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the first element of a sequence, or a default value if 
            the sequence contains no elements.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Boolean})">
            <summary>
            Returns the first element of the sequence that satisfies a 
            condition or a default value if no such element is found.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.LastImpl``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0})">
            <summary>
            Base implementation of Last operator.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the last element of a sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Boolean})">
            <summary>
            Returns the last element of a sequence that satisfies a 
            specified condition.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the last element of a sequence, or a default value if 
            the sequence contains no elements.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Boolean})">
            <summary>
            Returns the last element of a sequence that satisfies a 
            condition or a default value if no such element is found.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.SingleImpl``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0})">
            <summary>
            Base implementation of Single operator.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the only element of a sequence, and throws an exception 
            if there is not exactly one element in the sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Boolean})">
            <summary>
            Returns the only element of a sequence that satisfies a 
            specified condition, and throws an exception if more than one 
            such element exists.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the only element of a sequence, or a default value if 
            the sequence is empty; this method throws an exception if there 
            is more than one element in the sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Boolean})">
            <summary>
            Returns the only element of a sequence that satisfies a 
            specified condition or a default value if no such element 
            exists; this method throws an exception if more than one element 
            satisfies the condition.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Returns the element at a specified index in a sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Returns the element at a specified index in a sequence or a 
            default value if the index is out of range.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Inverts the order of the elements in a sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Boolean})">
            <summary>
            Bypasses elements in a sequence as long as a specified condition 
            is true and then returns the remaining elements.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Int32,System.Boolean})">
            <summary>
            Bypasses elements in a sequence as long as a specified condition 
            is true and then returns the remaining elements. The element's 
            index is used in the logic of the predicate function.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Bypasses a specified number of elements in a sequence and then 
            returns the remaining elements.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the number of elements in a sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Boolean})">
            <summary>
            Returns a number that represents how many elements in the 
            specified sequence satisfy a condition.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns an <see cref="T:System.Int64"/> that represents the total number 
            of elements in a sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Boolean})">
            <summary>
            Returns an <see cref="T:System.Int64"/> that represents how many elements 
            in a sequence satisfy a condition.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Concatenates two sequences.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.List`1"/> from an <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates an array from an <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns distinct elements from a sequence by using the default 
            equality comparer to compare values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Returns distinct elements from a sequence by using a specified 
            <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> to compare values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,``1})">
            <summary>
            Creates a <see cref="T:Inedo.Linq.Lookup`2"/> from an 
            <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to a specified key 
            selector function.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Creates a <see cref="T:Inedo.Linq.Lookup`2"/> from an 
            <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to a specified key 
            selector function and a key comparer.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,``1},Inedo.Func{``0,``2})">
            <summary>
            Creates a <see cref="T:Inedo.Linq.Lookup`2"/> from an 
            <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to specified key 
            and element selector functions.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,``1},Inedo.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Creates a <see cref="T:Inedo.Linq.Lookup`2"/> from an 
            <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to a specified key 
            selector function, a comparer and an element selector function.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,``1})">
            <summary>
            Groups the elements of a sequence according to a specified key 
            selector function.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Groups the elements of a sequence according to a specified key 
            selector function and compares the keys by using a specified 
            comparer.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,``1},Inedo.Func{``0,``2})">
            <summary>
            Groups the elements of a sequence according to a specified key 
            selector function and projects the elements for each group by 
            using a specified function.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,``1},Inedo.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Groups the elements of a sequence according to a specified key 
            selector function and creates a result value from each group and 
            its key.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,``1},Inedo.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
            <summary>
            Groups the elements of a sequence according to a key selector 
            function. The keys are compared by using a comparer and each 
            group's elements are projected by using a specified function.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,``1},Inedo.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Groups the elements of a sequence according to a specified key 
            selector function and creates a result value from each group and 
            its key. The elements of each group are projected by using a 
            specified function.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,``1},Inedo.Func{``0,``2},Inedo.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
            <summary>
            Groups the elements of a sequence according to a specified key 
            selector function and creates a result value from each group and 
            its key. The keys are compared by using a specified comparer.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,``1},Inedo.Func{``0,``2},Inedo.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Groups the elements of a sequence according to a specified key 
            selector function and creates a result value from each group and 
            its key. Key values are compared by using a specified comparer, 
            and the elements of each group are projected by using a 
            specified function.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,``0,``0})">
            <summary>
            Applies an accumulator function over a sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,Inedo.Func{``1,``0,``1})">
            <summary>
            Applies an accumulator function over a sequence. The specified 
            seed value is used as the initial accumulator value.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,Inedo.Func{``1,``0,``1},Inedo.Func{``1,``2})">
            <summary>
            Applies an accumulator function over a sequence. The specified 
            seed value is used as the initial accumulator value, and the 
            specified function is used to select the result value.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Produces the set union of two sequences by using the default 
            equality comparer.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Produces the set union of two sequences by using a specified 
            <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the elements of the specified sequence or the type 
            parameter's default value in a singleton collection if the 
            sequence is empty.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Returns the elements of the specified sequence or the specified 
            value in a singleton collection if the sequence is empty.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Boolean})">
            <summary>
            Determines whether all elements of a sequence satisfy a condition.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Determines whether a sequence contains any elements.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Boolean})">
            <summary>
            Determines whether any element of a sequence satisfies a 
            condition.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Determines whether a sequence contains a specified element by 
            using the default equality comparer.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Determines whether a sequence contains a specified element by 
            using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Determines whether two sequences are equal by comparing the 
            elements by using the default equality comparer for their type.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Determines whether two sequences are equal by comparing their 
            elements by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.MinMaxImpl``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,``0,System.Boolean})">
            <summary>
            Base implementation for Min/Max operator.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.MinMaxImpl``1(System.Collections.Generic.IEnumerable{System.Nullable{``0}},System.Nullable{``0},Inedo.Func{System.Nullable{``0},System.Nullable{``0},System.Boolean})">
            <summary>
            Base implementation for Min/Max operator for nullable types.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the minimum value in a generic sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,``1})">
            <summary>
            Invokes a transform function on each element of a generic 
            sequence and returns the minimum resulting value.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the maximum value in a generic sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,``1})">
            <summary>
            Invokes a transform function on each element of a generic 
            sequence and returns the maximum resulting value.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Renumerable``1(System.Collections.Generic.IEnumerator{``0})">
            <summary>
            Makes an enumerator seen as enumerable once more.
            </summary>
            <remarks>
            The supplied enumerator must have been started. The first element
            returned is the element the enumerator was on when passed in.
            DO NOT use this method if the caller must be a generator. It is
            mostly safe among aggregate operations.
            </remarks>
        </member>
        <member name="M:Inedo.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,``1})">
            <summary>
            Sorts the elements of a sequence in ascending order according to a key.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
            <summary>
            Sorts the elements of a sequence in ascending order by using a 
            specified comparer.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,``1})">
            <summary>
            Sorts the elements of a sequence in descending order according to a key.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
            <summary>
             Sorts the elements of a sequence in descending order by using a 
            specified comparer. 
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.ThenBy``2(Inedo.Linq.IOrderedEnumerable{``0},Inedo.Func{``0,``1})">
            <summary>
            Performs a subsequent ordering of the elements in a sequence in 
            ascending order according to a key.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.ThenBy``2(Inedo.Linq.IOrderedEnumerable{``0},Inedo.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
            <summary>
            Performs a subsequent ordering of the elements in a sequence in 
            ascending order by using a specified comparer.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.ThenByDescending``2(Inedo.Linq.IOrderedEnumerable{``0},Inedo.Func{``0,``1})">
            <summary>
            Performs a subsequent ordering of the elements in a sequence in 
            descending order, according to a key.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.ThenByDescending``2(Inedo.Linq.IOrderedEnumerable{``0},Inedo.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
            <summary>
            Performs a subsequent ordering of the elements in a sequence in 
            descending order by using a specified comparer.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.IntersectExceptImpl``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0},System.Boolean)">
            <summary>
            Base implementation for Intersect and Except operators.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Produces the set intersection of two sequences by using the 
            default equality comparer to compare values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Produces the set intersection of two sequences by using the 
            specified <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> to compare values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Produces the set difference of two sequences by using the 
            default equality comparer to compare values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Produces the set difference of two sequences by using the 
            specified <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> to compare values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,``1})">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.Dictionary`2"/> from an 
            <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to a specified key 
            selector function.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.Dictionary`2"/> from an 
            <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to a specified key 
            selector function and key comparer.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,``1},Inedo.Func{``0,``2})">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.Dictionary`2"/> from an 
            <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to specified key 
            selector and element selector functions.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,``1},Inedo.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.Dictionary`2"/> from an 
            <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to a specified key 
            selector function, a comparer, and an element selector function.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},Inedo.Func{``0,``2},Inedo.Func{``1,``2},Inedo.Func{``0,``1,``3})">
            <summary>
            Correlates the elements of two sequences based on matching keys. 
            The default equality comparer is used to compare keys.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},Inedo.Func{``0,``2},Inedo.Func{``1,``2},Inedo.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
            <summary>
            Correlates the elements of two sequences based on matching keys. 
            The default equality comparer is used to compare keys. A 
            specified <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> is used to compare keys.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},Inedo.Func{``0,``2},Inedo.Func{``1,``2},Inedo.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
            <summary>
            Correlates the elements of two sequences based on equality of 
            keys and groups the results. The default equality comparer is 
            used to compare keys.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},Inedo.Func{``0,``2},Inedo.Func{``1,``2},Inedo.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
            <summary>
            Correlates the elements of two sequences based on equality of 
            keys and groups the results. The default equality comparer is 
            used to compare keys. A specified <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> 
            is used to compare keys.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Computes the sum of a sequence of nullable <see cref="T:System.Int32"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Int32})">
            <summary>
            Computes the sum of a sequence of nullable <see cref="T:System.Int32"/> 
            values that are obtained by invoking a transform function on 
            each element of the input sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Computes the average of a sequence of nullable <see cref="T:System.Int32"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Int32})">
            <summary>
            Computes the average of a sequence of nullable <see cref="T:System.Int32"/> values 
            that are obtained by invoking a transform function on each 
            element of the input sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Int32"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Nullable{System.Int32}})">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Int32"/> 
            values that are obtained by invoking a transform function on 
            each element of the input sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Int32"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Nullable{System.Int32}})">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Int32"/> values 
            that are obtained by invoking a transform function on each 
            element of the input sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Returns the minimum value in a sequence of nullable 
            <see cref="T:System.Int32"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Nullable{System.Int32}})">
            <summary>
            Invokes a transform function on each element of a sequence and 
            returns the minimum nullable <see cref="T:System.Int32"/> value.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Returns the maximum value in a sequence of nullable 
            <see cref="T:System.Int32"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Nullable{System.Int32}})">
            <summary>
            Invokes a transform function on each element of a sequence and 
            returns the maximum nullable <see cref="T:System.Int32"/> value.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Computes the sum of a sequence of nullable <see cref="T:System.Int64"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Int64})">
            <summary>
            Computes the sum of a sequence of nullable <see cref="T:System.Int64"/> 
            values that are obtained by invoking a transform function on 
            each element of the input sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Computes the average of a sequence of nullable <see cref="T:System.Int64"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Int64})">
            <summary>
            Computes the average of a sequence of nullable <see cref="T:System.Int64"/> values 
            that are obtained by invoking a transform function on each 
            element of the input sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Int64"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Nullable{System.Int64}})">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Int64"/> 
            values that are obtained by invoking a transform function on 
            each element of the input sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Int64"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Nullable{System.Int64}})">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Int64"/> values 
            that are obtained by invoking a transform function on each 
            element of the input sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
            <summary>
            Returns the minimum value in a sequence of nullable 
            <see cref="T:System.Int64"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Nullable{System.Int64}})">
            <summary>
            Invokes a transform function on each element of a sequence and 
            returns the minimum nullable <see cref="T:System.Int64"/> value.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
            <summary>
            Returns the maximum value in a sequence of nullable 
            <see cref="T:System.Int64"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Nullable{System.Int64}})">
            <summary>
            Invokes a transform function on each element of a sequence and 
            returns the maximum nullable <see cref="T:System.Int64"/> value.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})">
            <summary>
            Computes the sum of a sequence of nullable <see cref="T:System.Single"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Single})">
            <summary>
            Computes the sum of a sequence of nullable <see cref="T:System.Single"/> 
            values that are obtained by invoking a transform function on 
            each element of the input sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})">
            <summary>
            Computes the average of a sequence of nullable <see cref="T:System.Single"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Single})">
            <summary>
            Computes the average of a sequence of nullable <see cref="T:System.Single"/> values 
            that are obtained by invoking a transform function on each 
            element of the input sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Single"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Nullable{System.Single}})">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Single"/> 
            values that are obtained by invoking a transform function on 
            each element of the input sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Single"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Nullable{System.Single}})">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Single"/> values 
            that are obtained by invoking a transform function on each 
            element of the input sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
            <summary>
            Returns the minimum value in a sequence of nullable 
            <see cref="T:System.Single"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Nullable{System.Single}})">
            <summary>
            Invokes a transform function on each element of a sequence and 
            returns the minimum nullable <see cref="T:System.Single"/> value.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
            <summary>
            Returns the maximum value in a sequence of nullable 
            <see cref="T:System.Single"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Nullable{System.Single}})">
            <summary>
            Invokes a transform function on each element of a sequence and 
            returns the maximum nullable <see cref="T:System.Single"/> value.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Computes the sum of a sequence of nullable <see cref="T:System.Double"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Double})">
            <summary>
            Computes the sum of a sequence of nullable <see cref="T:System.Double"/> 
            values that are obtained by invoking a transform function on 
            each element of the input sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Computes the average of a sequence of nullable <see cref="T:System.Double"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Double})">
            <summary>
            Computes the average of a sequence of nullable <see cref="T:System.Double"/> values 
            that are obtained by invoking a transform function on each 
            element of the input sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Double"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Nullable{System.Double}})">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Double"/> 
            values that are obtained by invoking a transform function on 
            each element of the input sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Double"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Nullable{System.Double}})">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Double"/> values 
            that are obtained by invoking a transform function on each 
            element of the input sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
            <summary>
            Returns the minimum value in a sequence of nullable 
            <see cref="T:System.Double"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Nullable{System.Double}})">
            <summary>
            Invokes a transform function on each element of a sequence and 
            returns the minimum nullable <see cref="T:System.Double"/> value.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
            <summary>
            Returns the maximum value in a sequence of nullable 
            <see cref="T:System.Double"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Nullable{System.Double}})">
            <summary>
            Invokes a transform function on each element of a sequence and 
            returns the maximum nullable <see cref="T:System.Double"/> value.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})">
            <summary>
            Computes the sum of a sequence of nullable <see cref="T:System.Decimal"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Decimal})">
            <summary>
            Computes the sum of a sequence of nullable <see cref="T:System.Decimal"/> 
            values that are obtained by invoking a transform function on 
            each element of the input sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})">
            <summary>
            Computes the average of a sequence of nullable <see cref="T:System.Decimal"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Decimal})">
            <summary>
            Computes the average of a sequence of nullable <see cref="T:System.Decimal"/> values 
            that are obtained by invoking a transform function on each 
            element of the input sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Decimal"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Nullable{System.Decimal}})">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Decimal"/> 
            values that are obtained by invoking a transform function on 
            each element of the input sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Decimal"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Nullable{System.Decimal}})">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Decimal"/> values 
            that are obtained by invoking a transform function on each 
            element of the input sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
            <summary>
            Returns the minimum value in a sequence of nullable 
            <see cref="T:System.Decimal"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Nullable{System.Decimal}})">
            <summary>
            Invokes a transform function on each element of a sequence and 
            returns the minimum nullable <see cref="T:System.Decimal"/> value.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
            <summary>
            Returns the maximum value in a sequence of nullable 
            <see cref="T:System.Decimal"/> values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},Inedo.Func{``0,System.Nullable{System.Decimal}})">
            <summary>
            Invokes a transform function on each element of a sequence and 
            returns the maximum nullable <see cref="T:System.Decimal"/> value.
            </summary>
        </member>
        <member name="T:Inedo.Linq.IGrouping`2">
            <summary>
            Represents a collection of objects that have a common key.
            </summary>
        </member>
        <member name="P:Inedo.Linq.IGrouping`2.Key">
            <summary>
            Gets the key of the <see cref="T:Inedo.Linq.IGrouping`2"/>.
            </summary>
        </member>
        <member name="T:Inedo.Linq.ILookup`2">
            <summary>
            Defines an indexer, size property, and Boolean search method for 
            data structures that map keys to <see cref="T:System.Collections.Generic.IEnumerable`1"/> 
            sequences of values.
            </summary>
        </member>
        <member name="T:LinqBridge.DelegatingComparer`1">
            <remarks>
            This type is not intended to be used directly from user code.
            It may be removed or changed in a future version without notice.
            </remarks>
        </member>
        <member name="T:LinqBridge.Key`1">
            <remarks>
            This type is not intended to be used directly from user code.
            It may be removed or changed in a future version without notice.
            </remarks>
        </member>
        <member name="T:LinqBridge.KeyComparer`1">
            <remarks>
            This type is not intended to be used directly from user code.
            It may be removed or changed in a future version without notice.
            </remarks>
        </member>
        <member name="T:Inedo.Linq.IOrderedEnumerable`1">
            <summary>
            Represents a sorted sequence.
            </summary>
        </member>
        <member name="M:Inedo.Linq.IOrderedEnumerable`1.CreateOrderedEnumerable``1(Inedo.Func{`0,``0},System.Collections.Generic.IComparer{``0},System.Boolean)">
            <summary>
            Performs a subsequent ordering on the elements of an 
            <see cref="T:Inedo.Linq.IOrderedEnumerable`1"/> according to a key.
            </summary>
        </member>
        <member name="T:Inedo.Linq.Lookup`2">
            <summary>
            Represents a collection of keys each mapped to one or more values.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Lookup`2.Contains(`0)">
            <summary>
            Determines whether a specified key is in the <see cref="T:Inedo.Linq.Lookup`2"/>.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Lookup`2.ApplyResultSelector``1(Inedo.Func{`0,System.Collections.Generic.IEnumerable{`1},``0})">
            <summary>
            Applies a transform function to each key and its associated 
            values and returns the results.
            </summary>
        </member>
        <member name="M:Inedo.Linq.Lookup`2.GetEnumerator">
            <summary>
            Returns a generic enumerator that iterates through the <see cref="T:Inedo.Linq.Lookup`2"/>.
            </summary>
        </member>
        <member name="P:Inedo.Linq.Lookup`2.Count">
            <summary>
            Gets the number of key/value collection pairs in the <see cref="T:Inedo.Linq.Lookup`2"/>.
            </summary>
        </member>
        <member name="P:Inedo.Linq.Lookup`2.Item(`0)">
            <summary>
            Gets the collection of values indexed by the specified key.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Util">
            <summary>
            A collection of static utility methods.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.AreArraysEqual``1(``0[],``0[])">
            <summary>
            Returns true if the specified arrays are the same length and have equal corresponding values; returns false otherwise or if either argument is null.
            </summary>
            <param name="a">The first array.</param>
            <param name="b">The second array.</param>
            <typeparam name="T">The type of they array element.</typeparam>
            <returns>True if the specified arrays are the same length and have equal corresponding values; false otherwise.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.NullIf(System.Object,System.Object)">
            <summary>
            Returns a null reference if the two specified parameters are equal (or if either are null or DBNull.Value); otherwise, returns the first parameter.
            </summary>
            <param name="a">The first parameter.</param>
            <param name="b">The second parameter.</param>
            <returns>Null reference if the two specified parameters are equal (or if either are null or DBNull.Value); otherwise, the first parameter.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.NullIf(System.String,System.String)">
            <summary>
            Returns a null reference if the two specified parameters are equal (or if either are null); otherwise, returns the first parameter.
            </summary>
            <param name="a">The first parameter.</param>
            <param name="b">The second parameter.</param>
            <returns>Null reference if the two specified parameters are equal (or if either are null); otherwise, the first parameter.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.NullIf``1(System.Nullable{``0},System.Nullable{``0})">
            <summary>
            Returns a null reference if the two specified parameters are equal (or if either are null); otherwise, returns the first parameter.
            </summary>
            <param name="a">The first parameter.</param>
            <param name="b">The second parameter.</param>
            <typeparam name="T">The type of parameter to compare.</typeparam>
            <returns>Null reference if the two specified parameters are equal (or if either are null); otherwise, the first parameter.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.NullIf``1(``0,System.Nullable{``0})">
            <summary>
            Returns a null reference if the two specified parameters are equal (or if either are null); otherwise, returns the first parameter.
            </summary>
            <param name="a">The first parameter.</param>
            <param name="b">The second parameter.</param>
            <typeparam name="T">The type of parameter to compare.</typeparam>
            <returns>Null reference if the two specified parameters are equal (or if either are null); otherwise, the first parameter.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Coalesce(System.Object[])">
            <summary>
            Returns the first non-null or non-DBNull.Value expression among its arguments.
            </summary>
            <param name="args">Objects to test for null.</param>
            <returns>First non-null or non-DBNull.Value value.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.CoalesceStr(System.Object[])">
            <summary>
            Returns the first non-null and non-string.Empty expression among its arguments.
            </summary>
            <param name="args">Objects to convert to strings and test for null or empty.</param>
            <returns>First non-null and non-string.Empty value.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Decode``1(System.Object,System.Object[])">
            <summary>
            Decodes an object mapping in a similar fashion to the PLSQL Decode function.
            </summary>
            <typeparam name="TRet">Type of value to return.</typeparam>
            <param name="value">The value to compare.</param>
            <param name="args">See remarks.</param>
            <remarks>
            The syntax for the Decode function is:
              Decode( value, search, result [, search, result]... [, default] )
              expression is the value to compare.
              search is the value that is compared against expression.
              result is the value returned, if expression is equal to search.
              default is optional. If no matches are found, the decode will return default. If default is omitted, then the decode statement will return null (if no matches are found)
            </remarks>
            <returns>First matching result. See remarks for details.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Decode``2(``1,System.Object[])">
            <summary>
            Decodes an object mapping in a similar fashion to the PLSQL Decode function.
            </summary>
            <typeparam name="TRet">Type of value to return.</typeparam>
            <typeparam name="TCode">Type of value to compare.</typeparam>
            <param name="value">The value to compare.</param>
            <param name="args">See remarks.</param>
            <remarks>
            The syntax for the Decode function is:
              Decode( value, search, result [, search, result]... [, default] )
              expression is the value to compare.
              search is the value that is compared against expression.
              result is the value returned, if expression is equal to search.
              default is optional. If no matches are found, the decode will return default. If default is omitted, then the decode statement will return null (if no matches are found)
            </remarks>
            <returns>First matching result. See remarks for details.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.ConcatN(System.Object[])">
            <summary>
            Returns String.Empty when one of the arguments is null or DBNull.Value; otherwise, returns a concatenation of the arguments.
            </summary>
            <param name="args">Arguments to concatenate.</param>
            <returns>Concatenated string or String.Empty if an argument is null or DBNull.Value.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.ConcatNE(System.Object[])">
            <summary>
            Returns String.Empty when one of the arguments is null, DBNull.Value, or String.Empty; otherwise, returns a concatenation of the arguments.
            </summary>
            <param name="args">Arguments to concatenate.</param>
            <returns>Concatenated string or String.Empty if an argument is null, DBNull.Value, or String.Empty.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.In(System.Object,System.Object[])">
            <summary>
            Returns true if an object is contained in a set.
            </summary>
            <param name="compare">Object to search for.</param>
            <param name="args">Set of object to search.</param>
            <returns>True if object was found; otherwise false.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.In``1(``0,``0[])">
            <summary>
            Returns true if an object is contained in a set.
            </summary>
            <param name="compare">Object to search for.</param>
            <param name="args">Set of object to search.</param>
            <typeparam name="T">The type of the object being compared</typeparam>
            <returns>True if object was found; otherwise false.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Determines whether the specified enumerable contains a given object.
            </summary>
            <param name="container">The enumerable.</param>
            <param name="obj">The object to test for.</param>
            <typeparam name="T">The type of object to test for.</typeparam>
            <returns>
            	<c>true</c> if the object is found in the container; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Agents">
            <summary>
            Contains methods for working with Agents.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Agents.CreateLegacyWrap(Inedo.BuildMaster.Extensibility.Agents.AgentBase)">
            <summary>
            Creates the legacy wrap.
            </summary>
            <param name="agent">The agent.</param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Agents.CreateAgentFromId(System.Int32)">
            <summary>
            Creates the agent from id.
            </summary>
            <param name="agentId">The agent id.</param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Agents.GetRequiredAgentInterfaces(System.Type)">
            <summary>
            Returns a collection of the interfaces that an agent must implement.
            </summary>
            <param name="type">Interface types which the action or provider requires.</param>
            <returns>Collection of the interface types which the action or provider requires.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Artifacts">
            <summary>
            Contains methods for working with artifacts.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Artifacts.GetArtifactPath(System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the relative path to an artifact file from the Artifact Base Path.
            </summary>
            <param name="applicationId">ID of the application which owns the artifact.</param>
            <param name="releaseNumber">Release number in which the artifact was created.</param>
            <param name="buildNumber">Build number in which the artifact was created.</param>
            <param name="deployableId">ID of the deployable which owns the artifact.</param>
            <param name="artifactName">Name of the artifact.</param>
            <returns>Path to the artifact file relative to the artifact base path.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Artifacts.GetFullArtifactPath(System.String,System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the absolute path to an artifact file.
            </summary>
            <param name="artifactBasePath">Absolute path of the artifact library.</param>
            <param name="applicationId">ID of the application which owns the artifact.</param>
            <param name="releaseNumber">Release number in which the artifact was created.</param>
            <param name="buildNumber">Build number in which the artifact was created.</param>
            <param name="deployableId">ID of the deployable which owns the artifact.</param>
            <param name="artifactName">Name of the artifact.</param>
            <returns>Path to the artifact file.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Util.JavaScript">
            <summary>
            Contains JavaScript-related utility methods.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.JavaScript.WriteJson(System.IO.TextWriter,System.Object)">
            <summary>
            Writes an object as JSON-serialized data to a <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.IO.TextWriter"/> used to write the JSON data.</param>
            <param name="obj">The object to serialize.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.JavaScript.ToJson(System.Object)">
            <summary>
            Returns a JSON-format string of a serialized object.
            </summary>
            <param name="obj">The object to serialize.</param>
            <returns>JSON-formatted string representation of the object.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.JavaScript.JsonEncode(System.String)">
            <summary>
            Escapes characters necessary to encode the string in JSON format.
            </summary>
            <param name="s">String to encode.</param>
            <returns>Encoded string.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.JavaScript.Literal(System.String)">
            <summary>
            Returns an instance representing literal JavaScript.
            </summary>
            <param name="s">The literal.</param>
            <returns>Instance representing the literal.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Util.JavaScript.JavaScriptLiteral">
            <summary>
            Represents literal JavaScript text.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.JavaScript.JavaScriptLiteral.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Util.JavaScript.JavaScriptLiteral"/> class.
            </summary>
            <param name="literal">The literal.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.JavaScript.JavaScriptLiteral.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Inedo.BuildMaster.Util.JavaScript.JavaScriptLiteral.LiteralText">
            <summary>
            Gets the literal text.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Path2">
            <summary>
            Contains static path-related utility methods.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Path2.GetDirectoryName(System.String)">
            <summary>
            Same as <see cref="M:System.IO.Path.GetDirectoryName(System.String)"/>, but preserves the directory separator character.
            </summary>
            <param name="path">The path of a file or directory.</param>
            <returns>
            A System.String containing directory information for path, or null if path
            denotes a root directory, is the empty string (""), or is null.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Path2.GetFileName(System.String)">
            <summary>
            Same as <see cref="M:System.IO.Path.GetFileName(System.String)"/>, but preserves the directory separator character.
            </summary>
            <param name="path">The path string from which to obtain the file name and extension.</param>
            <returns>
            A System.String consisting of the characters after the last directory character in path.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Path2.Combine(System.String,System.String)">
            <summary>
            Same as <see cref="M:System.IO.Path.Combine(System.String,System.String)"/>, but attempts to preserve the directory separator character.
            </summary>
            <param name="path1">The first path.</param>
            <param name="path2">The second path.</param>
            <returns>
            A string containing the combined paths. If one of the specified paths is
            a zero-length string, this method returns the other path. If path2 contains
            an absolute path, this method returns path2.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Path2.Combine(System.Char,System.String,System.String)">
            <summary>
            Same as <see cref="M:System.IO.Path.Combine(System.String,System.String)"/>, but specifying the directory separator character.
            </summary>
            <param name="separator">The directory separator character.</param>
            <param name="path1">The first path.</param>
            <param name="path2">The second path.</param>
            <returns>
            A string containing the combined paths. If one of the specified paths is
            a zero-length string, this method returns the other path. If path2 contains
            an absolute path, this method returns path2.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Path2.DetectDirectorySeparator(System.String)">
            <summary>
            Returns the best guess for the canonical directory separator in a path.
            </summary>
            <param name="path">The path.</param>
            <returns>Best guess for the path's directory separator.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Predicates">
            <summary>
            Contains static utility methods for working with predicates.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Predicates.FromPath(Inedo.BuildMaster.Extensibility.Predicates.GroupPredicateBase,System.String)">
            <summary>
            Finds the predicate nested within a <see cref="T:Inedo.BuildMaster.Extensibility.Predicates.GroupPredicateBase"/> object.
            </summary>
            <param name="startPredicate">The predicate to search within.</param>
            <param name="predicatePath">A path in the format of indexes, separated by commas.</param>
            <returns>The predicate at the specified path.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Predicates.AddTo(Inedo.BuildMaster.Extensibility.Predicates.GroupPredicateBase,Inedo.BuildMaster.Extensibility.Predicates.PredicateBase,System.String)">
            <summary>
            Adds a predicate to a <see cref="T:Inedo.BuildMaster.Extensibility.Predicates.GroupPredicateBase"/> object.
            </summary>
            <param name="startPredicate"><see cref="T:Inedo.BuildMaster.Extensibility.Predicates.GroupPredicateBase"/> to add the predicate to.</param>
            <param name="newPredicate">Predicate to add to the group.</param>
            <param name="predicatePath">Path of the new predicate.</param>
            <returns>New <see cref="T:Inedo.BuildMaster.Extensibility.Predicates.GroupPredicateBase"/> containing the predicates.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Predicates.SetAt(Inedo.BuildMaster.Extensibility.Predicates.GroupPredicateBase,Inedo.BuildMaster.Extensibility.Predicates.PredicateBase,System.String)">
            <summary>
            Sets the predicate in a <see cref="T:Inedo.BuildMaster.Extensibility.Predicates.GroupPredicateBase"/> object.
            </summary>
            <param name="startPredicate"><see cref="T:Inedo.BuildMaster.Extensibility.Predicates.GroupPredicateBase"/> containing the predicate to set.</param>
            <param name="toUpdate">The new predicate to set.</param>
            <param name="predicatePath">Path of predicate to set.</param>
            <returns>New <see cref="T:Inedo.BuildMaster.Extensibility.Predicates.GroupPredicateBase"/> containing the resulting predicates.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Predicates.RemoveAt(Inedo.BuildMaster.Extensibility.Predicates.GroupPredicateBase,System.String)">
            <summary>
            Removes a predicate from a <see cref="T:Inedo.BuildMaster.Extensibility.Predicates.GroupPredicateBase"/> object.
            </summary>
            <param name="startPredicate"><see cref="T:Inedo.BuildMaster.Extensibility.Predicates.GroupPredicateBase"/> to remove a predicate from.</param>
            <param name="predicatePath">The path of the predicate to remove.</param>
            <returns>New <see cref="T:Inedo.BuildMaster.Extensibility.Predicates.GroupPredicateBase"/> with the predicate removed.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Recipes">
            <summary>
            Contains static utility methods used by recipes for easier application setup and creation of deployment plans.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Recipes.CreateConfigurationFile(System.Int32,System.String)">
            <summary>
            Creates a configuration file whose name is represented by the <paramref name="filePath"/> argument.
            </summary>
            <param name="deployableId">The deployable id.</param>
            <param name="filePath">The file path.</param>
            <returns>The ID of the created configuration file.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Recipes.CreateConfigurationFileInstance(System.Int32,System.String,System.Int32)">
            <summary>
            Creates a configuration file instance and associates it with an environment..
            </summary>
            <param name="configFileId">The config file id.</param>
            <param name="instanceName">Name of the instance.</param>
            <param name="environmentId">The environment id.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Recipes.CreateConfigurationFileVersions(System.Int32,System.String,System.Collections.Generic.IEnumerable{System.String},System.Byte[])">
            <summary>
            Creates a configuration file version for each instance name provided and associates them with the specified configuration file.
            </summary>
            <param name="configFileId">The config file id.</param>
            <param name="releaseNumber">The release number.</param>
            <param name="instanceNames">The instance names.</param>
            <param name="fileBytes">The file bytes.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Recipes.CreatePlan(System.Int32,System.Nullable{System.Int32},System.Int32,System.String,System.String)">
            <summary>
            Creates a plan action group (i.e. a single instance of an action group).
            </summary>
            <param name="applicationId">The application id.</param>
            <param name="deployableId">The deployable id.</param>
            <param name="environmentId">The environment id.</param>
            <param name="planName">Name of the plan.</param>
            <param name="planDescription">The plan description.</param>
            <returns>The ID of the action group, suitable for use with the AddAction method.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Recipes.CreatePlan(System.Int32,System.Nullable{System.Int32},System.Int32,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Creates a plan action group (i.e. a single instance of an action group).
            </summary>
            <param name="applicationId">The application id.</param>
            <param name="deployableId">The deployable id.</param>
            <param name="environmentId">The environment id.</param>
            <param name="planSeq">The plan seq.</param>
            <param name="planName">Name of the plan.</param>
            <param name="planDescription">The plan description.</param>
            <returns>The ID of the action group, suitable for use with the AddAction method.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Recipes.AddAction(System.Int32,Inedo.BuildMaster.Extensibility.Actions.ActionBase)">
            <summary>
            Adds an action that runs locally if it's a remote action, or does not specify a server.
            </summary>
            <param name="planId">The plan id.</param>
            <param name="action">The action.</param>
            <returns>The action sequence of the created action.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Recipes.AddAction(System.Int32,System.Nullable{System.Int32},Inedo.BuildMaster.Extensibility.Actions.ActionBase)">
            <summary>
            Adds an action to be run on a remote server.
            </summary>
            <param name="planId">The plan id.</param>
            <param name="serverId">The server id.</param>
            <param name="action">The action.</param>
            <returns>The action sequence of the created action.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Recipes.AddAction(System.Int32,System.Nullable{System.Int32},Inedo.BuildMaster.Extensibility.Actions.ActionBase,System.String)">
            <summary>
            Adds an action with a custom description.
            </summary>
            <param name="planId">The plan id.</param>
            <param name="serverId">The server id.</param>
            <param name="action">The action.</param>
            <param name="description">The description.</param>
            <returns>The action sequence of the created action.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Recipes.CreateDeployable(System.Int32,System.String)">
            <summary>
            Creates a deployable.
            </summary>
            <param name="applicationId">The application id.</param>
            <param name="deployableName">Name of the deployable.</param>
            <returns>The ID of the created deployable.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Recipes.AddDummyAction(System.Int32,System.String)">
            <summary>
            Adds a sleep action with a custom description.
            </summary>
            <param name="planId">The plan id.</param>
            <param name="description">The description.</param>
            <returns>The action sequence of the created action.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Recipes.CreateRelease(System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Creates a release and includes a single deployable with a specified <see cref="T:Inedo.BuildMaster.Data.Domains.DeployableInclusionTypes"/>.
            </summary>
            <param name="releaseNumber">The release number.</param>
            <param name="applicationId">The application id.</param>
            <param name="deployableId">The deployable id.</param>
            <param name="workflowId">The workflow id.</param>
            <param name="deployableInclusionTypeCode">The deployable type code.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Recipes.CreateRelease(System.String,System.Int32,System.Collections.Generic.IEnumerable{System.Int32},System.Int32)">
            <summary>
            Creates a release and includes multiple deployables with that release.
            </summary>
            <param name="releaseNumber">The release number.</param>
            <param name="applicationId">The application id.</param>
            <param name="deployableIds">The deployable ids.</param>
            <param name="workflowId">The workflow id.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Recipes.CreateSetupRelease(System.Int32,System.String,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Creates a setup release.
            </summary>
            <param name="applicationId">The application id.</param>
            <param name="releaseNumberScheme">The release number scheme.</param>
            <param name="workflowId">The workflow id.</param>
            <param name="includedDeployableIds">The included deployable ids.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Recipes.BuildDeployablesXml(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Builds a deployables XML string suitable for the Releases_CreateOrUpdateRelease procedure that includes 
            the specified deployables in the release.
            </summary>
            <param name="deployableIds">The deployable ids.</param>
            <returns>A string for use in the Releases_CreateOrUpdateRelease stored procedure.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Recipes.CreateNewApplicationGroup(System.String)">
            <summary>
            Creates a new application group.
            </summary>
            <param name="applicationGroupName">Name of the application group.</param>
            <returns>The ID of the created application group.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Recipes.CreateNewApplication(System.String,System.String,System.String,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Creates a new application.
            </summary>
            <param name="applicationName">Name of the application.</param>
            <param name="releaseNumberScheme">The release number scheme.</param>
            <param name="buildNumberScheme">The build number scheme.</param>
            <param name="autoIncrementReleaseNumber">if set to <c>true</c> [auto increment release number].</param>
            <param name="applicationGroupId">The application group id.</param>
            <returns>The ID of the created application.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Recipes.CreateWorkflow(System.Int32)">
            <summary>
            Creates the workflow.
            </summary>
            <param name="applicationId">The application id.</param>
            <returns>The ID of the created workflow.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Recipes.CreateWorkflow(System.Int32,System.String)">
            <summary>
            Creates a workflow.
            </summary>
            <param name="applicationId">The application id.</param>
            <param name="workflowName">Name of the workflow.</param>
            <returns>The ID of the created workflow.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Recipes.CreateWorkflowStep(System.Int32,System.Int32)">
            <summary>
            Creates a workflow step.
            </summary>
            <param name="workflowId">The workflow id.</param>
            <param name="environmentId">The environment id.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Recipes.Munging">
            <summary>
            Contains static utility methods used primarily to create instances of extensible types whose
            property values are set to match those of an anonymous type.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Recipes.Munging.InvokeMethod(System.String,System.String,System.Object[])">
            <summary>
            Invokes a method on the specified type.
            </summary>
            <param name="assemblyQualifiedTypeName">Name of the assembly qualified type.</param>
            <param name="methodName">Name of the method.</param>
            <param name="args">Arguments to the method.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Recipes.Munging.GetPropertyValue(System.Object,System.String)">
            <summary>
            Gets the value of a property on the specified object.
            </summary>
            <param name="obj">The object.</param>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Recipes.Munging.MungeInstance(System.String,System.Object)">
            <summary>
            Creates an instance of the specified assembly-qualified type name with matching property values
            to the anonymous argument <paramref name="objToMunge"/>.
            </summary>
            <param name="assemblyQualifiedTypeName">Name of the assembly qualified type.</param>
            <param name="objToMunge">The obj to munge.</param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Recipes.Munging.MungeCoreExAction(System.String,System.Object)">
            <summary>
            Creates an instance of an <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionBase"/>
            with matching property values to the anonymous argument <paramref name="objToMunge"/>.
            </summary>
            <param name="partialTypeName">Partial name of the type of the action relative to the 
            Inedo.BuildMaster.Extensibility.Actions namespace.</param>
            <param name="objToMunge">The object whose property values will be set on the action.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Recipes.Munging.MungeCoreExVariable(System.String,System.Object)">
            <summary>
            Creates an instance of a <see cref="T:Inedo.BuildMaster.Extensibility.Variables.VariableBase"/>
            with matching property values to the anonymous argument <paramref name="objToMunge"/>.
            </summary>
            <param name="partialTypeName">Partial name of the type of the variable relative to the 
            Inedo.BuildMaster.Extensibility.Variables namespace.</param>
            <param name="objToMunge">The object whose property values will be set on the variable.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Recipes.Munging.MungeCoreExPredicate(System.String,System.Object)">
            <summary>
            Creates an instance of a <see cref="T:Inedo.BuildMaster.Extensibility.Predicates.PredicateBase"/>
            with matching property values to the anonymous argument <paramref name="objToMunge"/>.
            </summary>
            <param name="partialTypeName">Partial name of the type of the predicate relative to the 
            Inedo.BuildMaster.Extensibility.Predicates namespace.</param>
            <param name="objToMunge">The object whose property values will be set on the predicate.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Reflection">
            <summary>
            A collection of static utility methods to perform reflection related tasks.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Reflection.GetGenericArgumentsFromAncestor(System.Type,System.Type)">
            <summary>
            Returns the generic arguments from an ancestor with the specified generic type definition from the specified type, or an empty type array if the 
            type's ancestors do not implement the specified generic type definition.
            </summary>
            <param name="type">Type to inspect.</param>
            <param name="genericTypeDefinition">A generic type definition.</param>
            <returns>A type arguments array or an empty array.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Reflection.ImplementsInterface(System.Type,System.Type)">
            <summary>
            Returns a value indicating whether a type implements an interface.
            </summary>
            <param name="toCheck">The type to check.</param>
            <param name="iface">The interface to search for.</param>
            <returns>True if the type implements the interface; otherwise false.</returns>
            <exception cref="T:System.ArgumentNullException">An argument is null.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="iface"/> parameter is not an interface type.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Reflection.GetCustomAttribute``1(System.Reflection.ICustomAttributeProvider)">
            <summary>
            Returns an attribute (typed <typeparamref name="T"/>) if it is present on a member.
            </summary>
            <typeparam name="T">Type of attribute to return.</typeparam>
            <param name="member">Member to search for the attribute on.</param>
            <returns>Attribute if it was found; otherwise null.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Reflection.GetInnerTypeIfNullable(System.Type)">
            <summary>
            Gets the inner type if nullable.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Reflection.GetCustomAttributes``1(System.Reflection.ICustomAttributeProvider)">
            <summary>
            Returns all instances of an attribute type if it is present on a member.
            </summary>
            <typeparam name="T">Type fo the attribute to return.</typeparam>
            <param name="member">Member to search for the attributes on.</param>
            <returns>Attributes that were found.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Reflection.GetBaseTypes(System.Type)">
            <summary>
            Returns an enumeration of the specified type and all its base types.
            </summary>
            <param name="type">The type to enumerate.</param>
            <returns>The specified type and all its base types.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Reflection.GetMethodWithSignature(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Returns the first matching method with a signature compatible to the specified argument types.
            </summary>
            <param name="type">The object type which contains the method.</param>
            <param name="methodName">The name of the method.</param>
            <param name="argTypes">The types of the arguments supplied to the method.</param>
            <returns>First matching <see cref="T:System.Reflection.MethodInfo"/> or null if no matching method was found.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Providers">
            <summary>
            A static class of utility methods to assist with managing <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ProviderBase"/> classes.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Providers.CreateProviderFromId(System.Int32)">
            <summary>
            Returns a provider created using its ID.
            </summary>
            <param name="providerId">The provider's ID.</param>
            <returns>Newly-created provider.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Providers.CreateProviderFromId(System.Int32,System.Boolean)">
            <summary>
            Returns a provider created using its ID.
            </summary>
            <param name="providerId">The provider's ID.</param>
            <param name="createProxy">Value indicating whether a proxy should be created if the provider is on a remote server.</param>
            <returns>Newly-created provider.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Providers.GetProviderTypeCode(System.Type)">
            <summary>
            Returns a provider created based on its <see cref="T:System.Type"/>.
            </summary>
            <param name="providerType">The type of the provider.</param>
            <returns>Newly-created provider.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Providers.GetProviderTypeCode(System.Type,System.Boolean)">
            <summary>
            Returns a provider created based on its <see cref="T:System.Type"/>.
            </summary>
            <param name="providerType">The type of the provider.</param>
            <param name="throwException">Value indicating whether an exception should be thrown if the provider cannot be created.</param>
            <returns>Newly-created provider.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Providers.GetRequiredProviderInterfaces(System.Type)">
            <summary>
            Returns a collection of the interfaces that a provider must implement.
            </summary>
            <param name="type">Interface types which the action requires.</param>
            <returns>Collection of the interface types which the action requires.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Providers.IsLegacyProvider(System.Type)">
            <summary>
            Returns a value indicating whether the provider lists is agent requirements.
            </summary>
            <param name="providerType">The type of the provider.</param>
            <returns>Value indicating whether the provider is legacy.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Providers.ConnectToProvider``1(System.Int32)">
            <summary>
            Establishes a connection to a provider on the default agent.
            </summary>
            <typeparam name="TProvider">Type of the provider.</typeparam>
            <param name="providerId">ID of the provider.</param>
            <returns>Connection to the specified provider on the default server.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Providers.ConnectToProvider``1(System.Int32,System.Int32)">
            <summary>
            Establishes a connection to a provider on a specific agent.
            </summary>
            <typeparam name="TProvider">Type of the provider.</typeparam>
            <param name="providerId">ID of the provider.</param>
            <param name="serverId">ID of the agent.</param>
            <returns>Connection to the specified provider on the specified server.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Providers.ConnectToProvider``1(``0,System.Int32)">
            <summary>
            Establishes a connection to a provider on a specific agent.
            </summary>
            <typeparam name="TProvider">Type of the provider.</typeparam>
            <param name="provider">The provider.</param>
            <param name="serverId">ID of the agent.</param>
            <returns>Connection to the specified provider on the specified server.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Providers.ProviderConnection`1">
            <summary>
            Represents a connection to a provider on an agent.
            </summary>
            <typeparam name="TProvider">The type of the provider.</typeparam>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Providers.ProviderConnection`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Util.Providers.ProviderConnection`1"/> struct.
            </summary>
            <param name="provider">The provider.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Providers.ProviderConnection`1.op_Implicit(Inedo.BuildMaster.Util.Providers.ProviderConnection{`0})~`0">
            <summary>
            Performs an implicit conversion from <see cref="T:Inedo.BuildMaster.Util.Providers.ProviderConnection`1"/> to <typeparamref name="TProvider"/>.
            </summary>
            <param name="connection">The connection.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Providers.ProviderConnection`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Util.Providers.ProviderConnection`1.Agent">
            <summary>
            Gets the <see cref="T:Inedo.BuildMaster.Extensibility.Agents.AgentBase"/> associated with this connection.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Actions">
            <summary>
            Contains methods for working with Actions.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Actions.CanUseProvider(System.Type,System.Type)">
            <summary>
            Validates that the specified provider type can be used for the specifed action type
            </summary>
            <param name="providerType"></param>
            <param name="ActionType"></param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Actions.ValidateProvider(System.Type,System.Type)">
            <summary>
            Validates that the specified provider type can be used for the specifed action type
            </summary>
            <param name="providerType"></param>
            <param name="ActionType"></param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Actions.TryValidateProvider(System.Type,System.Type,System.Boolean)">
            <summary>
            Validates that the specified provider type can be used for the specifed action type
            </summary>
            <param name="providerType">Type of the provider.</param>
            <param name="actionType">Type of the action.</param>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Actions.GetConfigurer``1">
            <summary>
            Returns the extension configurer used for a specific action.
            </summary>
            <typeparam name="TAction">Action whose configurer is returned.</typeparam>
            <returns>Configurer of the action if available; otherwise null.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Actions.GetConfigurer(System.Type)">
            <summary>
            Returns the extension configurer used for a specific action.
            </summary>
            <param name="actionType">Type of the action whose configurer is returned.</param>
            <returns>Configurer of the action if available; otherwise null.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Actions.GetAgentInterfacesRequiredForAction(Inedo.BuildMaster.Extensibility.Actions.ActionBase)">
            <summary>
            Returns the interfaces which must be implemented by an agent before an action is run.
            </summary>
            <param name="action">The action.</param>
            <returns>The interfaces required to be implemented by the agent running the action.</returns>
            <remarks>
            This normally looks at the interfaces specified in the <see cref="T:RequiredInterfaceAttribute"/> attributes
            of the class, but if the Action inherits <see cref="T:ProviderBasedAction&lt;&gt;"/>, it will look at the agent
            intefraces specified there instead. When no agent interfaces are listed as required, the Action is considered
            legacy and <see cref="T:IPersistedObjectExecuter"/> is returned.
            </remarks>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Files">
            <summary>
            A set of static utility methods used to load and compare files.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.ValidateInputPath(System.String)">
            <summary>
            Verifies that a path does not contain any illegal characters.
            </summary>
            <param name="path">Path to verify.</param>
            <exception cref="T:System.ArgumentException">The path contains an illegal character.</exception>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.BuildFileHash(System.String)">
            <summary>
            Returns a hash of a file that can be used to detect file changes.
            </summary>
            <param name="filePath">Path to the file to hash.</param>
            <returns>Hash of the file.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.GetFileEntry(System.String)">
            <summary>
            Returns an <see cref="T:Inedo.BuildMaster.Files.ExtendedFileEntryInfo"/> item for a file at the specified path.
            </summary>
            <param name="path">Path to the file.</param>
            <returns><see cref="T:Inedo.BuildMaster.Files.ExtendedFileEntryInfo"/> of the specified file.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.GetDirectoryEntry(System.String)">
            <summary>
            Returns a <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> item for a specified path.
            </summary>
            <param name="path">The path of the directory.</param>
            <returns><see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> for the specified path.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.GetDirectoryEntry(System.String,System.Exception[]@)">
            <summary>
            Deprecated.
            </summary>
            <param name="path"></param>
            <param name="loadExceptions"></param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.GetDirectoryEntry(System.String,System.Exception[]@,System.Boolean)">
            <summary>
            Deprecated.
            </summary>
            <param name="path"></param>
            <param name="loadExceptions"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.GetDirectoryEntry(System.String,System.String,System.Exception[]@,System.Boolean)">
            <summary>
            Deprecated.
            </summary>
            <param name="rootPathToTrim"></param>
            <param name="path"></param>
            <param name="loadExceptions"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.GetDirectoryEntry(System.String,System.String,System.Exception[]@,System.Boolean,System.Boolean)">
            <summary>
            Deprecated.
            </summary>
            <param name="rootPathToTrim"></param>
            <param name="path"></param>
            <param name="loadExceptions"></param>
            <param name="recurse"></param>
            <param name="buildFileHashes"></param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.GetDirectoryEntry(Inedo.BuildMaster.Files.GetDirectoryEntryCommand)">
            <summary>
            Returns the contents of a file system directory.
            </summary>
            <param name="command">Specifies information about the type of file system enumeration to perform.</param>
            <returns>Contents of the specified directory and any exceptions thrown during enumeration.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.CopyFiles(System.String,System.String)">
            <summary>
            Copies files and subfolders from <paramref name="sourceFolder"/> to <paramref name="targetFolder"/>.
            </summary>
            <param name="sourceFolder">The source path to copy files from.</param>
            <param name="targetFolder">The target path to copy files to. If the folder doesn't exist, it is created.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.MoveFiles(System.String,System.String,System.Boolean)">
            <summary>
            Moves files and subfolders from <paramref name="sourceFolder"/> to <paramref name="targetFolder"/>.
            </summary>
            <param name="sourceFolder">The path of the folder containing items to move.</param>
            <param name="targetFolder">The path of the folder to move items to. If it does not exist, it is created.</param>
            <param name="overwrite">Value indicating whether to overwrite files in the target folder.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.MoveFile(System.String,System.String,System.Boolean)">
            <summary>
            Moves a file.
            </summary>
            <param name="sourceFile">File to move.</param>
            <param name="targetFile">New name and path of file.</param>
            <param name="overwrite">Value indicating whether target file may be overwritten.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.ClearFolder(System.String)">
            <summary>
            Deletes all files and subfolders in a folder (but not the folder itself).
            </summary>
            <param name="path">The path of the folder to empty.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.ClearFolder(System.String,System.Boolean)">
            <summary>
            Deletes all files in a folder (but not the folder itself).
            </summary>
            <param name="path">The path of the folder to empty.</param>
            <param name="recurse">Value indicating whether subfolders should also be deleted.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.DeleteFile(System.String)">
            <summary>
            Deletes a file.
            </summary>
            <param name="path">The path of the file.</param>
            <remarks>
            This method will delete a file even if it is marked as hidden or read-only.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.DeleteFolder(System.String)">
            <summary>
            Deletes all files in a folder and the folder itself.
            </summary>
            <param name="path">The path of the folder to delete.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.TransferFile(Inedo.BuildMaster.Agents.AgentHelper,System.String,Inedo.BuildMaster.Agents.AgentHelper,System.String)">
            <summary>
            Transfers a file from a source server to a target server.
            </summary>
            <param name="sourceAgentHelper">An <see cref="T:Inedo.BuildMaster.Agents.AgentHelper"/> running on the server to transfer from.</param>
            <param name="sourceFilePath">The file path on the source server to transfer from.</param>
            <param name="targetAgentHelper">An <see cref="T:Inedo.BuildMaster.Agents.AgentHelper"/> running on the server to transfer to.</param>
            <param name="targetFilePath">The file path on the target server to transfer to.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.TransferFile(Inedo.BuildMaster.Extensibility.Agents.IFileOperationsExecuter,System.String,Inedo.BuildMaster.Extensibility.Agents.IFileOperationsExecuter,System.String)">
            <summary>
            Transfers a file from a source server to a target server.
            </summary>
            <param name="sourceAgent">An instance which implements <see cref="T:Inedo.BuildMaster.Extensibility.Agents.IFileOperationsExecuter"/> to transfer from.</param>
            <param name="sourceFilePath">The file path on the source server to transfer from.</param>
            <param name="targetAgent">An instance which implements <see cref="T:Inedo.BuildMaster.Extensibility.Agents.IFileOperationsExecuter"/> to transfer to.</param>
            <param name="targetFilePath">The file path on the target server to transfer to.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.ExtractZipFile(System.String,System.String,System.Boolean)">
            <summary>
            Extracts the zip file.
            </summary>
            <param name="sourceFileName">Name of the source file.</param>
            <param name="targetPath">The target path.</param>
            <param name="overwrite">if set to <c>true</c> [overwrite].</param>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Files.Comparison">
            <summary>
            A set of static methods for file/directory comparison.
            </summary>
            <remarks>
            <para>
            File masks are almost always sent in as a string array. Our file masks
            work mostly like DOS, in that:
            </para>
            <list type="table">
            <item>
                <term>*</term>
                <description>Matches zero or more characters</description>
            </item>
            <item>
                <term>?</term>
                <description>Matches exactly one character</description>
            </item>
            </list>
            <para>
            So, Build*.dll will match BuildMaster.dll, BuildMaster2.dll, but not BUildMaster.pdb
            </para>
            <para>
            When a mask starts with a !, anything that doesn't match that wildcard is matched. When
            used in a set, ! masks take precedence over matches. For example, the masks
             * AND !* will match nothing
             *.dll AND !BuildMaster*.dll will match all .dll files that don't start with BuildMaster
            is matched.
            </para>
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.Comparison.GetMatches(System.String,Inedo.BuildMaster.Files.SystemEntryInfo,System.String[])">
            <summary>
            Returns an array of <see cref="T:Inedo.BuildMaster.Files.SystemEntryInfo"/> items which match the specified search masks.
            </summary>
            <param name="pathRoot">Root path in which to search for matches.</param>
            <param name="entry">Top-level entry containing sub-entries to mask.</param>
            <param name="masks">Masks used to filter sub-entries.</param>
            <returns>Matching <see cref="T:Inedo.BuildMaster.Files.SystemEntryInfo"/> items.</returns>
            <remarks>
            For a description of file masking, see <see cref="T:Inedo.BuildMaster.Util.Files.Comparison"/>.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.Comparison.GetNonMatches(System.String,Inedo.BuildMaster.Files.SystemEntryInfo,System.String[])">
            <summary>
            Returns an array of <see cref="T:Inedo.BuildMaster.Files.SystemEntryInfo"/> items which do not match the specified search masks.
            </summary>
            <param name="pathRoot">Root path in which to search for non-matches.</param>
            <param name="entry">Top-level entry containing sub-entries to mask.</param>
            <param name="masks">Masks used to filter sub-entries.</param>
            <returns>Non-matching <see cref="T:Inedo.BuildMaster.Files.SystemEntryInfo"/> items.</returns>
            <remarks>
            For a description of file masking, see <see cref="T:Inedo.BuildMaster.Util.Files.Comparison"/>.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.Comparison.GetMatches(System.String,System.String[],System.String[])">
            <summary>
            Returns an array of items which match the specified search masks.
            </summary>
            <param name="pathRoot">Root path in which to search for matches.</param>
            <param name="paths">Sub-entries to mask.</param>
            <param name="masks">Masks used to filter sub-entries.</param>
            <returns>Matching items.</returns>
            <remarks>
            For a description of file masking, see <see cref="T:Inedo.BuildMaster.Util.Files.Comparison"/>.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.Comparison.GetNonMatches(System.String,System.String[],System.String[])">
            <summary>
            Returns an array of items which do not match the specified search masks.
            </summary>
            <param name="pathRoot">Root path in which to search for non-matches.</param>
            <param name="paths">Sub-entries to mask.</param>
            <param name="masks">Masks used to filter sub-entries.</param>
            <returns>Non-matching items.</returns>
            <remarks>
            For a description of file masking, see <see cref="T:Inedo.BuildMaster.Util.Files.Comparison"/>.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.Comparison.BuildMissingOrChangedFiles(Inedo.BuildMaster.Files.FileEntryInfo[],Inedo.BuildMaster.Files.FileEntryInfo[])">
            <summary>
            Compares two sets of <see cref="T:Inedo.BuildMaster.Files.FileEntryInfo"/> items and returns a set
            of files that are missing or different in the destination set.
            </summary>
            <param name="sourceFiles">Source set of files.</param>
            <param name="destinationFiles">Destination set of files.</param>
            <returns><see cref="T:Inedo.BuildMaster.Files.FileEntryInfo"/> items that are missing or different in the destination set.</returns>
            <remarks>
            In order to determine whether a file in the destination is different from
            the source, both files must implement either <see cref="T:Inedo.BuildMaster.Files.IExtendedFileEntry"/>
            or <see cref="T:Inedo.BuildMaster.Files.IHashedFileEntry"/>; otherwise, the files are assumed to be
            identical.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.Comparison.FindEntry(System.String,Inedo.BuildMaster.Files.SystemEntryInfo[])">
            <summary>
            Searches a list of entries for a matching name.
            </summary>
            <param name="name">Name of the entry to search for.</param>
            <param name="entries">List of entries to search.</param>
            <returns><see cref="T:Inedo.BuildMaster.Files.SystemEntryInfo"/> with a matching name if found; otherwise null.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.Comparison.BuildMissingTargetEntries(Inedo.BuildMaster.Files.SystemEntryInfo[],Inedo.BuildMaster.Files.SystemEntryInfo[])">
            <summary>
            Compares two sets of <see cref="T:Inedo.BuildMaster.Files.SystemEntryInfo"/> items and returns a list of items that exist
            in the source but not in the target.
            </summary>
            <param name="sourceEntries">Source set of items.</param>
            <param name="targetEntries">Target set of items.</param>
            <returns>Items that exist in the source set of items but not in the target set.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.Comparison.CompareDirectories(Inedo.BuildMaster.Files.DirectoryEntryInfo,Inedo.BuildMaster.Files.DirectoryEntryInfo,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Detects differences between a source and target directory.
            </summary>
            <param name="sourceDirectory">The source directory.</param>
            <param name="targetDirectory">The target directory.</param>
            <param name="filesToCopy">Files present in the source but not in the target.</param>
            <param name="foldersToCopy">Folders present in the source but not in the target.</param>
            <param name="filesToDelete">Files present in the target but not in the source.</param>
            <param name="foldersToDelete">Folders present in the target but not in the source.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Files.DirectoryInfoState">
            <summary>
            Stores temporary state information to help during recursive enumeration.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Files.DirectoryInfoState.#ctor(Inedo.BuildMaster.Files.DirectoryEntryBuilder,System.IO.DirectoryInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Util.Files.DirectoryInfoState"/> class.
            </summary>
            <param name="entry">The entry to add new items to.</param>
            <param name="info">The file system directory to enumerate.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Util.Files.DirectoryInfoState.Entry">
            <summary>
            Gets the entry to add new items to.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Util.Files.DirectoryInfoState.Info">
            <summary>
            Gets the file system directory to enumerate.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Persistence">
            <summary>
            Contains static utility methods for working with BuildMaster's persistence model.
            </summary>
            <seealso cref="T:Inedo.BuildMaster.PersistentAttribute"/>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Persistence.GetPersistentProperties(System.Type,System.Boolean)">
            <summary>
            Inspects the specified type and, optionally, its interfaces, and returns properties with <see cref="T:Inedo.BuildMaster.PersistentAttribute"/>
            </summary>
            <param name="typ"></param>
            <param name="inspectInterfaces"></param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Persistence.SerializeToPersistedObjectXml(System.Object)">
            <summary>
            Serializes the specified object by retreiving only properties with the
            Persisted attribute
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Persistence.SerializeArrayToPersistedObjectXmlArray(System.Object[])">
            <summary>
            Serializes the specified object array by retrieving only properties with the
            Persisted attribute
            </summary>
            <param name="objAry"></param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Persistence.DeSerializeFromPersistedObjectXml(System.String)">
            <summary>
            Des the serialize from persisted object XML.
            </summary>
            <param name="objXml">The obj XML.</param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Persistence.DeSerializeArrayFromPersistedObjectXmlArray(System.Type,System.String[])">
            <summary>
            De-serialize array from persisted object XML array.
            </summary>
            <param name="arrayType">Type of the array.</param>
            <param name="objXmls">The obj XMLS.</param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Persistence.DeSerializeArrayFromPersistedObjectXmlArray``1(System.String[])">
            <summary>
            De-serialize array from persisted object XML array.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objXmls">The obj XMLS.</param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Persistence.DeSerializeFromPersistedObjectXml``1(System.String)">
            <summary>
            De-serialize from persisted object XML.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objXml">The obj XML.</param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Persistence.SerializeToBase64String(System.Object)">
            <summary>
            Returns a string representing the Base-64 Converted output of the
            Binary Formmater
            </summary>
            <param name="graph"></param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Persistence.DeSerializeFromBase64String(System.String)">
            <summary>
            De-serialize from base64 string.
            </summary>
            <param name="s">The s.</param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Persistence.SerializeStringArray(System.String[])">
            <summary>
            Serializes the string array.
            </summary>
            <param name="strings">The strings.</param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Persistence.DeSerializeToStringArray(System.String)">
            <summary>
            De-serialize to string array.
            </summary>
            <param name="serialized">The serialized.</param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Persistence.ExecuteMethodOnXmlPersistedObject(System.String,System.String,System.Object[])">
            <summary>
            Executes the method on XML persisted object.
            </summary>
            <param name="objectXml">The object XML.</param>
            <param name="methodName">Name of the method.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Persistence.CreateInstance(System.String,System.String)">
            <summary>
            Returns a new instance of a persistent object type.
            </summary>
            <param name="assemblyName">Name of the assembly containing the type.</param>
            <param name="typeName">Name of the type.</param>
            <returns>New instance of the specified type.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Persistence.OnCreatePersistentObject(Inedo.BuildMaster.Extensibility.CreatePersistentObjectEventArgs)">
            <summary>
            Raises the <see cref="E:CreatePersistentObject"/> event.
            </summary>
            <param name="e">The <see cref="T:Inedo.BuildMaster.Extensibility.CreatePersistentObjectEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Persistence.OnTranslatePersistentType(Inedo.BuildMaster.Extensibility.TranslatePersistentTypeEventArgs)">
            <summary>
            Raises the <see cref="E:TranslatePersistentType"/> event.
            </summary>
            <param name="e">The <see cref="T:Inedo.BuildMaster.Extensibility.TranslatePersistentTypeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Inedo.BuildMaster.Util.Persistence.CreatePersistentObject">
            <summary>
            Occurs when a persistent object needs to be constructed.
            </summary>
        </member>
        <member name="E:Inedo.BuildMaster.Util.Persistence.TranslatePersistentType">
            <summary>
            Occurs when a persistent object is about to be serialized.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Persistence.FieldSerialization">
            <summary>
            Contains static utility methods for serializing and deserializing fields.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Persistence.FieldSerialization.ReadFields(System.Xml.XmlReader,System.Object)">
            <summary>
            Deserializes fields from a <see cref="T:System.Xml.XmlReader"/> to an object.
            </summary>
            <param name="reader">XML from which fields are read.</param>
            <param name="obj">Object to set field values.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Persistence.FieldSerialization.WriteFields(System.Xml.XmlWriter,System.Object)">
            <summary>
            Serializes fields on an object to a <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">XML to write fields to.</param>
            <param name="obj">Object whose fields are serialized.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Util.Int">
            <summary>
            A collection of static <see cref="T:System.Int32"/> related utility methods.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Int.ParseN(System.String)">
            <summary>
            Converts the specified string representation of an integer to its <see cref="T:System.Int32"/> equivalent
            using <see cref="M:System.Int32.TryParse(System.String,System.Int32@)"/>. If the string is not a valid integer, null is returned.
            </summary>
            <param name="intString">String to try to parse.</param>
            <returns>Resulting <see cref="T:System.Int32"/> value if parsing was successful; otherwise null.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.Int.ParseZ(System.String)">
            <summary>
            Converts the specified string representation of an integer to its <see cref="T:System.Int32"/> equivalent
            using <see cref="M:System.Int32.TryParse(System.String,System.Int32@)"/>. If the string is not a valid integer, 0 is returned.
            </summary>
            <param name="intString">String to try to parse.</param>
            <returns>Resulting <see cref="T:System.Int32"/> value if parsing was successful; otherwise 0.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Util.DateTime">
            <summary>
            A collection of static <see cref="T:System.DateTime"/> related utility methods.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.DateTime.ParseN(System.String)">
            <summary>
            Converts the specified string representation of a date and time to its <see cref="T:System.DateTime"/> equivalent
            using <see cref="M:System.DateTime.TryParse(System.String,System.DateTime@)"/>; if the string is not a valid date time, null is returned
            </summary>
            <param name="dateTimeString">String to try to parse.</param>
            <returns>Resulting <see cref="T:System.DateTime"/> value if parsing was successful; otherwise null.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.DateTime.RelativeDate(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Calculates the relative time from the specified dates
            </summary>
            <param name="referenceFromDate">The reference <see cref="T:System.DateTime"/> used to calculate relative time. Typically, this is <see cref="P:System.DateTime.Now"/>.</param>
            <param name="toDate">The <see cref="T:System.DateTime"/> with which the reference value will be compared.</param>
            <returns><see cref="T:System.String"/> containing relative time if dates are valid, otherwise an empty string.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Util.TimeSpan">
            <summary>
            A collection of static <see cref="T:System.TimeSpan"/> related utility methods.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.TimeSpan.GetTimeSpanHtml(System.TimeSpan)">
            <summary>
            Returns an HTML string displaying a <see cref="T:System.TimeSpan"/> in a common format.
            </summary>
            <param name="timeSpan"><see cref="T:System.TimeSpan"/> to format as HTML.</param>
            <returns>HTML-formatted <see cref="T:System.TimeSpan"/> as a string.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.TimeSpan.GetTimeSpanHtml(System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            Returns an HTML string displaying a time range in a common format.
            </summary>
            <param name="start">Initial (starting) time.</param>
            <param name="end">Ending time; null indicates an unbounded range.</param>
            <returns>HTML-formatted time range.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.TimeSpan.GetTimeSpanText(System.TimeSpan)">
            <summary>
            Returns a string displaying a <see cref="T:System.TimeSpan"/> in a common format.
            </summary>
            <param name="timeSpan"><see cref="T:System.TimeSpan"/> to format as a string.</param>
            <returns><see cref="T:System.TimeSpan"/> formatted as a string.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Util.TimeSpan.GetTimeSpanText(System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            Returns a string displaying a time range in a common format.
            </summary>
            <param name="start">Initial (starting) time.</param>
            <param name="end">Ending time; null indicates an unbounded range.</param>
            <returns>Time range formatted as a string.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Util.DataTable">
            <summary>
            A collection of static <see cref="T:System.Data.DataTable"/> related utility methods.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Util.DataTable.LastRow(System.Data.DataTable)">
            <summary>
            Returns the last row of a <see cref="T:System.Data.DataTable"/> (or null if the table is empty).
            </summary>
            <param name="dataTable"><see cref="T:System.Data.DataTable"/> to return the last row of.</param>
            <returns>Last row of the specified <see cref="T:System.Data.DataTable"/> if the table is not empty; otherwise null.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Data.Domains">
            <summary>
            Allowed values for various discrete domains
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Data.Domains.YN">
            <summary>
            Represents the YNINDICATOR User Defined Type
            </summary>
            <remarks>
            This class exists *primarily* to serve as an example/template
            for other ("real") domains; obviously, it's perfectly acceptable
            to use a "Y" or "N" string literal instead of this domain
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.YN.Validate(System.String)">
            <summary>
            Validates that the code exists within the domain
            </summary>
            <param name="code">Code to validate</param>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.YN.GetName(System.String)">
            <summary>
            Returns the Display-Friendly name of the code
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.YN.ToArray">
            <summary>
            Returns a string array of domain codes
            </summary>
            <returns></returns>
        </member>
        <member name="T:Inedo.BuildMaster.Data.Domains.ReleaseStatus">
            <summary>
            Represents the ReleaseStatus Domain
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.ReleaseStatus.Validate(System.String)">
            <summary>
            Validates that the code exists within the domain
            </summary>
            <param name="code">Code to validate</param>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.ReleaseStatus.GetName(System.String)">
            <summary>
            Returns the Display-Friendly name of the code within ReleaseStatus
            </summary>
            <param name="code">value of a constant within the ReleaseStatus domain</param>
            <returns>display-friendly name of code</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.ReleaseStatus.ToArray">
            <summary>
            Returns a string array of domain codes
            </summary>
            <returns>codes within the ReleaseStatus domain</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Data.Domains.BuildScheduleTypes">
            <summary>
            Represents the BuildScheduleTypes Domain
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.BuildScheduleTypes.Validate(System.String)">
            <summary>
            Validates that the code exists within the domain
            </summary>
            <param name="code">Code to validate</param>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.BuildScheduleTypes.GetName(System.String)">
            <summary>
            Returns the Display-Friendly name of the code within BuildScheduleTypes
            </summary>
            <param name="code">value of a constant within the BuildScheduleTypes domain</param>
            <returns>display-friendly name of code</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.BuildScheduleTypes.ToArray">
            <summary>
            Returns a string array of domain codes
            </summary>
            <returns>codes within the BuildScheduleTypes domain</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Data.Domains.ReleaseNumberSchemes">
            <summary>
            Represents the ReleaseNumberSchemes Domain
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.ReleaseNumberSchemes.Validate(System.String)">
            <summary>
            Validates that the code exists within the domain
            </summary>
            <param name="code">Code to validate</param>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.ReleaseNumberSchemes.GetName(System.String)">
            <summary>
            Returns the Display-Friendly name of the code within ReleaseNumberSchemes
            </summary>
            <param name="code">value of a constant within the ReleaseNumberSchemes domain</param>
            <returns>display-friendly name of code</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.ReleaseNumberSchemes.ToArray">
            <summary>
            Returns a string array of domain codes
            </summary>
            <returns>codes within the ReleaseNumberSchemes domain</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Data.Domains.ExecutionStatus">
            <summary>
            Represents the ExecutionStatus Domain
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.ExecutionStatus.Validate(System.String)">
            <summary>
            Validates that the code exists within the domain
            </summary>
            <param name="code">Code to validate</param>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.ExecutionStatus.GetName(System.String)">
            <summary>
            Returns the Display-Friendly name of the code within ExecutionStatus
            </summary>
            <param name="code">value of a constant within the ExecutionStatus domain</param>
            <returns>display-friendly name of code</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.ExecutionStatus.ToArray">
            <summary>
            Returns a string array of domain codes
            </summary>
            <returns>codes within the ExecutionStatus domain</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Data.Domains.ProviderTypes">
            <summary>
            Represents the ProviderTypes Domain
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.ProviderTypes.Validate(System.String)">
            <summary>
            Validates that the code exists within the domain
            </summary>
            <param name="code">Code to validate</param>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.ProviderTypes.GetName(System.String)">
            <summary>
            Returns the Display-Friendly name of the code within ProviderTypes
            </summary>
            <param name="code">value of a constant within the ProviderTypes domain</param>
            <returns>display-friendly name of code</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.ProviderTypes.ToArray">
            <summary>
            Returns a string array of domain codes
            </summary>
            <returns>codes within the ProviderTypes domain</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Data.Domains.PromotionRequirementStatus">
            <summary>
            Represents the PromotionRequirementStatus Domain
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.PromotionRequirementStatus.Validate(System.String)">
            <summary>
            Validates that the code exists within the domain
            </summary>
            <param name="code">Code to validate</param>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.PromotionRequirementStatus.GetName(System.String)">
            <summary>
            Returns the Display-Friendly name of the code within PromotionRequirementStatus
            </summary>
            <param name="code">value of a constant within the PromotionRequirementStatus domain</param>
            <returns>display-friendly name of code</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.PromotionRequirementStatus.ToArray">
            <summary>
            Returns a string array of domain codes
            </summary>
            <returns>codes within the PromotionRequirementStatus domain</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Data.Domains.ServerTypes">
            <summary>
            Represents the ServerTypes Domain
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.ServerTypes.Validate(System.String)">
            <summary>
            Validates that the code exists within the domain
            </summary>
            <param name="code">Code to validate</param>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.ServerTypes.GetName(System.String)">
            <summary>
            Returns the Display-Friendly name of the code within ServerTypes
            </summary>
            <param name="code">value of a constant within the ServerTypes domain</param>
            <returns>display-friendly name of code</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.ServerTypes.ToArray">
            <summary>
            Returns a string array of domain codes
            </summary>
            <returns>codes within the ServerTypes domain</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Data.Domains.BuildScheduleReleaseTypeFilter">
            <summary>
            Represents the BuildScheduleReleaseTypeFilter Domain
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.BuildScheduleReleaseTypeFilter.Validate(System.String)">
            <summary>
            Validates that the code exists within the domain
            </summary>
            <param name="code">Code to validate</param>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.BuildScheduleReleaseTypeFilter.GetName(System.String)">
            <summary>
            Returns the Display-Friendly name of the code within BuildScheduleReleaseTypeFilter
            </summary>
            <param name="code">value of a constant within the BuildScheduleReleaseTypeFilter domain</param>
            <returns>display-friendly name of code</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.BuildScheduleReleaseTypeFilter.ToArray">
            <summary>
            Returns a string array of domain codes
            </summary>
            <returns>codes within the BuildScheduleReleaseTypeFilter domain</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Data.Domains.VariableUsage">
            <summary>
            Represents the VariableUsage Domain
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.VariableUsage.Validate(System.String)">
            <summary>
            Validates that the code exists within the domain
            </summary>
            <param name="code">Code to validate</param>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.VariableUsage.GetName(System.String)">
            <summary>
            Returns the Display-Friendly name of the code within VariableUsage
            </summary>
            <param name="code">value of a constant within the VariableUsage domain</param>
            <returns>display-friendly name of code</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.VariableUsage.ToArray">
            <summary>
            Returns a string array of domain codes
            </summary>
            <returns>codes within the VariableUsage domain</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Data.Domains.SubscriptionTypes">
            <summary>
            Represents the SubscriptionTypes Domain
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.SubscriptionTypes.Validate(System.String)">
            <summary>
            Validates that the code exists within the domain
            </summary>
            <param name="code">Code to validate</param>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.SubscriptionTypes.GetName(System.String)">
            <summary>
            Returns the Display-Friendly name of the code within SubscriptionTypes
            </summary>
            <param name="code">value of a constant within the SubscriptionTypes domain</param>
            <returns>display-friendly name of code</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.SubscriptionTypes.ToArray">
            <summary>
            Returns a string array of domain codes
            </summary>
            <returns>codes within the SubscriptionTypes domain</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Data.Domains.EventScopes">
            <summary>
            Represents the EventScopes Domain
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.EventScopes.Validate(System.String)">
            <summary>
            Validates that the code exists within the domain
            </summary>
            <param name="code">Code to validate</param>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.EventScopes.GetName(System.String)">
            <summary>
            Returns the Display-Friendly name of the code within EventScopes
            </summary>
            <param name="code">value of a constant within the EventScopes domain</param>
            <returns>display-friendly name of code</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.EventScopes.ToArray">
            <summary>
            Returns a string array of domain codes
            </summary>
            <returns>codes within the EventScopes domain</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Data.Domains.DeployableInclusionTypes">
            <summary>
            Represents the DeployableInclusionTypes Domain
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.DeployableInclusionTypes.Validate(System.String)">
            <summary>
            Validates that the code exists within the domain
            </summary>
            <param name="code">Code to validate</param>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.DeployableInclusionTypes.GetName(System.String)">
            <summary>
            Returns the Display-Friendly name of the code within DeployableInclusionTypes
            </summary>
            <param name="code">value of a constant within the DeployableInclusionTypes domain</param>
            <returns>display-friendly name of code</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.DeployableInclusionTypes.ToArray">
            <summary>
            Returns a string array of domain codes
            </summary>
            <returns>codes within the DeployableInclusionTypes domain</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Data.Domains.UserClassTypes">
            <summary>
            Represents the UserClassType Domain
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.UserClassTypes.Validate(System.String)">
            <summary>
            Validates that the code exists within the domain
            </summary>
            <param name="code">Code to validate</param>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.UserClassTypes.GetName(System.String)">
            <summary>
            Returns the Display-Friendly name of the code
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.UserClassTypes.ToArray">
            <summary>
            Returns a string array of domain codes
            </summary>
            <returns></returns>
        </member>
        <member name="T:Inedo.BuildMaster.Data.Domains.BuildReportOutputTypes">
            <summary>
            Represents the BuildReportOutputTypes Domain
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.BuildReportOutputTypes.Validate(System.String)">
            <summary>
            Validates that the code exists within the domain
            </summary>
            <param name="code">Code to validate</param>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.BuildReportOutputTypes.GetName(System.String)">
            <summary>
            Returns the Display-Friendly name of the code within BuildReportOutputTypes
            </summary>
            <param name="code">value of a constant within the BuildReportOutputTypes domain</param>
            <returns>display-friendly name of code</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.BuildReportOutputTypes.ToArray">
            <summary>
            Returns a string array of domain codes
            </summary>
            <returns>codes within the BuildReportOutputTypes domain</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Data.Domains.UpgradeCodes">
            <summary>
            Represents the BuildMaster Plus Features.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.UpgradeCodes.Validate(System.String)">
            <summary>
            Validates that the code exists within the domain
            </summary>
            <param name="code">Code to validate</param>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.UpgradeCodes.GetName(System.String)">
            <summary>
            Returns the Display-Friendly name of the code
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Data.Domains.UpgradeCodes.ToArray">
            <summary>
            Returns a string array of domain codes
            </summary>
            <returns></returns>
        </member>
        <member name="T:Inedo.BuildMaster.Diagnostics.MessageLevels">
            <summary>
            Indicates the significance of a logged message
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Diagnostics.MessageLevels.Debug">
            <summary>
            To be used for development debugging/analysis purposes
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Diagnostics.MessageLevels.Information">
            <summary>
            To be used for configuration debugging/analysis purposes
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Diagnostics.MessageLevels.Warning">
            <summary>
            An unexpected condition that is recoverable
            </summary>
        </member>
        <member name="F:Inedo.BuildMaster.Diagnostics.MessageLevels.Error">
            <summary>
            An unexpected condition that is not recoverable
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Diagnostics.ContextNames">
            <summary>
            Specifies the available context names used when using <see cref="T:Inedo.BuildMaster.Diagnostics.Tracer"/>
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.BuildMasterAssemblyAttribute">
            <summary>
            Marks an assembly as a BuildMaster Extension assembly.
            </summary>
            <remarks>
            This attribute is required for all BuildMaster Extensions.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.BuildMasterAssemblyAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.BuildMasterAssemblyAttribute"/> class.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.CoreConfigFactoryConfiguration">
            <summary>
            Provides the CoreConfig factory.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Files.DirectoryEntryInfo">
            <summary>
            Represents a directory in a file system.
            </summary>
            <remarks>
            This class is immutable. For a modifiable version
            that can be used to build directory trees, see <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryBuilder"/>.
            </remarks>
            <seealso cref="T:Inedo.BuildMaster.Files.DirectoryEntryBuilder"/>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryInfo.#ctor(System.String,System.String,Inedo.BuildMaster.Files.DirectoryEntryInfo[],Inedo.BuildMaster.Files.FileEntryInfo[])">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Files.DirectoryEntryInfo"/> class.
            </summary>
            <param name="name">The name of the directory.</param>
            <param name="path">The path of the directory.</param>
            <param name="subdirs">The subdirectories inside the directory.</param>
            <param name="files">The files inside the directory.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Files.DirectoryEntryInfo.Flatten">
            <summary>
            Returns a flattened collection of this directory entry and all directories below it.
            </summary>
            <returns>Flattened collection of directory entries.</returns>
        </member>
        <member name="P:Inedo.BuildMaster.Files.DirectoryEntryInfo.Name">
            <summary>
            Gets the name of the directory.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.DirectoryEntryInfo.Path">
            <summary>
            Gets the path of the directory.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.DirectoryEntryInfo.SubDirectories">
            <summary>
            Gets the subdirectories contained within the directory.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.DirectoryEntryInfo.Files">
            <summary>
            Gets the files contained within the directory.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Files.ExtendedFileEntryInfo">
            <summary>
            Represents a file with extended information.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Files.IExtendedFileEntry">
            <summary>
            Represents a <see cref="T:Inedo.BuildMaster.Files.FileEntryInfo"/> with extended information.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.IExtendedFileEntry.Size">
            <summary>
            Gets the size of the file in bytes.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.IExtendedFileEntry.LastModifiedDate">
            <summary>
            Gets the date (UTC) the file was last modified.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Files.ExtendedFileEntryInfo.#ctor(System.String,System.String,System.Int64,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Files.ExtendedFileEntryInfo"/> class.
            </summary>
            <param name="name">The name of the file.</param>
            <param name="path">The path of the file.</param>
            <param name="size">The size of the file.</param>
            <param name="lastModified">The last modified date (UTC) of the file.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Files.ExtendedFileEntryInfo.#ctor(System.String,System.String,System.Int64,System.DateTime,System.IO.FileAttributes)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Files.ExtendedFileEntryInfo"/> class.
            </summary>
            <param name="name">The name of the file.</param>
            <param name="path">The path of the file.</param>
            <param name="size">The size of the file.</param>
            <param name="lastModified">The last modified date (UTC) of the file.</param>
            <param name="fileAttributes">The attributes of the file.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Files.ExtendedFileEntryInfo.Size">
            <summary>
            Gets the size of the file in bytes.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.ExtendedFileEntryInfo.LastModifiedDate">
            <summary>
            Gets the date (UTC) the file was last modified.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Files.ExtendedFileEntryInfo.Attributes">
            <summary>
            Gets the attributes.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Files.ExtendedHashedFileEntryInfo">
            <summary>
            Represents a file with extended properties and a hash.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Files.ExtendedHashedFileEntryInfo.#ctor(System.String,System.String,System.Int64,System.DateTime,System.IO.FileAttributes,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Files.ExtendedHashedFileEntryInfo"/> class.
            </summary>
            <param name="name">The name of the file.</param>
            <param name="path">The path of the file.</param>
            <param name="size">The size of the file.</param>
            <param name="lastModified">The last modified date (UTC) of the file.</param>
            <param name="fileAttributes">The attributes of the file.</param>
            <param name="fileHash">The hash string of the file.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Files.ExtendedHashedFileEntryInfo.FileHash">
            <summary>
            Gets the hash string of the file.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.PersistentAttribute">
            <summary>
            Marks a property as persistent. A persistent property is stored in BuildMaster's
            database as part of the object's configuration. Persistent properties are also
            serialized to remote agents prior to execution.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.PersistentAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.PersistentAttribute"/> class.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.NotAvailableException">
            <summary>
            Exception thrown when a provider is not available.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.NotAvailableException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.NotAvailableException"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.NotAvailableException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.NotAvailableException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.NotAvailableException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.NotAvailableException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.NotAvailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.NotAvailableException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.ConnectionException">
            <summary>
            Exception thrown when a provider cannot connect to its source.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ConnectionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ConnectionException"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ConnectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ConnectionException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ConnectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ConnectionException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ConnectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ConnectionException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.ProviderPropertiesAttribute">
            <summary>
            Describes a provider to the user.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.ProviderPropertiesAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ProviderPropertiesAttribute"/> class.
            </summary>
            <param name="name">The friendly name of the provider.</param>
            <param name="desc">The description of the provider.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.Database.ChangeScript">
            <summary>
            Represents a change script that has been executed against a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Database.DatabaseProviderBase"/>.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Database.ChangeScript.#ctor(System.Int64,System.Int32,System.String,System.DateTime,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Database.ChangeScript"/> class.
            </summary>
            <param name="numericReleaseNumber">The numeric release number.</param>
            <param name="scriptId">The script ID.</param>
            <param name="name">The script name.</param>
            <param name="executionDate">The execution date.</param>
            <param name="successfullyExecuted">Value indicating whether the script was successfully executed.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.Database.ChangeScript.NumericReleaseNumber">
            <summary>
            Gets the numeric release number.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.Database.ChangeScript.ScriptId">
            <summary>
            Gets the script's ID.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.Database.ChangeScript.Name">
            <summary>
            Gets the script name.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.Database.ChangeScript.ExecutionDate">
            <summary>
            Gets the date and time the script was executed.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.Database.ChangeScript.SuccessfullyExecuted">
            <summary>
            Gets a value indicating whether the script was executed successfully.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.Database.DatabaseProviderBase">
            <summary>
            Represents a provider that can be used to manage database change operations.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Database.DatabaseProviderBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Database.DatabaseProviderBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Database.DatabaseProviderBase.ExecuteQueries(System.String[])">
            <summary>
            When implemented by a derived class, runs each query in the provided array.
            </summary>
            <param name="queries">An array of query text.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Database.DatabaseProviderBase.ExecuteQuery(System.String)">
            <summary>
            When implemented by a derived class, runs the specified query.
            </summary>
            <param name="query">The database query to execute.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Database.DatabaseProviderBase.OpenConnection">
            <summary>
            May be called to explicitly open a connection that all subsequent queries will use.
            </summary>
            <remarks>
            This is a performance optimization only. Providers do not have to implement this
            method, but calling it on providers that do not support sharing a connection
            will not fail. Regardless, when the queries are completed, <see cref="M:Inedo.BuildMaster.Extensibility.Providers.Database.DatabaseProviderBase.CloseConnection"/>
            should be called explicitly.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Database.DatabaseProviderBase.CloseConnection">
            <summary>
            May be called to explicitly close a connection opened with <see cref="M:Inedo.BuildMaster.Extensibility.Providers.Database.DatabaseProviderBase.OpenConnection"/>.
            </summary>
            <remarks>
            This is a performance optimization only. See <see cref="M:Inedo.BuildMaster.Extensibility.Providers.Database.DatabaseProviderBase.OpenConnection"/>.
            </remarks>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.Database.DatabaseProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string required to connect to the database.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.Directory.DirectoryProviderBase">
            <summary>
            Base class for all user/directory providers.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Directory.DirectoryProviderBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Directory.DirectoryProviderBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Directory.DirectoryProviderBase.GetAllUsers">
            <summary>
            Returns a collection of all users in the system.
            </summary>
            <returns>An enumeration of every user in the system.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Directory.DirectoryProviderBase.GetAllGroupNames">
            <summary>
            Returns a collection of all groups in the system.
            </summary>
            <returns>An enumeration of every group in the system.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Directory.DirectoryProviderBase.GetUser(System.String)">
            <summary>
            Returns a single user based on a user name.
            </summary>
            <returns>An instance of a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Directory.UserInfo"/> which describes the user with the specified user name.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Directory.DirectoryProviderBase.GetUsersInGroup(System.String)">
            <summary>
            Returns a collection of all of the users in a specified group.
            </summary>
            <param name="groupName">Name of the group.</param>
            <returns>An enumeration of every user in the specified group.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.Directory.IAuthenticator">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Directory.DirectoryProviderBase"/> provides user authentication.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Directory.IAuthenticator.ValidateUser(System.String,System.String)">
            <summary>
            Authenticates a user based on user name and password.
            </summary>
            <param name="username">Name of the user.</param>
            <param name="password">The user's password.</param>
            <returns>True if valid login, false if invalid.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Directory.IAuthenticator.SetUserPassword(System.String,System.String)">
            <summary>
            Sets a user's password.
            </summary>
            <param name="username">Name of the user.</param>
            <param name="password">New password of the user.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.Directory.IUserGroupManager">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Directory.DirectoryProviderBase"/> can create
            new users and groups at the source.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Directory.IUserGroupManager.CreateGroup(System.String)">
            <summary>
            Creates the specified group at the source.
            </summary>
            <param name="groupName">Name of the group to create.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Directory.IUserGroupManager.DeleteGroup(System.String)">
            <summary>
            Deletes the specified group at the source.
            </summary>
            <param name="groupName">Name of the group to delete.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Directory.IUserGroupManager.CreateUser(Inedo.BuildMaster.Extensibility.Providers.Directory.UserInfo)">
            <summary>
            Creates the specified user at the source.
            </summary>
            <param name="user">New user to create.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Directory.IUserGroupManager.UpdateUser(Inedo.BuildMaster.Extensibility.Providers.Directory.UserInfo)">
            <summary>
            Updates the specified user at the source. If a password is null or empty, it will remain unchanged.
            </summary>
            <param name="user">User and information to update.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Directory.IUserGroupManager.DeleteUser(System.String)">
            <summary>
            Permanently deletes a user from the source.
            </summary>
            <param name="userName">Name of the user to delete.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Directory.IUserGroupManager.InstantiateUserInfoClass(System.String,System.String,System.String,System.String[])">
            <summary>
            Returns a new <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Directory.UserInfo"/> with the supplied values.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="displayName">The display name of the user.</param>
            <param name="emailAddress">The email address of the user.</param>
            <param name="groups">The groups to which the user belongs.</param>
            <returns>New <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Directory.UserInfo"/> instance with the supplied values.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.Directory.UserInfo">
            <summary>
            Contains information about a user in a directory.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Directory.UserInfo.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Directory.UserInfo"/> class from being created.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.Directory.UserInfo.#ctor(System.String,System.String,System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.Directory.UserInfo"/> class.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="displayName">The user's display name.</param>
            <param name="emailAddress">The email address of the user.</param>
            <param name="groups">The groups to which the user belongs.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.Directory.UserInfo.UserName">
            <summary>
            Gets the name of the user.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.Directory.UserInfo.DisplayName">
            <summary>
            Gets the display-friendly name of the user.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.Directory.UserInfo.EmailAddress">
            <summary>
            Gets the email address of the user.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.Directory.UserInfo.GroupNames">
            <summary>
            Gets an array of group names to which the user belongs.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.CategoryBase">
            <summary>
            Represents a categorization of issues in an issue tracking system.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.CategoryBase.#ctor(System.String,System.String,Inedo.BuildMaster.Extensibility.Providers.IssueTracking.CategoryBase[])">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.CategoryBase"/> class.
            </summary>
            <param name="categoryId">The category ID.</param>
            <param name="categoryName">The friendly name of the category.</param>
            <param name="subCategories">Categories contained within the category; may be null.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.CategoryBase.CategoryId">
            <summary>
            Gets a string that uniquely identifies the category.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.CategoryBase.CategoryName">
            <summary>
            Gets a string that is displayed to the user as the category name.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.CategoryBase.SubCategories">
            <summary>
            Gets subcategories that are part of this category.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.ICategorizedIssue">
            <summary>
            Indicates that an issue is in one or more hierarchical category.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.ICategorizedIssue.Categories">
            <summary>
            Gets the hierarchical list of categories that an issue is contained in.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.ICategoryFilterable">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackingProviderBase"/> can filter issues by category.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.ICategoryFilterable.GetCategories">
            <summary>
            Returns an array of all appropriate categories defined within the provider.
            </summary>
            <remarks>
            The nesting level (i.e. <see cref="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.CategoryBase.SubCategories"/>) can never be less than
            the length of <see cref="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.ICategoryFilterable.CategoryTypeNames"/>.
            </remarks>
            <returns></returns>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.ICategoryFilterable.CategoryIdFilter">
            <summary>
            Gets or sets an array of CategoryId that correspond to the index of the <see>CategoryTypeNames</see>.
            </summary>
            <remarks>
            The length of this array must always be less than or equal the length of the <see>CategoryTypeNames</see>.
            </remarks>
            <example>
            For example, if CategoryTypeNames returns "Project", to filter on ProjectID 12, this would return would be ...
                <code>new string[] { "12" };</code>
            </example>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.ICategoryFilterable.CategoryTypeNames">
            <summary>
            Gets an inheritor-defined array of category types.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IReleaseNumberCloser">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackingProviderBase"/> can close a release
            number at the source.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IReleaseNumberCloser.CloseReleaseNumber(System.String)">
            <summary>
            Closes the specified release number at the source.
            </summary>
            <param name="releaseNumber">Release number to close.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IReleaseNumberCreator">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackingProviderBase"/> can create
            new release numbers at the source.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IReleaseNumberCreator.CreateReleaseNumber(System.String)">
            <summary>
            Creates the specified release number at the source.
            </summary>
            <param name="releaseNumber">Release number to create.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.Issue">
            <summary>
            Base class for an issue in an issue tracker.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.Issue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.Issue"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.Issue.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.Issue"/> class.
            </summary>
            <param name="issueId">The issue ID.</param>
            <param name="issueStatus">The issue status.</param>
            <param name="issueTitle">The issue title.</param>
            <param name="issueDescription">The issue description.</param>
            <param name="releaseNumber">The release number of the issue.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.Issue.IssueId">
            <summary>
            Gets or sets the issue's unique identifier.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.Issue.IssueStatus">
            <summary>
            Gets or sets the issue's status.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.Issue.IssueTitle">
            <summary>
            Gets or sets the issue's title.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.Issue.IssueDescription">
            <summary>
            Gets or sets the issue's description.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.Issue.ReleaseNumber">
            <summary>
            Gets or sets the issue's release number.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackingProviderBase">
            <summary>
            Base class for all issue tracking providers.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackingProviderBase.GetIssueUrl(Inedo.BuildMaster.Extensibility.Providers.IssueTracking.Issue)">
            <summary>
            Returns a URL to the specified issue if the issue tracker is web-based.
            </summary>
            <param name="issue">The issue whose URL is returned.</param>
            <returns>The URL of the specified issue if applicable; otherwise null.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackingProviderBase.GetIssues(System.String)">
            <summary>
            Returns an array of <see cref="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.Issue"/> objects that are for the current
            release.
            </summary>
            <param name="releaseNumber">Release number of issues to return.</param>
            <returns>Array of issues for the specified release.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackingProviderBase.AreAllIssuesClosed(System.String)">
            <summary>
            Returns a value indicating whether all issues are closed for a given release number.
            </summary>
            <param name="releaseNumber">Release number of issues to check.</param>
            <returns>True if all issues are closed for the release; otherwise false.</returns>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackingProviderBase.IsIssueClosed(Inedo.BuildMaster.Extensibility.Providers.IssueTracking.Issue)">
            <summary>
            Returns a value indicating if the specified issue is closed.
            </summary>
            <param name="issue">Issue to check for a closed state.</param>
            <returns>True if issue is closed; otherwise false.</returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IUpdatingProvider">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IssueTrackingProviderBase"/> can update issues.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IUpdatingProvider.AppendIssueDescription(System.String,System.String)">
            <summary>
            Appends the specified text to the specified issue.
            </summary>
            <param name="issueId">Id of the issue.</param>
            <param name="textToAppend">Text to append to the issue description.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IUpdatingProvider.ChangeIssueStatus(System.String,System.String)">
            <summary>
            Changes the specified issue's status.
            </summary>
            <param name="issueId">ID of the issue.</param>
            <param name="newStatus">New status of the issue.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IUpdatingProvider.CloseIssue(System.String)">
            <summary>
            Closes the specified issue.
            </summary>
            <param name="issueId">ID of the issue.</param>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IUpdatingProvider.CanAppendIssueDescriptions">
            <summary>
            Gets a value indicating whether an issue's description can be appended to.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IUpdatingProvider.CanChangeIssueStatuses">
            <summary>
            Gets a value indicating whether an issue's status can be changed.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Providers.IssueTracking.IUpdatingProvider.CanCloseIssues">
            <summary>
            Gets a value indicating whether an issue can be closed.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IUpdatingProvider">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase"/> can update the contents of a file.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IUpdatingProvider.UpdateFileContents(System.String,System.Byte[])">
            <summary>
            When implemented in a derived class, updates the specified file with the specified contents.
            </summary>
            <param name="filePath">Provider file path of the file to update.</param>
            <param name="fileContents">New contents of the file.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IVersioningProvider">
            <summary>
            Indicates that a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.SourceControl.SourceControlProviderBase"/> supports labels.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IVersioningProvider.ApplyLabel(System.String,System.String)">
            <summary>
            When implemented in a derived class, applies the specified label to the specified
            source path.
            </summary>
            <param name="label">Label to apply.</param>
            <param name="sourcePath">Path to apply label to.</param>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Providers.SourceControl.IVersioningProvider.GetLabeled(System.String,System.String,System.String)">
            <summary>
            When implemented in a derived class, retrieves labeled
            source code from the provider's source path into the target path.
            </summary>
            <param name="label">Label of source files to get.</param>
            <param name="sourcePath">Provider source path.</param>
            <param name="targetPath">Target file path.</param>
        </member>
        <member name="T:Inedo.BuildMaster.RequiresInterfaceAttribute">
            <summary>
            Indicates that a class (generally, an <see cref="T:Inedo.BuildMaster.Extensibility.Actions.ActionBase"/>) requires that a class it
            consumes (generally a <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ProviderBase"/>) must implement an interface.
            </summary>
            <remarks>
            This attribute is only relevant for provider-based actions.
            </remarks>
            <seealso cref="T:Inedo.BuildMaster.Extensibility.Actions.ProviderBasedAction`1"/>
        </member>
        <member name="M:Inedo.BuildMaster.RequiresInterfaceAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.RequiresInterfaceAttribute"/> class.
            </summary>
            <param name="requiredInterface">The type of the interface which must be implemented by the related <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ProviderBase"/>.</param>
        </member>
        <member name="P:Inedo.BuildMaster.RequiresInterfaceAttribute.RequiredInterface">
            <summary>
            Gets the type of the interface which must be implemented by the related <see cref="T:Inedo.BuildMaster.Extensibility.Providers.ProviderBase"/>.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Security.UserContext">
            <summary>
            Represents the interactive user behind the current request
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Security.UserContext.Current">
            <summary>
            Gets the current user's context, or null if the current user's context is not avaiable
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Security.UserContext.UserInfo">
            <summary>
            Gets the <see cref="P:Inedo.BuildMaster.Security.UserContext.UserInfo"/> from the current context
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Security.UserContextFactory">
            <summary>
            Represents a factory used to get the current user context
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Security.UserContextFactory.GetCurrentUserContext">
            <summary>
            Returns the current user's context
            </summary>
            <returns></returns>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Variables.VariablePropertiesAttribute">
            <summary>
            Describes a <see cref="T:Inedo.BuildMaster.Extensibility.Variables.VariableBase"/> to the user.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.VariablePropertiesAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Variables.VariablePropertiesAttribute"/> class.
            </summary>
            <param name="name">The friendly name of the variable.</param>
            <param name="desc">The description of the variable.</param>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Variables.VariableBase">
            <summary>
            Base class for all Variables.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.VariableBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Variables.VariableBase"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.VariableBase.Validate">
            <summary>
            Validates that value of the variable is valid.
            </summary>
            <returns>Result of the variable value validation.</returns>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Variables.VariableBase.Value">
            <summary>
            Gets or sets the value of the variable.
            </summary>
            <remarks>
            This value must not be null but may be an empty string.
            </remarks>
        </member>
        <member name="T:Inedo.BuildMaster.Extensibility.Variables.VariableValidationResults">
            <summary>
            Contains the results of a variable validation.
            </summary>
            <remarks>
            When validation is successful, the static <see cref="F:Inedo.BuildMaster.Extensibility.Variables.VariableValidationResults.Valid"/> member should be used.
            </remarks>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.VariableValidationResults.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Variables.VariableValidationResults"/> class from being created.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Extensibility.Variables.VariableValidationResults.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Extensibility.Variables.VariableValidationResults"/> class to describe a failed validation.
            </summary>
            <param name="message">A message indicating why validation failed.</param>
        </member>
        <member name="F:Inedo.BuildMaster.Extensibility.Variables.VariableValidationResults.Valid">
            <summary>
            Represents a valid validation result.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Variables.VariableValidationResults.Message">
            <summary>
            Gets the message associated with the validation results.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Extensibility.Variables.VariableValidationResults.IsValid">
            <summary>
            Gets a value indicating whether validation passed.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Web.CustomSetterAttribute">
            <summary>
            Indicates that a type has a custom Setter
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.CustomSetterAttribute.#ctor(System.Type)">
            <summary>
            Creaets a new instance
            </summary>
            <param name="controlType"></param>
        </member>
        <member name="P:Inedo.BuildMaster.Web.CustomSetterAttribute.ControlType">
            <summary>
            Type of user control
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Web.CustomEditorAttribute">
            <summary>
            Indicates that a type has a custom editor
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.CustomEditorAttribute.#ctor(System.String)">
            <summary>
            Creates a new instance that indicates the custom editor is an embedded resource
            </summary>
            <param name="resourceName"></param>
        </member>
        <member name="M:Inedo.BuildMaster.Web.CustomEditorAttribute.#ctor(System.Type)">
            <summary>
            Creates a new instance that indicates the type 
            </summary>
            <param name="controlType"></param>
        </member>
        <member name="P:Inedo.BuildMaster.Web.CustomEditorAttribute.ResourceName">
            <summary>
            Virtual path to the user control
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Web.CustomEditorAttribute.ControlType">
            <summary>
            Type of user control
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Web.ProxiedException">
            <summary>
            Wraps an exception of another type.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Web.ProxiedException.OriginalExceptionType">
            <summary>
            Gets the original exception type.
            </summary>
        </member>
        <member name="T:Inedo.BuildMaster.Web.SoapExceptionWrapper">
            <summary>
            Contains helper methods to wrap and unwrap <see cref="T:System.Web.Services.Protocols.SoapException"/>
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.SoapExceptionWrapper.WrapException(System.Exception)">
            <summary>
            Wraps the exception.
            </summary>
            <param name="ex">The ex.</param>
            <returns></returns>
        </member>
        <member name="M:Inedo.BuildMaster.Web.SoapExceptionWrapper.UnwrapException(System.Exception)">
            <summary>
            Unwraps the exception.
            </summary>
            <param name="ex">The ex.</param>
            <returns></returns>
        </member>
        <member name="T:Inedo.BuildMaster.Web.UnauthorizedClientException">
            <summary>
            Thrown by an agent when a client attempts to use the service
            without authorization.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.UnauthorizedClientException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inedo.BuildMaster.Web.UnauthorizedClientException"/> class.
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.UnauthorizedClientException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Prevents a default instance of the <see cref="T:Inedo.BuildMaster.Web.UnauthorizedClientException"/> class from being created.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is null.
              </exception>
              
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0).
              </exception>
        </member>
        <member name="P:Inedo.BuildMaster.Web.UnauthorizedClientException.StackTrace">
            <summary>
            Gets a string representation of the frames on the call stack at the time the current exception was thrown.
            </summary>
            <returns>
            A string that describes the contents of the call stack, with the most recent method call appearing first.
              </returns>
              
            <PermissionSet>
              <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*"/>
              </PermissionSet>
        </member>
        <member name="P:Inedo.BuildMaster.Web.UnauthorizedClientException.Source">
            <summary>
            Gets or sets the name of the application or the object that causes the error.
            </summary>
            <returns>
            The name of the application or the object that causes the error.
              </returns>
        </member>
        <member name="P:Inedo.BuildMaster.Web.UnauthorizedClientException.HelpLink">
            <summary>
            Gets or sets a link to the help file associated with this exception.
            </summary>
            <returns>
            The Uniform Resource Name (URN) or Uniform Resource Locator (URL).
              </returns>
        </member>
        <member name="P:Inedo.BuildMaster.Web.UnauthorizedClientException.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
            <returns>
            The error message that explains the reason for the exception, or an empty string("").
              </returns>
        </member>
        <member name="T:Inedo.BuildMaster.Web.UnwrappableException">
            <summary>
            Represents an exception that could not be de-serialized from <see cref="T:Inedo.BuildMaster.Web.SoapExceptionWrapper"/>
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.UnwrappableException.#ctor">
            <summary>
            Creates a new instance
            </summary>
        </member>
        <member name="M:Inedo.BuildMaster.Web.UnwrappableException.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new instance with the specified parameters
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Web.UnwrappableException.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Web.UnwrappableException.StackTrace">
            <summary>
            Gets a string representation of the frames on the call stack at the time the current exception was thrown.
            </summary>
        </member>
        <member name="P:Inedo.BuildMaster.Web.UnwrappableException.Source">
            <summary>
            Gets or sets the name of the application or the object that causes the error.
            </summary>
        </member>
    </members>
</doc>
